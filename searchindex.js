Search.setIndex({"docnames": ["api/class_view_hierarchy", "api/define_CodalFiber_8cpp_1a3458bfe88b083b7a76125b02abe25898", "api/define_CodalFiber_8cpp_1a6896ce0afdd797b310514d053b2cb07e", "api/define_Compass_8cpp_1ac69088477cbf6be32811abd3d31e9ea5", "api/define_ILI9341_8cpp_1a05c1fbaa5809b6e45dd1da9fd0c05fc0", "api/define_ILI9341_8cpp_1a0735e9a5ee316588f5430559b56074c4", "api/define_ILI9341_8cpp_1a086515b5e792ce35f8cd0b875bd1f16e", "api/define_ILI9341_8cpp_1a1380e18775e66a698eb0120f64af8d27", "api/define_ILI9341_8cpp_1a144a76fa56427d7e38c99708fa42e47f", "api/define_ILI9341_8cpp_1a18b8144a0ab0fce95e1873102b72da8a", "api/define_ILI9341_8cpp_1a1be5fe675d09e59287ef886e11c87bcb", "api/define_ILI9341_8cpp_1a2183eaeed3b4f2e82f1f1a5aed9cf8e1", "api/define_ILI9341_8cpp_1a2429382736b6d514ab4085a8ea5951d4", "api/define_ILI9341_8cpp_1a278999b9f435340e6a689165c860050a", "api/define_ILI9341_8cpp_1a2866fa67540c7099f2c5d724196f430e", "api/define_ILI9341_8cpp_1a310ca5d5d75b141c72e36a14e8b2bb8a", "api/define_ILI9341_8cpp_1a31b7dff5fc8d6affa4f328a4de46ce9f", "api/define_ILI9341_8cpp_1a3788bc35c2adfe007f3b6a03b85d2071", "api/define_ILI9341_8cpp_1a37d467e2a578e59844315ee76621fecb", "api/define_ILI9341_8cpp_1a3ac0bad81e82dca703ea78d9f1ad8cd1", "api/define_ILI9341_8cpp_1a44774f69e5dfc0d7b87f5a8bf5cad0e9", "api/define_ILI9341_8cpp_1a4e4b9406383c20af1be6e0e05f319abf", "api/define_ILI9341_8cpp_1a58488419649441aec5166d08b1160837", "api/define_ILI9341_8cpp_1a5e137029ba159bd4a942dbe44fbb45bd", "api/define_ILI9341_8cpp_1a7130c62347e51a4bafb7070ba393ee39", "api/define_ILI9341_8cpp_1a808fd63764a8bf4de696d11e897e68de", "api/define_ILI9341_8cpp_1a85532e0077d505687036b92bd7e70989", "api/define_ILI9341_8cpp_1a91c32c640e65f7e890fdbb5aed29077b", "api/define_ILI9341_8cpp_1a96cd1f1e426827243075de8477439222", "api/define_ILI9341_8cpp_1a97969fc9b0fb77e372d895f647387207", "api/define_ILI9341_8cpp_1a9960c17c0ec3f5adde7cf7fa94f27220", "api/define_ILI9341_8cpp_1a9d46802e696356cd1b7625d36c20e8dd", "api/define_ILI9341_8cpp_1a9e00fc41e2ce41f264f7f19a01bd6b41", "api/define_ILI9341_8cpp_1aa2c11f3421fe0cfd04de4afc144145ae", "api/define_ILI9341_8cpp_1aa373acfd567ed1ab59f04d44fe1e5b6f", "api/define_ILI9341_8cpp_1aa9692e6f195c64bf7ffbdf1c37e2a473", "api/define_ILI9341_8cpp_1aaa8ea7376d8942dded4e00bfe006c9bd", "api/define_ILI9341_8cpp_1ac499cd0e0c7f17006dcc2e6998915d57", "api/define_ILI9341_8cpp_1ac657aed4eab33cf9ba9c3a44919218ab", "api/define_ILI9341_8cpp_1acc4a8ed569a4c04d4ef11e6a458fc2e0", "api/define_ILI9341_8cpp_1ace7ad088cfc571e05a4066a9dd8a0049", "api/define_ILI9341_8cpp_1ad9996d51efbffc39bd2909a46dcb443b", "api/define_ILI9341_8cpp_1ada2055b1b89e10dd1a854d98022ce40c", "api/define_ILI9341_8cpp_1ae22acdf8d6ceb5710050b7a1b8bfcefc", "api/define_ILI9341_8cpp_1ae2d100e90910bf4aedb20fb88b3f582c", "api/define_ILI9341_8cpp_1ae6bf550a370a529b19263c6e05649b07", "api/define_ILI9341_8cpp_1aed59201f8eb2291e618d3b3151adc497", "api/define_ILI9341_8cpp_1af606a5acf671a097da5af39f83091fd6", "api/define_Image_8cpp_1a172012a40abd7130cea4483e3509d549", "api/define_Image_8cpp_1a2e03803dbc104b96673147ccc7b5e28a", "api/define_ManagedBuffer_8cpp_1a172012a40abd7130cea4483e3509d549", "api/define_ManagedBuffer_8cpp_1a2e03803dbc104b96673147ccc7b5e28a", "api/define_ManagedString_8cpp_1a172012a40abd7130cea4483e3509d549", "api/define_ManagedString_8cpp_1a2e03803dbc104b96673147ccc7b5e28a", "api/define_MbedMemberFunctionCallback_8cpp_1a2b988eeae7db937762da7844ec775c68", "api/define_MicroBitCompassCalibrator_8cpp_1a45714559e1d332a79c006d42ef299f6a", "api/define_MicroBitDevice_8cpp_1a01b9cdf1035ea65e9a2940d637703742", "api/define_MicroBitDevice_8cpp_1a03c99dbdc9c762a6b12e0c370c5e10b0", "api/define_MicroBitDevice_8cpp_1a040d7964cb1f1003b12bda1392e5d18b", "api/define_MicroBitDevice_8cpp_1a45d611e4a0befc1e0b61584917b1a409", "api/define_MicroBitDevice_8cpp_1a6337141e65af4ed0c0b79f9d0117427f", "api/define_MicroBitDevice_8cpp_1a690f62edbcb939fb56711e1ec97b8fa3", "api/define_MicroBitDevice_8cpp_1a888f13cd0d771a728fec662a923a708e", "api/define_MicroBitDevice_8cpp_1a8e05f71e1d766578f1914291bb0c94fe", "api/define_MicroBitDevice_8cpp_1a9029e86eea8fe6b3d62ebec9d44853e8", "api/define_MicroBitDevice_8cpp_1a9663b00d0a822e59f33069806c0d4214", "api/define_MicroBitDevice_8cpp_1aa0f6f2a537dae5f40320c36e5cf92609", "api/define_MicroBitDevice_8cpp_1aa8a91e4911de7546f53b7642adb34e5a", "api/define_MicroBitDevice_8cpp_1aab583ad320c18a7c944fcd155956c537", "api/define_MicroBitDevice_8cpp_1aab9e21d469d9928bede29dbd44bc2ff5", "api/define_MicroBitDevice_8cpp_1aad850f0d10f39de3d9765493ab57465c", "api/define_MicroBitDevice_8cpp_1ab5d90ce911a150ca764b693f20ac1bbd", "api/define_MicroBitDevice_8cpp_1ab9598967bd70e7048f577e9c61d4ec43", "api/define_MicroBitDevice_8cpp_1abfc88b6cad088445a618a74da20002da", "api/define_MicroBitDevice_8cpp_1acf62070a59a779770869ce9830a9e0e8", "api/define_MicroBitDevice_8cpp_1ad16f1366a7e7744477e4b9a944d99cfc", "api/define_MicroBitDevice_8cpp_1afae4028709cd8da63dc52bbe784e6fa6", "api/define_MicroBitFlash_8cpp_1a3acffbd305ee72dcd4593c0d8af64a4f", "api/define_MicroBitFlash_8cpp_1a651143349b2328e0836362ca3dd9d864", "api/define_MicroBitLog_8cpp_1a44c876c78e2fc722c001dfc1a36b638f", "api/define_MicroBitMemoryMap_8cpp_1a6789ebc0df71a8ef76bfbb4fb5f74aad", "api/define_ST7735_8cpp_1a057611dfe567fd9095f27d40087e4948", "api/define_ST7735_8cpp_1a13453718ec9240ae7966d0d8995d0c8a", "api/define_ST7735_8cpp_1a18838093de54eca56aa97ead2a587280", "api/define_ST7735_8cpp_1a1afa532348b3d081b7b1ecdfa9ba17e0", "api/define_ST7735_8cpp_1a1b574de2db49ecfa63ce0216112903cc", "api/define_ST7735_8cpp_1a1ca62118c4ce1ed1d288c6958004188e", "api/define_ST7735_8cpp_1a1f9701dd8594cc2fb7c6f783b05d2f65", "api/define_ST7735_8cpp_1a2816f2fce9a937ced8567b2c2797767b", "api/define_ST7735_8cpp_1a3153a272f18d0f805028fce7e4337b53", "api/define_ST7735_8cpp_1a3b416f231bb6eedec8cfcf277c6d36d3", "api/define_ST7735_8cpp_1a484d38defdf6303f4a8d19f994d0593d", "api/define_ST7735_8cpp_1a4afe2b326d709aaeb70c657f8210ea2b", "api/define_ST7735_8cpp_1a5656049de5d79e5a77260b69042179af", "api/define_ST7735_8cpp_1a5cbfe14163815f14aea1a4a89ea2fffc", "api/define_ST7735_8cpp_1a62249e384b997229a3e2ae74ade334e2", "api/define_ST7735_8cpp_1a659f0d6f0c258a3d91f882a59dfa76f5", "api/define_ST7735_8cpp_1a6d18ed48efb3186877a07d0e81155453", "api/define_ST7735_8cpp_1a6f8b9fad1b5db52b70960b389056f0dd", "api/define_ST7735_8cpp_1a74afa388731002f70e250770901f90a2", "api/define_ST7735_8cpp_1a8a827d3b90198c117f3d744cc4201c68", "api/define_ST7735_8cpp_1a904eaad54b53eec42bec05f81baee26f", "api/define_ST7735_8cpp_1a91cc0e141903ca80ad7fc6f108988184", "api/define_ST7735_8cpp_1a95b55308b48e83b1a3e2cf51393030f1", "api/define_ST7735_8cpp_1a9caf06c78cdaba66cea553668103b759", "api/define_ST7735_8cpp_1a9e059398ac81ef081169997c28f908cb", "api/define_ST7735_8cpp_1a9ecee6d3131d3b4f750b94d5766b998a", "api/define_ST7735_8cpp_1aa061cfc0b8f0fea3e70b59d72f6e1caa", "api/define_ST7735_8cpp_1aa0981e1f4a19f848f0bb2ba8a1909c8d", "api/define_ST7735_8cpp_1aa4d4dfc0e9e5b75add3eb42fd7987c29", "api/define_ST7735_8cpp_1aa9a60c99890ac51b71eb799b68d5c6d5", "api/define_ST7735_8cpp_1aac679645f819d98761965299f19620f6", "api/define_ST7735_8cpp_1aac9b57651bcead0a7564efe6460e5310", "api/define_ST7735_8cpp_1aad3c0783af31cd4c4e33bf8748e961fa", "api/define_ST7735_8cpp_1ab30e6bd24448245df1d60a3e1c4ddbdf", "api/define_ST7735_8cpp_1ab4294b48d705690347bf0fed4af82697", "api/define_ST7735_8cpp_1ac69d092c9c2693807a2a992dbf297f24", "api/define_ST7735_8cpp_1acb42f35cd7e667ba514f8b6022d0dac5", "api/define_ST7735_8cpp_1acc1e55b52f8a56b7719ab147308a1668", "api/define_ST7735_8cpp_1ace47a845775310352dc7e2fae3e1586a", "api/define_ST7735_8cpp_1ad66cc531ec897ce0465ff21d152b756a", "api/define_ST7735_8cpp_1ad90bd9bbed9c95192a2b44b8f63f86e5", "api/define_ST7735_8cpp_1adc23a239d2b6976d53254ef4fc5d1713", "api/define_ST7735_8cpp_1addfb44b70c2b60a0d04e3d22611d54ee", "api/define_ST7735_8cpp_1ae670a3d34e887559366735ca999e80d3", "api/define_ST7735_8cpp_1ae879d0b7f5639d5ecd3d265d9971c979", "api/define_ST7735_8cpp_1aeb5c49fcdd239ab153f5d9b15304ca9c", "api/define_ST7735_8cpp_1aec4c29f7c63a6c6f168764b2bcec50cf", "api/define_ST7735_8cpp_1aef4c5d9e00b07b6fc601f8ad2dbbb101", "api/define_ST7735_8cpp_1aef8a3757b39dd1bf1d79920be09511ae", "api/define_SoundExpressions_8cpp_1a919c3f752b8d51ddf16c8b61661818a6", "api/define_StandardSPIFlash_8cpp_1a9b7ee5bbb263671ca310a70e0d1526e9", "api/dir_libraries", "api/dir_libraries_codal-core", "api/dir_libraries_codal-core_source", "api/dir_libraries_codal-core_source_core", "api/dir_libraries_codal-core_source_driver-models", "api/dir_libraries_codal-core_source_drivers", "api/dir_libraries_codal-core_source_streams", "api/dir_libraries_codal-core_source_types", "api/dir_libraries_codal-microbit-v2", "api/dir_libraries_codal-microbit-v2_source", "api/dir_libraries_codal-microbit-v2_source_bluetooth", "api/dir_libraries_codal-microbit-v2_source_compat", "api/file_libraries_codal-core_source_core_CodalCompat.cpp", "api/file_libraries_codal-core_source_core_CodalComponent.cpp", "api/file_libraries_codal-core_source_core_CodalDevice.cpp", "api/file_libraries_codal-core_source_core_CodalDmesg.cpp", "api/file_libraries_codal-core_source_core_CodalFiber.cpp", "api/file_libraries_codal-core_source_core_CodalHeapAllocator.cpp", "api/file_libraries_codal-core_source_core_CodalListener.cpp", "api/file_libraries_codal-core_source_core_CodalUtil.cpp", "api/file_libraries_codal-core_source_core_MemberFunctionCallback.cpp", "api/file_libraries_codal-core_source_core_codal_default_target_hal.cpp", "api/file_libraries_codal-core_source_driver-models_AbstractButton.cpp", "api/file_libraries_codal-core_source_driver-models_Accelerometer.cpp", "api/file_libraries_codal-core_source_driver-models_CodalUSB.cpp", "api/file_libraries_codal-core_source_driver-models_Compass.cpp", "api/file_libraries_codal-core_source_driver-models_Display.cpp", "api/file_libraries_codal-core_source_driver-models_Gyroscope.cpp", "api/file_libraries_codal-core_source_driver-models_I2C.cpp", "api/file_libraries_codal-core_source_driver-models_PinPeripheral.cpp", "api/file_libraries_codal-core_source_driver-models_SPI.cpp", "api/file_libraries_codal-core_source_driver-models_Sensor.cpp", "api/file_libraries_codal-core_source_driver-models_Serial.cpp", "api/file_libraries_codal-core_source_driver-models_Timer.cpp", "api/file_libraries_codal-core_source_drivers_AnalogSensor.cpp", "api/file_libraries_codal-core_source_drivers_AnimatedDisplay.cpp", "api/file_libraries_codal-core_source_drivers_AsciiKeyMap.cpp", "api/file_libraries_codal-core_source_drivers_Button.cpp", "api/file_libraries_codal-core_source_drivers_FXOS8700.cpp", "api/file_libraries_codal-core_source_drivers_GhostFAT.cpp", "api/file_libraries_codal-core_source_drivers_HID.cpp", "api/file_libraries_codal-core_source_drivers_HIDJoystick.cpp", "api/file_libraries_codal-core_source_drivers_HIDKeyboard.cpp", "api/file_libraries_codal-core_source_drivers_HIDMouse.cpp", "api/file_libraries_codal-core_source_drivers_ILI9341.cpp", "api/file_libraries_codal-core_source_drivers_KeyValueStorage.cpp", "api/file_libraries_codal-core_source_drivers_LEDMatrix.cpp", "api/file_libraries_codal-core_source_drivers_LIS3DH.cpp", "api/file_libraries_codal-core_source_drivers_LSM303Accelerometer.cpp", "api/file_libraries_codal-core_source_drivers_LSM303Magnetometer.cpp", "api/file_libraries_codal-core_source_drivers_LinearAnalogSensor.cpp", "api/file_libraries_codal-core_source_drivers_MAG3110.cpp", "api/file_libraries_codal-core_source_drivers_MMA8653.cpp", "api/file_libraries_codal-core_source_drivers_MPU6050.cpp", "api/file_libraries_codal-core_source_drivers_MessageBus.cpp", "api/file_libraries_codal-core_source_drivers_MultiButton.cpp", "api/file_libraries_codal-core_source_drivers_NonLinearAnalogSensor.cpp", "api/file_libraries_codal-core_source_drivers_PearsonHash.cpp", "api/file_libraries_codal-core_source_drivers_PulseIn.cpp", "api/file_libraries_codal-core_source_drivers_ST7735.cpp", "api/file_libraries_codal-core_source_drivers_ScreenIO.cpp", "api/file_libraries_codal-core_source_drivers_StandardSPIFlash.cpp", "api/file_libraries_codal-core_source_drivers_TouchButton.cpp", "api/file_libraries_codal-core_source_drivers_TouchSensor.cpp", "api/file_libraries_codal-core_source_drivers_USBMSC.cpp", "api/file_libraries_codal-core_source_streams_DataStream.cpp", "api/file_libraries_codal-core_source_streams_EffectFilter.cpp", "api/file_libraries_codal-core_source_streams_FIFOStream.cpp", "api/file_libraries_codal-core_source_streams_LevelDetector.cpp", "api/file_libraries_codal-core_source_streams_LevelDetectorSPL.cpp", "api/file_libraries_codal-core_source_streams_LowPassFilter.cpp", "api/file_libraries_codal-core_source_streams_MemorySource.cpp", "api/file_libraries_codal-core_source_streams_Mixer.cpp", "api/file_libraries_codal-core_source_streams_StreamFlowTrigger.cpp", "api/file_libraries_codal-core_source_streams_StreamNormalizer.cpp", "api/file_libraries_codal-core_source_streams_StreamRecording.cpp", "api/file_libraries_codal-core_source_streams_StreamSplitter.cpp", "api/file_libraries_codal-core_source_streams_Synthesizer.cpp", "api/file_libraries_codal-core_source_types_BitmapFont.cpp", "api/file_libraries_codal-core_source_types_CoordinateSystem.cpp", "api/file_libraries_codal-core_source_types_Event.cpp", "api/file_libraries_codal-core_source_types_Image.cpp", "api/file_libraries_codal-core_source_types_ManagedBuffer.cpp", "api/file_libraries_codal-core_source_types_ManagedString.cpp", "api/file_libraries_codal-core_source_types_Matrix4.cpp", "api/file_libraries_codal-core_source_types_RefCounted.cpp", "api/file_libraries_codal-core_source_types_RefCountedInit.cpp", "api/file_libraries_codal-microbit-v2_source_FSCache.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitAccelerometer.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitAudio.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitCompass.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitCompassCalibrator.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitCompat.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitDevice.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitDisplay.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitFile.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitFileSystem.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitFlash.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitLog.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitMemoryMap.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitPowerManager.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitRadio.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitRadioDatagram.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitRadioEvent.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitThermometer.cpp", "api/file_libraries_codal-microbit-v2_source_MicroBitUSBFlashManager.cpp", "api/file_libraries_codal-microbit-v2_source_MicroSynth.cpp", "api/file_libraries_codal-microbit-v2_source_Mixer2.cpp", "api/file_libraries_codal-microbit-v2_source_NRF52FlashManager.cpp", "api/file_libraries_codal-microbit-v2_source_NRF52LedMatrix.cpp", "api/file_libraries_codal-microbit-v2_source_PacketBuffer.cpp", "api/file_libraries_codal-microbit-v2_source_SoundEmojiSynthesizer.cpp", "api/file_libraries_codal-microbit-v2_source_SoundExpressions.cpp", "api/file_libraries_codal-microbit-v2_source_SoundOutputPin.cpp", "api/file_libraries_codal-microbit-v2_source_SoundSynthesizerEffects.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitAccelerometerService.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEChar.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEManager.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEService.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEServices.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLETypes.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitButtonService.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitEddystone.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitEventService.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitIOPinService.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitLEDService.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitMagnetometerService.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitPartialFlashingService.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitTemperatureService.cpp", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitUARTService.cpp", "api/file_libraries_codal-microbit-v2_source_compat_MbedMemberFunctionCallback.cpp", "api/file_libraries_codal-microbit-v2_source_compat_MicroBitButton.cpp", "api/file_libraries_codal-microbit-v2_source_compat_MicroBitI2C.cpp", "api/file_libraries_codal-microbit-v2_source_compat_MicroBitSerial.cpp", "api/file_view_hierarchy", "api/function_AsciiKeyMap_8cpp_1a76d0e7b8cc98a5de2959103a26d1588f", "api/function_CodalComponent_8cpp_1aeb0a751e1f21f3e88eff5e7c1f2e6b48", "api/function_CodalFiber_8cpp_1ab77e72715a41198c2d51657c6db83d6d", "api/function_CodalFiber_8cpp_1ad7170c0dd03753b0ba186c8e30e70f1d", "api/function_CodalFiber_8cpp_1af3d1b60f406670c52c55d24be993b5e3", "api/function_FXOS8700_8cpp_1a292563457da80677c6ddc2f2ebf9591b", "api/function_FXOS8700_8cpp_1a36a971ec52ae8c2dbf51b944d8cefaa6", "api/function_LIS3DH_8cpp_1a292563457da80677c6ddc2f2ebf9591b", "api/function_LIS3DH_8cpp_1a36a971ec52ae8c2dbf51b944d8cefaa6", "api/function_LSM303Accelerometer_8cpp_1a292563457da80677c6ddc2f2ebf9591b", "api/function_LSM303Accelerometer_8cpp_1a36a971ec52ae8c2dbf51b944d8cefaa6", "api/function_LSM303Magnetometer_8cpp_1a543384816157ff7f48397eeefffdb177", "api/function_ManagedString_8cpp_1a65aa33eff2e664e696fdbe3d3e4bcd9a", "api/function_ManagedString_8cpp_1a69ba288f0b720c3f6d9de722ff424409", "api/function_ManagedString_8cpp_1a992f6bf1a5d6c2c04001658f20671e9a", "api/function_MessageBus_8cpp_1a2b8e9bf5fdd11d4746ac1d375171119f", "api/function_MessageBus_8cpp_1afa2476ad8ba85ca333908c560f1da40f", "api/function_MicroBitButton_8cpp_1acb8ed0e02a210c233dbda46534d3e3a4", "api/function_MicroBitDevice_8cpp_1a0bcdfb56a7b8143916d8963a585a60e7", "api/function_MicroBitDevice_8cpp_1a2079d63af3cbe958d7e84fb8b9acafb5", "api/function_MicroBitDevice_8cpp_1a27a5bc08ff7ce978b774057e83e7e550", "api/function_MicroBitDevice_8cpp_1a354d973c675a747d46b1e2f1e1bba469", "api/function_MicroBitDevice_8cpp_1a3604567bcf6823dab02d339171e20559", "api/function_MicroBitDevice_8cpp_1a385a8d97cae0761d23c53d8b18e98751", "api/function_MicroBitDevice_8cpp_1a41a479204fe84822f46832e73f9d1fad", "api/function_MicroBitDevice_8cpp_1a5750ff11e8d04023b682a014d99b901b", "api/function_MicroBitDevice_8cpp_1a716df9dd0189726d393ff5f7a72bc367", "api/function_MicroBitDevice_8cpp_1a726e9141c3696c0fbb7fc9743c18a260", "api/function_MicroBitDevice_8cpp_1a83e7fe17375b41f3c7bded287324053f", "api/function_MicroBitDevice_8cpp_1a9aefebeee6bf073575b379d19d00a3f4", "api/function_MicroBitDevice_8cpp_1aa10cead111d291e5967557df09dca606", "api/function_MicroBitDevice_8cpp_1aa6ccb05d4b191c32e60dd0b5b81eb650", "api/function_MicroBitDevice_8cpp_1aad929ae0913afefb621d909eaf94aece", "api/function_MicroBitDevice_8cpp_1abfe912cf436c0ae36e5ba328af78cc33", "api/function_MicroBitDevice_8cpp_1af43b7490559c2c52205093c2576372ab", "api/function_MicroBitDevice_8cpp_1af7d82336f01f39fb77f3c1ac581b4b3c", "api/function_MicroBitFlash_8cpp_1a50350adb4d21c98f05795d4864b7a9b6", "api/function_MicroBitLog_8cpp_1a311793d343de16396ce97934e3a0141d", "api/function_MicroBitLog_8cpp_1a828fd59fd198ee012b05d3e079dc9f2b", "api/function_MicroBitPowerManager_8cpp_1a5a52267ab568b498e7108aa9007eee14", "api/function_MicroBitRadio_8cpp_1a069017076901874ae563e04dbd958d9b", "api/function_MicroBitUSBFlashManager_8cpp_1ad382041038a6cbbda868e1d2391d5598", "api/function_NRF52FlashManager_8cpp_1a50350adb4d21c98f05795d4864b7a9b6", "api/function_NRF52LedMatrix_8cpp_1a8012d7c41a5acdf7fe59142bcbe34a16", "api/function_PearsonHash_8cpp_1abb822fb4d187abf0db02c994fdd9f766", "api/function_RefCounted_8cpp_1ad48348232972a5840883c91559c19ce3", "api/function_SoundExpressions_8cpp_1a1dd7d700f4a293bb9daf8a7de076e55c", "api/function_SoundExpressions_8cpp_1a287f5e4af8618ae9c853500384497500", "api/function_SoundExpressions_8cpp_1a309a867ad2f668d180dd091f7372e45d", "api/function_SoundExpressions_8cpp_1a4e5c3f878b31725aa82b12d508092405", "api/function_SoundExpressions_8cpp_1a5f66898c419c88513f2764a3009dc63c", "api/function_SoundExpressions_8cpp_1a60737a45759863c0e620ae760c3b553f", "api/function_SoundExpressions_8cpp_1a70ed5118959990d80a28c4035b86c05d", "api/function_SoundExpressions_8cpp_1a864709e2962d0f6829cf8c76dd7a62d2", "api/function_SoundExpressions_8cpp_1a88744faf53b8387c7ecf729bc57e107e", "api/function_SoundExpressions_8cpp_1aa0d8a18e215ec42c08fcd66989234f0f", "api/function_SoundExpressions_8cpp_1aa4e8a4ec723446eda4d8553b8ff060f6", "api/function_SoundExpressions_8cpp_1aa8a2d09598a654bcb7da4db7277fc5d6", "api/function_SoundExpressions_8cpp_1aad9fd68724d233828e2eddc00cd37c92", "api/function_SoundExpressions_8cpp_1ad11e25a6c6ba4d0f68e6a13767025b71", "api/function_SoundExpressions_8cpp_1ad1e71d611192867e84bb32678692333f", "api/function_SoundExpressions_8cpp_1adefa5f8e3d4de3471d3781611b3b200b", "api/function_SoundExpressions_8cpp_1ae5f03b8c1a686c58cbc6b0fd25bd7781", "api/function_SoundExpressions_8cpp_1aef045ebf30c64cdae75745af970c9578", "api/function_SoundExpressions_8cpp_1afb41c29c4d22a0f03fdb9b429f9ea1be", "api/function_SoundExpressions_8cpp_1afd892011bbd7fea7bd36e739db0c57ea", "api/function_SoundSynthesizerEffects_8cpp_1a04f6b0874d1214d6ccb10cab0c2570a4", "api/function_StreamNormalizer_8cpp_1a02252cb4291db6ef8db6b2ece6a475a0", "api/function_StreamNormalizer_8cpp_1a09cb725f6c3a99b8c803b26e02926264", "api/function_StreamNormalizer_8cpp_1a0a604b84aadf81c44fb9ab6b655930d5", "api/function_StreamNormalizer_8cpp_1a1362b198826646d727e732920d2dda3c", "api/function_StreamNormalizer_8cpp_1a1805414585f15ce45f9aab2dbe2fdc57", "api/function_StreamNormalizer_8cpp_1a1d7f9563b4a2aa717fc2d6103f1a5123", "api/function_StreamNormalizer_8cpp_1a2a413989037d761dbc6486b3614e8160", "api/function_StreamNormalizer_8cpp_1a4f75b9e7025573b11001d1b5a87f1668", "api/function_StreamNormalizer_8cpp_1a52e03ea7b759df939c767f9c52dac697", "api/function_StreamNormalizer_8cpp_1a549be96b19d706afed3f7b2abbf4965f", "api/function_StreamNormalizer_8cpp_1a7db885f5688c5048cc64df6b62d950b0", "api/function_StreamNormalizer_8cpp_1a97c2b2b813a16085cb7ecb3b2bf64c9e", "api/function_StreamNormalizer_8cpp_1adce48dc157ea7ba3a50edff16d940f90", "api/function_StreamNormalizer_8cpp_1aded6f3a9d9cf4359cc1c59f77ca920c2", "api/function_StreamNormalizer_8cpp_1aee105453936d06e1b957f05c4407af9a", "api/function_Synthesizer_8cpp_1a5b1f1699568e7455dfd56ab98c7d4898", "api/function_Timer_8cpp_1af4ec1b65c8a502592715146e478fb443", "api/function_codal__default__target__hal_8cpp_1a71d29209e89161a64a01c9f594a7361e", "api/namespace_codal", "api/namespace_std", "api/page_view_hierarchy", "api/program_listing_file_libraries_codal-core_source_core_CodalCompat.cpp", "api/program_listing_file_libraries_codal-core_source_core_CodalComponent.cpp", "api/program_listing_file_libraries_codal-core_source_core_CodalDevice.cpp", "api/program_listing_file_libraries_codal-core_source_core_CodalDmesg.cpp", "api/program_listing_file_libraries_codal-core_source_core_CodalFiber.cpp", "api/program_listing_file_libraries_codal-core_source_core_CodalHeapAllocator.cpp", "api/program_listing_file_libraries_codal-core_source_core_CodalListener.cpp", "api/program_listing_file_libraries_codal-core_source_core_CodalUtil.cpp", "api/program_listing_file_libraries_codal-core_source_core_MemberFunctionCallback.cpp", "api/program_listing_file_libraries_codal-core_source_core_codal_default_target_hal.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_AbstractButton.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_Accelerometer.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_CodalUSB.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_Compass.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_Display.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_Gyroscope.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_I2C.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_PinPeripheral.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_SPI.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_Sensor.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_Serial.cpp", "api/program_listing_file_libraries_codal-core_source_driver-models_Timer.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_AnalogSensor.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_AnimatedDisplay.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_AsciiKeyMap.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_Button.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_FXOS8700.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_GhostFAT.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_HID.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_HIDJoystick.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_HIDKeyboard.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_HIDMouse.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_ILI9341.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_KeyValueStorage.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_LEDMatrix.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_LIS3DH.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_LSM303Accelerometer.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_LSM303Magnetometer.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_LinearAnalogSensor.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_MAG3110.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_MMA8653.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_MPU6050.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_MessageBus.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_MultiButton.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_NonLinearAnalogSensor.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_PearsonHash.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_PulseIn.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_ST7735.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_ScreenIO.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_StandardSPIFlash.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_TouchButton.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_TouchSensor.cpp", "api/program_listing_file_libraries_codal-core_source_drivers_USBMSC.cpp", "api/program_listing_file_libraries_codal-core_source_streams_DataStream.cpp", "api/program_listing_file_libraries_codal-core_source_streams_EffectFilter.cpp", "api/program_listing_file_libraries_codal-core_source_streams_FIFOStream.cpp", "api/program_listing_file_libraries_codal-core_source_streams_LevelDetector.cpp", "api/program_listing_file_libraries_codal-core_source_streams_LevelDetectorSPL.cpp", "api/program_listing_file_libraries_codal-core_source_streams_LowPassFilter.cpp", "api/program_listing_file_libraries_codal-core_source_streams_MemorySource.cpp", "api/program_listing_file_libraries_codal-core_source_streams_Mixer.cpp", "api/program_listing_file_libraries_codal-core_source_streams_StreamFlowTrigger.cpp", "api/program_listing_file_libraries_codal-core_source_streams_StreamNormalizer.cpp", "api/program_listing_file_libraries_codal-core_source_streams_StreamRecording.cpp", "api/program_listing_file_libraries_codal-core_source_streams_StreamSplitter.cpp", "api/program_listing_file_libraries_codal-core_source_streams_Synthesizer.cpp", "api/program_listing_file_libraries_codal-core_source_types_BitmapFont.cpp", "api/program_listing_file_libraries_codal-core_source_types_CoordinateSystem.cpp", "api/program_listing_file_libraries_codal-core_source_types_Event.cpp", "api/program_listing_file_libraries_codal-core_source_types_Image.cpp", "api/program_listing_file_libraries_codal-core_source_types_ManagedBuffer.cpp", "api/program_listing_file_libraries_codal-core_source_types_ManagedString.cpp", "api/program_listing_file_libraries_codal-core_source_types_Matrix4.cpp", "api/program_listing_file_libraries_codal-core_source_types_RefCounted.cpp", "api/program_listing_file_libraries_codal-core_source_types_RefCountedInit.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_FSCache.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitAccelerometer.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitAudio.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitCompass.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitCompassCalibrator.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitCompat.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitDevice.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitDisplay.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitFile.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitFileSystem.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitFlash.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitLog.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitMemoryMap.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitPowerManager.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitRadio.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitRadioDatagram.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitRadioEvent.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitThermometer.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitUSBFlashManager.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroSynth.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_Mixer2.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_NRF52FlashManager.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_NRF52LedMatrix.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_PacketBuffer.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_SoundEmojiSynthesizer.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_SoundExpressions.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_SoundOutputPin.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_SoundSynthesizerEffects.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitAccelerometerService.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEChar.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEManager.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEService.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEServices.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLETypes.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitButtonService.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitEddystone.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitEventService.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitIOPinService.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitLEDService.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitMagnetometerService.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitPartialFlashingService.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitTemperatureService.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitUARTService.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_compat_MbedMemberFunctionCallback.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_compat_MicroBitButton.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_compat_MicroBitI2C.cpp", "api/program_listing_file_libraries_codal-microbit-v2_source_compat_MicroBitSerial.cpp", "api/root", "api/structcodal_1_1ST7735WorkBuffer", "api/structcodal_1_1microbit__LEDMapStr", "api/typedef_MicroBitDevice_8cpp_1a3731f47723ab9c6b2e265bc589fbf5e9", "api/typedef_MicroBitDevice_8cpp_1a3a89a267df18144b75ca7ba619ba5112", "api/typedef_MicroBitDevice_8cpp_1a8449cf8d6a048d04f55c5ff21f33cd5b", "api/unabridged_api", "api/unabridged_orphan", "api/variable_AsciiKeyMap_8cpp_1a02cf225055a2c4d2b8273fc06a7e4022", "api/variable_AsciiKeyMap_8cpp_1a035e7b13022af652ce68d5069d2e2e70", "api/variable_AsciiKeyMap_8cpp_1a060f9fdff99889ffb40ca1d0af660446", "api/variable_AsciiKeyMap_8cpp_1a06c33ab4ee5c5df5d8100d8a5fca29c7", "api/variable_AsciiKeyMap_8cpp_1a0706f30e64990b9c56a950486366c55b", "api/variable_AsciiKeyMap_8cpp_1a0849db89482f8c3e68b33046619d0352", "api/variable_AsciiKeyMap_8cpp_1a08965ae121c69472ee61d638a94a164d", "api/variable_AsciiKeyMap_8cpp_1a09691c54996060ab0c57d9626743cb47", "api/variable_AsciiKeyMap_8cpp_1a0b25b4989e24edc841d8bfedecbfcf9b", "api/variable_AsciiKeyMap_8cpp_1a0c417630140c2fd983a3b70fb418092e", "api/variable_AsciiKeyMap_8cpp_1a0f99d1bfee2c2ed0538d6422972c0b35", "api/variable_AsciiKeyMap_8cpp_1a11c5ecf63cddaf0405badd022938bd87", "api/variable_AsciiKeyMap_8cpp_1a13e7c0cb3a316f7293fb5f5e0ca54b4d", "api/variable_AsciiKeyMap_8cpp_1a1539e45b60c8bb7baf0f828461da1a74", "api/variable_AsciiKeyMap_8cpp_1a197ebf8474aadaf55731c65f0f5f3897", "api/variable_AsciiKeyMap_8cpp_1a21485161c53faa5bb4086f23f05096bf", "api/variable_AsciiKeyMap_8cpp_1a2264130dd88363cfff6f8601e8a610ba", "api/variable_AsciiKeyMap_8cpp_1a23546d73b7c7e837e9440710ffa7cbfc", "api/variable_AsciiKeyMap_8cpp_1a26db20801683db3224f28bc7f194e30a", "api/variable_AsciiKeyMap_8cpp_1a27c67c147badb36e6f7f1a47ecf17124", "api/variable_AsciiKeyMap_8cpp_1a2974521be47ef52a8283da21058d7854", "api/variable_AsciiKeyMap_8cpp_1a2c9f629c0a7dceb3b390ea45faaa42de", "api/variable_AsciiKeyMap_8cpp_1a2cd31f0c3ea8807460e09abb9dd82d9e", "api/variable_AsciiKeyMap_8cpp_1a30c3b290181146964d1345f2fa9fa175", "api/variable_AsciiKeyMap_8cpp_1a3392e907e3e3902bf0da44142cb0dcda", "api/variable_AsciiKeyMap_8cpp_1a36bf86b113daaf75f7b230018379762c", "api/variable_AsciiKeyMap_8cpp_1a370fd0970310b963357207af6755d8a0", "api/variable_AsciiKeyMap_8cpp_1a38c4424d77303d4c669611ca0a40b394", "api/variable_AsciiKeyMap_8cpp_1a3d83a7b58827778d71c3f3def97121fd", "api/variable_AsciiKeyMap_8cpp_1a423a546d3388419df8463c5b71836d86", "api/variable_AsciiKeyMap_8cpp_1a428043778bdc4c1627e5c0e51544474e", "api/variable_AsciiKeyMap_8cpp_1a4450bc80c9cca966920443fce5002eb4", "api/variable_AsciiKeyMap_8cpp_1a47a8c6f83bafc4410413f7881a063191", "api/variable_AsciiKeyMap_8cpp_1a4a9842c383c40b5078e68bc748fd7039", "api/variable_AsciiKeyMap_8cpp_1a4f1a0567502aebb40665f13726f0cde3", "api/variable_AsciiKeyMap_8cpp_1a51bbfe91e599596b9e00ac7a1e0722fe", "api/variable_AsciiKeyMap_8cpp_1a52d6cd92b9c35e57a1dd5a4a43b9eead", "api/variable_AsciiKeyMap_8cpp_1a56080806274770d0f1ceb2dadf68627a", "api/variable_AsciiKeyMap_8cpp_1a5830886602e5ddad66ff7824b5bf90a6", "api/variable_AsciiKeyMap_8cpp_1a61515aaef7f8c2fe1a9cd66cddf11012", "api/variable_AsciiKeyMap_8cpp_1a627f6b5f3d13fe24821ce1446582d01f", "api/variable_AsciiKeyMap_8cpp_1a628c3838b7a5133d41ce42bfb0506c2f", "api/variable_AsciiKeyMap_8cpp_1a66581b690b5584a128cd5b4c4c755641", "api/variable_AsciiKeyMap_8cpp_1a66d56da69b84dfb4793eebac43521e9f", "api/variable_AsciiKeyMap_8cpp_1a679c6634da2986be67ec5f874ad325e2", "api/variable_AsciiKeyMap_8cpp_1a6b669f02be6d376661d45b34c47c06f9", "api/variable_AsciiKeyMap_8cpp_1a6d980fa0446413da2eb70687559614d1", "api/variable_AsciiKeyMap_8cpp_1a7bb901859beff79ca3b285df54df6bf0", "api/variable_AsciiKeyMap_8cpp_1a7bde965dbab331a9ff4c68e9e36fc391", "api/variable_AsciiKeyMap_8cpp_1a7d96dfb3b746034c44d2ae4c0adf4594", "api/variable_AsciiKeyMap_8cpp_1a7d9b24e360f1005da61ce8ef4db85ed1", "api/variable_AsciiKeyMap_8cpp_1a834446caedea1efb54291a09ea2a1ac2", "api/variable_AsciiKeyMap_8cpp_1a8350f9b0271a68dbf980c4dc381108e8", "api/variable_AsciiKeyMap_8cpp_1a895d8c856a1b5099fab86df83ab6d6c1", "api/variable_AsciiKeyMap_8cpp_1a8dc5eb08cb39a1754cf4283bd7d2d080", "api/variable_AsciiKeyMap_8cpp_1a8ed92f9d04e15edf35d47aee702e866c", "api/variable_AsciiKeyMap_8cpp_1a93be0be4a648db81962cb4c2e9bb5052", "api/variable_AsciiKeyMap_8cpp_1a94b60cc7be2fb25c92965a71a5a7cb66", "api/variable_AsciiKeyMap_8cpp_1a94da320ceed9c9513635523c16d73350", "api/variable_AsciiKeyMap_8cpp_1a95e32d54db661406cc25c16a4cd4d72e", "api/variable_AsciiKeyMap_8cpp_1a96a4a4d3c2cbb4d795aa687ee716c554", "api/variable_AsciiKeyMap_8cpp_1a9753c6f3e624772f123b59ba5b978fef", "api/variable_AsciiKeyMap_8cpp_1aa024919a5345a5ff7bbf12c090891472", "api/variable_AsciiKeyMap_8cpp_1aa63a85eff0f1d2883b0744cdf1604db3", "api/variable_AsciiKeyMap_8cpp_1aa79671e799df152361df0ba5b982f619", "api/variable_AsciiKeyMap_8cpp_1aaf605b6dc3a4fdf3cc8b785fe5bdf8cb", "api/variable_AsciiKeyMap_8cpp_1aaf9e54190bac70fd28e14f6ff57ab69a", "api/variable_AsciiKeyMap_8cpp_1ab0b7985ce48b012634302ed52ed1a6c4", "api/variable_AsciiKeyMap_8cpp_1ab3fa4abcea4908ccb52e08ab5ff20154", "api/variable_AsciiKeyMap_8cpp_1ab7129d06eb53bf293424b3daa10f8c3e", "api/variable_AsciiKeyMap_8cpp_1ab80002f723395f6df8151ee846bad804", "api/variable_AsciiKeyMap_8cpp_1ab85628fd5a75d853f4523e6e3b7a04b4", "api/variable_AsciiKeyMap_8cpp_1aba7cbcf5f5dd1d5f0b0c252b000f131f", "api/variable_AsciiKeyMap_8cpp_1abd53571d7a16fe028e28d001c4703eb4", "api/variable_AsciiKeyMap_8cpp_1abe258ffe4dc9babdc901a2d05de47989", "api/variable_AsciiKeyMap_8cpp_1ac6969350973a2a194c082d7d84bccf81", "api/variable_AsciiKeyMap_8cpp_1ac6e5618ff993b4bce08473ab119a8a8e", "api/variable_AsciiKeyMap_8cpp_1ac936ddf84b6ea4fe3b5d7d4cf48046f4", "api/variable_AsciiKeyMap_8cpp_1acb59fd5128860547716a02e388c33126", "api/variable_AsciiKeyMap_8cpp_1acbd5eb85205e6649876142b6f955c52c", "api/variable_AsciiKeyMap_8cpp_1acd5e83c9d0e633eadf5ac352a9f544bb", "api/variable_AsciiKeyMap_8cpp_1acdf9401dd361834dfb745c23fc1963d0", "api/variable_AsciiKeyMap_8cpp_1ace1504e827436f295eab82f9a57ea975", "api/variable_AsciiKeyMap_8cpp_1ad01065bd6a3d99d70d9aa714d93831a2", "api/variable_AsciiKeyMap_8cpp_1ad132e594b9a2639bde5e4f6fe422f36f", "api/variable_AsciiKeyMap_8cpp_1adac008576fd4c9fff289bef492b03a72", "api/variable_AsciiKeyMap_8cpp_1ae1db93cae32137c378f5bbb90a6683a0", "api/variable_AsciiKeyMap_8cpp_1ae6c459f9d61d4e731bfa07bf4a7bb484", "api/variable_AsciiKeyMap_8cpp_1ae71a0d88fed76cb30fa8e967c70dccfa", "api/variable_AsciiKeyMap_8cpp_1ae8ffb741139f4c0fd86f22a525febba0", "api/variable_AsciiKeyMap_8cpp_1aedcbd7651ed42e9e98194f72d159d70f", "api/variable_AsciiKeyMap_8cpp_1aee24f29fc75e69a4e8e04aea2396e320", "api/variable_AsciiKeyMap_8cpp_1aef75616e66ca4e05789229f5493c3d62", "api/variable_AsciiKeyMap_8cpp_1af15d0c6d0be055aab2f5a17b69544ab9", "api/variable_AsciiKeyMap_8cpp_1af3ef6971f764029893aee40256475632", "api/variable_AsciiKeyMap_8cpp_1af4284f0ff3348bbb93e1f421145e957d", "api/variable_AsciiKeyMap_8cpp_1af56c44d42e9b42a5a5896c1d8fd637df", "api/variable_AsciiKeyMap_8cpp_1afab36d7c93b12105e316dd2814a31bdd", "api/variable_AsciiKeyMap_8cpp_1afb33c1f0369db53db75e5725c2beeefb", "api/variable_AsciiKeyMap_8cpp_1afd7ab3e42f8ed9f81015dda0005efd23", "api/variable_AsciiKeyMap_8cpp_1affbf81e909a241f61ae86a641d3342c1", "api/variable_BitmapFont_8cpp_1a27f21ff1f40f4a1d2ed52fcdb03f4187", "api/variable_CodalCompat_8cpp_1a758c3372d6cee09fdcdd519d7cce550e", "api/variable_CodalFiber_8cpp_1a024441a947df7cf106c747afc1c71884", "api/variable_CodalFiber_8cpp_1a321f36a72129609bbefc8ef11f5f0594", "api/variable_CodalFiber_8cpp_1a6a03c0975b4fb247c9dd3b4a2b222c4f", "api/variable_CodalFiber_8cpp_1a6b3f16aa2de21913219f4b2c05d943fb", "api/variable_CodalFiber_8cpp_1a79d205f4fdf41a28905f91cbe67e302c", "api/variable_CodalFiber_8cpp_1a875529fe3c5e7bbdd548733a4e5e1de9", "api/variable_CodalFiber_8cpp_1a8ccfb37c12a9651b85c545a31c630913", "api/variable_CodalFiber_8cpp_1aafb289e9e5ab78b01c7f5e7bb467bb88", "api/variable_CodalFiber_8cpp_1ab33e92569d99baa36adfbaa1c9a83ae3", "api/variable_CodalFiber_8cpp_1ad6f9a39ab738ae2bb17e15410fd343d9", "api/variable_FXOS8700_8cpp_1a71103c9f99262747c9a498efd5e54ec2", "api/variable_FXOS8700_8cpp_1ae1f31e8793a543459b039ef0decad1ad", "api/variable_ILI9341_8cpp_1a12a5e81ac4690592cac1fb6c8e9485ba", "api/variable_LEDMatrix_8cpp_1a7b407c11f267d3fb302453361e8a99ec", "api/variable_LIS3DH_8cpp_1a71103c9f99262747c9a498efd5e54ec2", "api/variable_LIS3DH_8cpp_1ae1f31e8793a543459b039ef0decad1ad", "api/variable_LSM303Accelerometer_8cpp_1a71103c9f99262747c9a498efd5e54ec2", "api/variable_LSM303Accelerometer_8cpp_1ae1f31e8793a543459b039ef0decad1ad", "api/variable_LSM303Magnetometer_8cpp_1a4dd3f5e563a05b8b4539fa75300d2538", "api/variable_MAG3110_8cpp_1aaef161739390d90c05343a840c6606e4", "api/variable_MMA8653_8cpp_1ad89aacfd8c9a434a00090ec41892c632", "api/variable_MMA8653_8cpp_1afec87b4f9eab482fd5d01be8b98be135", "api/variable_ManagedString_8cpp_1af7ca2d5d9b84fa4a9b208538d3c4329f", "api/variable_MessageBus_8cpp_1ae827326cb3657a61e58b1d0c40cef12b", "api/variable_MicroBitDevice_8cpp_1a3e733810377dde17a57ef676f2a01c6e", "api/variable_MicroBitDevice_8cpp_1a5b247a1b9c09c76d22f0e1466c82b76c", "api/variable_MicroBitDevice_8cpp_1a6bc4f8afa78cc2f4ced08845e37ce237", "api/variable_MicroBitDevice_8cpp_1aca4cf1dfeab2fc47ee0436aca7c829f1", "api/variable_MicroBitDevice_8cpp_1ad3b4768ec67808bc2ba52b4582473720", "api/variable_MicroBitDevice_8cpp_1ad8b3b7b2a628f99bde2d771ceb5d2d13", "api/variable_MicroBitDevice_8cpp_1affa4a9c43eed32f048354199021ac08c", "api/variable_MicroBitFileSystem_8cpp_1a5e0a2c7c0c374fb50703be0dbd817ed6", "api/variable_MicroBitFlash_8cpp_1a94a1c7bf5b9e170ed004a6f774428eae", "api/variable_MicroBitPowerManager_8cpp_1a2de8e061450f2d67d2af29294c926918", "api/variable_MicroBitPowerManager_8cpp_1a9a0001a09c0fccb67648eb648cdc1b24", "api/variable_MicroBitRadio_8cpp_1a73d5f8bde09d544a39a35a0eb88482fe", "api/variable_MicroBitUSBFlashManager_8cpp_1a1dcf62e2f8b6064eae30bee84eb43707", "api/variable_NRF52FlashManager_8cpp_1a94a1c7bf5b9e170ed004a6f774428eae", "api/variable_NRF52LedMatrix_8cpp_1a87fff697cb02bf4ad1ef95f65b5bf868", "api/variable_PearsonHash_8cpp_1acffaf01df4ac6fa7c559ab1a27710684", "api/variable_ST7735_8cpp_1a8548039b21f185e3e3bbe4e4a365a26e", "api/variable_SoundSynthesizerEffects_8cpp_1a58f8237bcc62039cd6a821dfb281854f", "api/variable_SoundSynthesizerEffects_8cpp_1a919d3356f404c818e4b1a3ff0d2b6db9", "api/variable_SoundSynthesizerEffects_8cpp_1a96a134c607ad3c3feae7936bd1d16eab", "api/variable_SoundSynthesizerEffects_8cpp_1a99d0c90424c212e5d13b8d82684600de", "api/variable_SoundSynthesizerEffects_8cpp_1aab135d05b36c0ac09643fdbbb4d14a01", "api/variable_SoundSynthesizerEffects_8cpp_1abc1725500a39372298b25dc70c1d4ae5", "api/variable_SoundSynthesizerEffects_8cpp_1adaf55f5737ae946154150213ed3206f1", "api/variable_SoundSynthesizerEffects_8cpp_1ae8e6a6b19633e7e8e7d1ec8c2f2b79f2", "api/variable_Synthesizer_8cpp_1a9a05778a3f22c7bf79aef01133278e3d", "api/variable_Timer_8cpp_1aa7f770e117e3a2d7911f18fefcdbb462", "api/variable_codal__default__target__hal_8cpp_1a04c74f4e114fccbc00eb4c0e5b4e4462", "api/variable_codal__default__target__hal_8cpp_1a0fff774d9819726afed87bb8849a77a6", "api/variable_codal__default__target__hal_8cpp_1a72cce251f881b457edf43fe08ac1e251", "codal-api", "getting-started", "glossary", "guides/codal-projects", "guides/index", "guides/prerequisites", "index", "memory-and-storage/index", "memory-and-storage/managedstring", "memory-and-storage/microbitimage", "memory-and-storage/packetbuffer", "projects/disco-lights", "projects/index", "ubit/accelerometer", "ubit/audio", "ubit/buttons", "ubit/compass", "ubit/display", "ubit/edge-connector", "ubit/index", "ubit/serial", "ubit/storage", "ubit/thermometer"], "filenames": ["api/class_view_hierarchy.rst", "api/define_CodalFiber_8cpp_1a3458bfe88b083b7a76125b02abe25898.rst", "api/define_CodalFiber_8cpp_1a6896ce0afdd797b310514d053b2cb07e.rst", "api/define_Compass_8cpp_1ac69088477cbf6be32811abd3d31e9ea5.rst", "api/define_ILI9341_8cpp_1a05c1fbaa5809b6e45dd1da9fd0c05fc0.rst", "api/define_ILI9341_8cpp_1a0735e9a5ee316588f5430559b56074c4.rst", "api/define_ILI9341_8cpp_1a086515b5e792ce35f8cd0b875bd1f16e.rst", "api/define_ILI9341_8cpp_1a1380e18775e66a698eb0120f64af8d27.rst", "api/define_ILI9341_8cpp_1a144a76fa56427d7e38c99708fa42e47f.rst", "api/define_ILI9341_8cpp_1a18b8144a0ab0fce95e1873102b72da8a.rst", "api/define_ILI9341_8cpp_1a1be5fe675d09e59287ef886e11c87bcb.rst", "api/define_ILI9341_8cpp_1a2183eaeed3b4f2e82f1f1a5aed9cf8e1.rst", "api/define_ILI9341_8cpp_1a2429382736b6d514ab4085a8ea5951d4.rst", "api/define_ILI9341_8cpp_1a278999b9f435340e6a689165c860050a.rst", "api/define_ILI9341_8cpp_1a2866fa67540c7099f2c5d724196f430e.rst", "api/define_ILI9341_8cpp_1a310ca5d5d75b141c72e36a14e8b2bb8a.rst", "api/define_ILI9341_8cpp_1a31b7dff5fc8d6affa4f328a4de46ce9f.rst", "api/define_ILI9341_8cpp_1a3788bc35c2adfe007f3b6a03b85d2071.rst", "api/define_ILI9341_8cpp_1a37d467e2a578e59844315ee76621fecb.rst", "api/define_ILI9341_8cpp_1a3ac0bad81e82dca703ea78d9f1ad8cd1.rst", "api/define_ILI9341_8cpp_1a44774f69e5dfc0d7b87f5a8bf5cad0e9.rst", "api/define_ILI9341_8cpp_1a4e4b9406383c20af1be6e0e05f319abf.rst", "api/define_ILI9341_8cpp_1a58488419649441aec5166d08b1160837.rst", "api/define_ILI9341_8cpp_1a5e137029ba159bd4a942dbe44fbb45bd.rst", "api/define_ILI9341_8cpp_1a7130c62347e51a4bafb7070ba393ee39.rst", "api/define_ILI9341_8cpp_1a808fd63764a8bf4de696d11e897e68de.rst", "api/define_ILI9341_8cpp_1a85532e0077d505687036b92bd7e70989.rst", "api/define_ILI9341_8cpp_1a91c32c640e65f7e890fdbb5aed29077b.rst", "api/define_ILI9341_8cpp_1a96cd1f1e426827243075de8477439222.rst", "api/define_ILI9341_8cpp_1a97969fc9b0fb77e372d895f647387207.rst", "api/define_ILI9341_8cpp_1a9960c17c0ec3f5adde7cf7fa94f27220.rst", "api/define_ILI9341_8cpp_1a9d46802e696356cd1b7625d36c20e8dd.rst", "api/define_ILI9341_8cpp_1a9e00fc41e2ce41f264f7f19a01bd6b41.rst", "api/define_ILI9341_8cpp_1aa2c11f3421fe0cfd04de4afc144145ae.rst", "api/define_ILI9341_8cpp_1aa373acfd567ed1ab59f04d44fe1e5b6f.rst", "api/define_ILI9341_8cpp_1aa9692e6f195c64bf7ffbdf1c37e2a473.rst", "api/define_ILI9341_8cpp_1aaa8ea7376d8942dded4e00bfe006c9bd.rst", "api/define_ILI9341_8cpp_1ac499cd0e0c7f17006dcc2e6998915d57.rst", "api/define_ILI9341_8cpp_1ac657aed4eab33cf9ba9c3a44919218ab.rst", "api/define_ILI9341_8cpp_1acc4a8ed569a4c04d4ef11e6a458fc2e0.rst", "api/define_ILI9341_8cpp_1ace7ad088cfc571e05a4066a9dd8a0049.rst", "api/define_ILI9341_8cpp_1ad9996d51efbffc39bd2909a46dcb443b.rst", "api/define_ILI9341_8cpp_1ada2055b1b89e10dd1a854d98022ce40c.rst", "api/define_ILI9341_8cpp_1ae22acdf8d6ceb5710050b7a1b8bfcefc.rst", "api/define_ILI9341_8cpp_1ae2d100e90910bf4aedb20fb88b3f582c.rst", "api/define_ILI9341_8cpp_1ae6bf550a370a529b19263c6e05649b07.rst", "api/define_ILI9341_8cpp_1aed59201f8eb2291e618d3b3151adc497.rst", "api/define_ILI9341_8cpp_1af606a5acf671a097da5af39f83091fd6.rst", "api/define_Image_8cpp_1a172012a40abd7130cea4483e3509d549.rst", "api/define_Image_8cpp_1a2e03803dbc104b96673147ccc7b5e28a.rst", "api/define_ManagedBuffer_8cpp_1a172012a40abd7130cea4483e3509d549.rst", "api/define_ManagedBuffer_8cpp_1a2e03803dbc104b96673147ccc7b5e28a.rst", "api/define_ManagedString_8cpp_1a172012a40abd7130cea4483e3509d549.rst", "api/define_ManagedString_8cpp_1a2e03803dbc104b96673147ccc7b5e28a.rst", "api/define_MbedMemberFunctionCallback_8cpp_1a2b988eeae7db937762da7844ec775c68.rst", "api/define_MicroBitCompassCalibrator_8cpp_1a45714559e1d332a79c006d42ef299f6a.rst", "api/define_MicroBitDevice_8cpp_1a01b9cdf1035ea65e9a2940d637703742.rst", "api/define_MicroBitDevice_8cpp_1a03c99dbdc9c762a6b12e0c370c5e10b0.rst", "api/define_MicroBitDevice_8cpp_1a040d7964cb1f1003b12bda1392e5d18b.rst", "api/define_MicroBitDevice_8cpp_1a45d611e4a0befc1e0b61584917b1a409.rst", "api/define_MicroBitDevice_8cpp_1a6337141e65af4ed0c0b79f9d0117427f.rst", "api/define_MicroBitDevice_8cpp_1a690f62edbcb939fb56711e1ec97b8fa3.rst", "api/define_MicroBitDevice_8cpp_1a888f13cd0d771a728fec662a923a708e.rst", "api/define_MicroBitDevice_8cpp_1a8e05f71e1d766578f1914291bb0c94fe.rst", "api/define_MicroBitDevice_8cpp_1a9029e86eea8fe6b3d62ebec9d44853e8.rst", "api/define_MicroBitDevice_8cpp_1a9663b00d0a822e59f33069806c0d4214.rst", "api/define_MicroBitDevice_8cpp_1aa0f6f2a537dae5f40320c36e5cf92609.rst", "api/define_MicroBitDevice_8cpp_1aa8a91e4911de7546f53b7642adb34e5a.rst", "api/define_MicroBitDevice_8cpp_1aab583ad320c18a7c944fcd155956c537.rst", "api/define_MicroBitDevice_8cpp_1aab9e21d469d9928bede29dbd44bc2ff5.rst", "api/define_MicroBitDevice_8cpp_1aad850f0d10f39de3d9765493ab57465c.rst", "api/define_MicroBitDevice_8cpp_1ab5d90ce911a150ca764b693f20ac1bbd.rst", "api/define_MicroBitDevice_8cpp_1ab9598967bd70e7048f577e9c61d4ec43.rst", "api/define_MicroBitDevice_8cpp_1abfc88b6cad088445a618a74da20002da.rst", "api/define_MicroBitDevice_8cpp_1acf62070a59a779770869ce9830a9e0e8.rst", "api/define_MicroBitDevice_8cpp_1ad16f1366a7e7744477e4b9a944d99cfc.rst", "api/define_MicroBitDevice_8cpp_1afae4028709cd8da63dc52bbe784e6fa6.rst", "api/define_MicroBitFlash_8cpp_1a3acffbd305ee72dcd4593c0d8af64a4f.rst", "api/define_MicroBitFlash_8cpp_1a651143349b2328e0836362ca3dd9d864.rst", "api/define_MicroBitLog_8cpp_1a44c876c78e2fc722c001dfc1a36b638f.rst", "api/define_MicroBitMemoryMap_8cpp_1a6789ebc0df71a8ef76bfbb4fb5f74aad.rst", "api/define_ST7735_8cpp_1a057611dfe567fd9095f27d40087e4948.rst", "api/define_ST7735_8cpp_1a13453718ec9240ae7966d0d8995d0c8a.rst", "api/define_ST7735_8cpp_1a18838093de54eca56aa97ead2a587280.rst", "api/define_ST7735_8cpp_1a1afa532348b3d081b7b1ecdfa9ba17e0.rst", "api/define_ST7735_8cpp_1a1b574de2db49ecfa63ce0216112903cc.rst", "api/define_ST7735_8cpp_1a1ca62118c4ce1ed1d288c6958004188e.rst", "api/define_ST7735_8cpp_1a1f9701dd8594cc2fb7c6f783b05d2f65.rst", "api/define_ST7735_8cpp_1a2816f2fce9a937ced8567b2c2797767b.rst", "api/define_ST7735_8cpp_1a3153a272f18d0f805028fce7e4337b53.rst", "api/define_ST7735_8cpp_1a3b416f231bb6eedec8cfcf277c6d36d3.rst", "api/define_ST7735_8cpp_1a484d38defdf6303f4a8d19f994d0593d.rst", "api/define_ST7735_8cpp_1a4afe2b326d709aaeb70c657f8210ea2b.rst", "api/define_ST7735_8cpp_1a5656049de5d79e5a77260b69042179af.rst", "api/define_ST7735_8cpp_1a5cbfe14163815f14aea1a4a89ea2fffc.rst", "api/define_ST7735_8cpp_1a62249e384b997229a3e2ae74ade334e2.rst", "api/define_ST7735_8cpp_1a659f0d6f0c258a3d91f882a59dfa76f5.rst", "api/define_ST7735_8cpp_1a6d18ed48efb3186877a07d0e81155453.rst", "api/define_ST7735_8cpp_1a6f8b9fad1b5db52b70960b389056f0dd.rst", "api/define_ST7735_8cpp_1a74afa388731002f70e250770901f90a2.rst", "api/define_ST7735_8cpp_1a8a827d3b90198c117f3d744cc4201c68.rst", "api/define_ST7735_8cpp_1a904eaad54b53eec42bec05f81baee26f.rst", "api/define_ST7735_8cpp_1a91cc0e141903ca80ad7fc6f108988184.rst", "api/define_ST7735_8cpp_1a95b55308b48e83b1a3e2cf51393030f1.rst", "api/define_ST7735_8cpp_1a9caf06c78cdaba66cea553668103b759.rst", "api/define_ST7735_8cpp_1a9e059398ac81ef081169997c28f908cb.rst", "api/define_ST7735_8cpp_1a9ecee6d3131d3b4f750b94d5766b998a.rst", "api/define_ST7735_8cpp_1aa061cfc0b8f0fea3e70b59d72f6e1caa.rst", "api/define_ST7735_8cpp_1aa0981e1f4a19f848f0bb2ba8a1909c8d.rst", "api/define_ST7735_8cpp_1aa4d4dfc0e9e5b75add3eb42fd7987c29.rst", "api/define_ST7735_8cpp_1aa9a60c99890ac51b71eb799b68d5c6d5.rst", "api/define_ST7735_8cpp_1aac679645f819d98761965299f19620f6.rst", "api/define_ST7735_8cpp_1aac9b57651bcead0a7564efe6460e5310.rst", "api/define_ST7735_8cpp_1aad3c0783af31cd4c4e33bf8748e961fa.rst", "api/define_ST7735_8cpp_1ab30e6bd24448245df1d60a3e1c4ddbdf.rst", "api/define_ST7735_8cpp_1ab4294b48d705690347bf0fed4af82697.rst", "api/define_ST7735_8cpp_1ac69d092c9c2693807a2a992dbf297f24.rst", "api/define_ST7735_8cpp_1acb42f35cd7e667ba514f8b6022d0dac5.rst", "api/define_ST7735_8cpp_1acc1e55b52f8a56b7719ab147308a1668.rst", "api/define_ST7735_8cpp_1ace47a845775310352dc7e2fae3e1586a.rst", "api/define_ST7735_8cpp_1ad66cc531ec897ce0465ff21d152b756a.rst", "api/define_ST7735_8cpp_1ad90bd9bbed9c95192a2b44b8f63f86e5.rst", "api/define_ST7735_8cpp_1adc23a239d2b6976d53254ef4fc5d1713.rst", "api/define_ST7735_8cpp_1addfb44b70c2b60a0d04e3d22611d54ee.rst", "api/define_ST7735_8cpp_1ae670a3d34e887559366735ca999e80d3.rst", "api/define_ST7735_8cpp_1ae879d0b7f5639d5ecd3d265d9971c979.rst", "api/define_ST7735_8cpp_1aeb5c49fcdd239ab153f5d9b15304ca9c.rst", "api/define_ST7735_8cpp_1aec4c29f7c63a6c6f168764b2bcec50cf.rst", "api/define_ST7735_8cpp_1aef4c5d9e00b07b6fc601f8ad2dbbb101.rst", "api/define_ST7735_8cpp_1aef8a3757b39dd1bf1d79920be09511ae.rst", "api/define_SoundExpressions_8cpp_1a919c3f752b8d51ddf16c8b61661818a6.rst", "api/define_StandardSPIFlash_8cpp_1a9b7ee5bbb263671ca310a70e0d1526e9.rst", "api/dir_libraries.rst", "api/dir_libraries_codal-core.rst", "api/dir_libraries_codal-core_source.rst", "api/dir_libraries_codal-core_source_core.rst", "api/dir_libraries_codal-core_source_driver-models.rst", "api/dir_libraries_codal-core_source_drivers.rst", "api/dir_libraries_codal-core_source_streams.rst", "api/dir_libraries_codal-core_source_types.rst", "api/dir_libraries_codal-microbit-v2.rst", "api/dir_libraries_codal-microbit-v2_source.rst", "api/dir_libraries_codal-microbit-v2_source_bluetooth.rst", "api/dir_libraries_codal-microbit-v2_source_compat.rst", "api/file_libraries_codal-core_source_core_CodalCompat.cpp.rst", "api/file_libraries_codal-core_source_core_CodalComponent.cpp.rst", "api/file_libraries_codal-core_source_core_CodalDevice.cpp.rst", "api/file_libraries_codal-core_source_core_CodalDmesg.cpp.rst", "api/file_libraries_codal-core_source_core_CodalFiber.cpp.rst", "api/file_libraries_codal-core_source_core_CodalHeapAllocator.cpp.rst", "api/file_libraries_codal-core_source_core_CodalListener.cpp.rst", "api/file_libraries_codal-core_source_core_CodalUtil.cpp.rst", "api/file_libraries_codal-core_source_core_MemberFunctionCallback.cpp.rst", "api/file_libraries_codal-core_source_core_codal_default_target_hal.cpp.rst", "api/file_libraries_codal-core_source_driver-models_AbstractButton.cpp.rst", "api/file_libraries_codal-core_source_driver-models_Accelerometer.cpp.rst", "api/file_libraries_codal-core_source_driver-models_CodalUSB.cpp.rst", "api/file_libraries_codal-core_source_driver-models_Compass.cpp.rst", "api/file_libraries_codal-core_source_driver-models_Display.cpp.rst", "api/file_libraries_codal-core_source_driver-models_Gyroscope.cpp.rst", "api/file_libraries_codal-core_source_driver-models_I2C.cpp.rst", "api/file_libraries_codal-core_source_driver-models_PinPeripheral.cpp.rst", "api/file_libraries_codal-core_source_driver-models_SPI.cpp.rst", "api/file_libraries_codal-core_source_driver-models_Sensor.cpp.rst", "api/file_libraries_codal-core_source_driver-models_Serial.cpp.rst", "api/file_libraries_codal-core_source_driver-models_Timer.cpp.rst", "api/file_libraries_codal-core_source_drivers_AnalogSensor.cpp.rst", "api/file_libraries_codal-core_source_drivers_AnimatedDisplay.cpp.rst", "api/file_libraries_codal-core_source_drivers_AsciiKeyMap.cpp.rst", "api/file_libraries_codal-core_source_drivers_Button.cpp.rst", "api/file_libraries_codal-core_source_drivers_FXOS8700.cpp.rst", "api/file_libraries_codal-core_source_drivers_GhostFAT.cpp.rst", "api/file_libraries_codal-core_source_drivers_HID.cpp.rst", "api/file_libraries_codal-core_source_drivers_HIDJoystick.cpp.rst", "api/file_libraries_codal-core_source_drivers_HIDKeyboard.cpp.rst", "api/file_libraries_codal-core_source_drivers_HIDMouse.cpp.rst", "api/file_libraries_codal-core_source_drivers_ILI9341.cpp.rst", "api/file_libraries_codal-core_source_drivers_KeyValueStorage.cpp.rst", "api/file_libraries_codal-core_source_drivers_LEDMatrix.cpp.rst", "api/file_libraries_codal-core_source_drivers_LIS3DH.cpp.rst", "api/file_libraries_codal-core_source_drivers_LSM303Accelerometer.cpp.rst", "api/file_libraries_codal-core_source_drivers_LSM303Magnetometer.cpp.rst", "api/file_libraries_codal-core_source_drivers_LinearAnalogSensor.cpp.rst", "api/file_libraries_codal-core_source_drivers_MAG3110.cpp.rst", "api/file_libraries_codal-core_source_drivers_MMA8653.cpp.rst", "api/file_libraries_codal-core_source_drivers_MPU6050.cpp.rst", "api/file_libraries_codal-core_source_drivers_MessageBus.cpp.rst", "api/file_libraries_codal-core_source_drivers_MultiButton.cpp.rst", "api/file_libraries_codal-core_source_drivers_NonLinearAnalogSensor.cpp.rst", "api/file_libraries_codal-core_source_drivers_PearsonHash.cpp.rst", "api/file_libraries_codal-core_source_drivers_PulseIn.cpp.rst", "api/file_libraries_codal-core_source_drivers_ST7735.cpp.rst", "api/file_libraries_codal-core_source_drivers_ScreenIO.cpp.rst", "api/file_libraries_codal-core_source_drivers_StandardSPIFlash.cpp.rst", "api/file_libraries_codal-core_source_drivers_TouchButton.cpp.rst", "api/file_libraries_codal-core_source_drivers_TouchSensor.cpp.rst", "api/file_libraries_codal-core_source_drivers_USBMSC.cpp.rst", "api/file_libraries_codal-core_source_streams_DataStream.cpp.rst", "api/file_libraries_codal-core_source_streams_EffectFilter.cpp.rst", "api/file_libraries_codal-core_source_streams_FIFOStream.cpp.rst", "api/file_libraries_codal-core_source_streams_LevelDetector.cpp.rst", "api/file_libraries_codal-core_source_streams_LevelDetectorSPL.cpp.rst", "api/file_libraries_codal-core_source_streams_LowPassFilter.cpp.rst", "api/file_libraries_codal-core_source_streams_MemorySource.cpp.rst", "api/file_libraries_codal-core_source_streams_Mixer.cpp.rst", "api/file_libraries_codal-core_source_streams_StreamFlowTrigger.cpp.rst", "api/file_libraries_codal-core_source_streams_StreamNormalizer.cpp.rst", "api/file_libraries_codal-core_source_streams_StreamRecording.cpp.rst", "api/file_libraries_codal-core_source_streams_StreamSplitter.cpp.rst", "api/file_libraries_codal-core_source_streams_Synthesizer.cpp.rst", "api/file_libraries_codal-core_source_types_BitmapFont.cpp.rst", "api/file_libraries_codal-core_source_types_CoordinateSystem.cpp.rst", "api/file_libraries_codal-core_source_types_Event.cpp.rst", "api/file_libraries_codal-core_source_types_Image.cpp.rst", "api/file_libraries_codal-core_source_types_ManagedBuffer.cpp.rst", "api/file_libraries_codal-core_source_types_ManagedString.cpp.rst", "api/file_libraries_codal-core_source_types_Matrix4.cpp.rst", "api/file_libraries_codal-core_source_types_RefCounted.cpp.rst", "api/file_libraries_codal-core_source_types_RefCountedInit.cpp.rst", "api/file_libraries_codal-microbit-v2_source_FSCache.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitAccelerometer.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitAudio.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitCompass.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitCompassCalibrator.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitCompat.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitDevice.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitDisplay.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitFile.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitFileSystem.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitFlash.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitLog.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitMemoryMap.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitPowerManager.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitRadio.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitRadioDatagram.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitRadioEvent.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitThermometer.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroBitUSBFlashManager.cpp.rst", "api/file_libraries_codal-microbit-v2_source_MicroSynth.cpp.rst", "api/file_libraries_codal-microbit-v2_source_Mixer2.cpp.rst", "api/file_libraries_codal-microbit-v2_source_NRF52FlashManager.cpp.rst", "api/file_libraries_codal-microbit-v2_source_NRF52LedMatrix.cpp.rst", "api/file_libraries_codal-microbit-v2_source_PacketBuffer.cpp.rst", "api/file_libraries_codal-microbit-v2_source_SoundEmojiSynthesizer.cpp.rst", "api/file_libraries_codal-microbit-v2_source_SoundExpressions.cpp.rst", "api/file_libraries_codal-microbit-v2_source_SoundOutputPin.cpp.rst", "api/file_libraries_codal-microbit-v2_source_SoundSynthesizerEffects.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitAccelerometerService.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEChar.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEManager.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEService.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEServices.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLETypes.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitButtonService.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitEddystone.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitEventService.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitIOPinService.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitLEDService.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitMagnetometerService.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitPartialFlashingService.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitTemperatureService.cpp.rst", "api/file_libraries_codal-microbit-v2_source_bluetooth_MicroBitUARTService.cpp.rst", "api/file_libraries_codal-microbit-v2_source_compat_MbedMemberFunctionCallback.cpp.rst", "api/file_libraries_codal-microbit-v2_source_compat_MicroBitButton.cpp.rst", "api/file_libraries_codal-microbit-v2_source_compat_MicroBitI2C.cpp.rst", "api/file_libraries_codal-microbit-v2_source_compat_MicroBitSerial.cpp.rst", "api/file_view_hierarchy.rst", "api/function_AsciiKeyMap_8cpp_1a76d0e7b8cc98a5de2959103a26d1588f.rst", "api/function_CodalComponent_8cpp_1aeb0a751e1f21f3e88eff5e7c1f2e6b48.rst", "api/function_CodalFiber_8cpp_1ab77e72715a41198c2d51657c6db83d6d.rst", "api/function_CodalFiber_8cpp_1ad7170c0dd03753b0ba186c8e30e70f1d.rst", "api/function_CodalFiber_8cpp_1af3d1b60f406670c52c55d24be993b5e3.rst", "api/function_FXOS8700_8cpp_1a292563457da80677c6ddc2f2ebf9591b.rst", "api/function_FXOS8700_8cpp_1a36a971ec52ae8c2dbf51b944d8cefaa6.rst", "api/function_LIS3DH_8cpp_1a292563457da80677c6ddc2f2ebf9591b.rst", "api/function_LIS3DH_8cpp_1a36a971ec52ae8c2dbf51b944d8cefaa6.rst", "api/function_LSM303Accelerometer_8cpp_1a292563457da80677c6ddc2f2ebf9591b.rst", "api/function_LSM303Accelerometer_8cpp_1a36a971ec52ae8c2dbf51b944d8cefaa6.rst", "api/function_LSM303Magnetometer_8cpp_1a543384816157ff7f48397eeefffdb177.rst", "api/function_ManagedString_8cpp_1a65aa33eff2e664e696fdbe3d3e4bcd9a.rst", "api/function_ManagedString_8cpp_1a69ba288f0b720c3f6d9de722ff424409.rst", "api/function_ManagedString_8cpp_1a992f6bf1a5d6c2c04001658f20671e9a.rst", "api/function_MessageBus_8cpp_1a2b8e9bf5fdd11d4746ac1d375171119f.rst", "api/function_MessageBus_8cpp_1afa2476ad8ba85ca333908c560f1da40f.rst", "api/function_MicroBitButton_8cpp_1acb8ed0e02a210c233dbda46534d3e3a4.rst", "api/function_MicroBitDevice_8cpp_1a0bcdfb56a7b8143916d8963a585a60e7.rst", "api/function_MicroBitDevice_8cpp_1a2079d63af3cbe958d7e84fb8b9acafb5.rst", "api/function_MicroBitDevice_8cpp_1a27a5bc08ff7ce978b774057e83e7e550.rst", "api/function_MicroBitDevice_8cpp_1a354d973c675a747d46b1e2f1e1bba469.rst", "api/function_MicroBitDevice_8cpp_1a3604567bcf6823dab02d339171e20559.rst", "api/function_MicroBitDevice_8cpp_1a385a8d97cae0761d23c53d8b18e98751.rst", "api/function_MicroBitDevice_8cpp_1a41a479204fe84822f46832e73f9d1fad.rst", "api/function_MicroBitDevice_8cpp_1a5750ff11e8d04023b682a014d99b901b.rst", "api/function_MicroBitDevice_8cpp_1a716df9dd0189726d393ff5f7a72bc367.rst", "api/function_MicroBitDevice_8cpp_1a726e9141c3696c0fbb7fc9743c18a260.rst", "api/function_MicroBitDevice_8cpp_1a83e7fe17375b41f3c7bded287324053f.rst", "api/function_MicroBitDevice_8cpp_1a9aefebeee6bf073575b379d19d00a3f4.rst", "api/function_MicroBitDevice_8cpp_1aa10cead111d291e5967557df09dca606.rst", "api/function_MicroBitDevice_8cpp_1aa6ccb05d4b191c32e60dd0b5b81eb650.rst", "api/function_MicroBitDevice_8cpp_1aad929ae0913afefb621d909eaf94aece.rst", "api/function_MicroBitDevice_8cpp_1abfe912cf436c0ae36e5ba328af78cc33.rst", "api/function_MicroBitDevice_8cpp_1af43b7490559c2c52205093c2576372ab.rst", "api/function_MicroBitDevice_8cpp_1af7d82336f01f39fb77f3c1ac581b4b3c.rst", "api/function_MicroBitFlash_8cpp_1a50350adb4d21c98f05795d4864b7a9b6.rst", "api/function_MicroBitLog_8cpp_1a311793d343de16396ce97934e3a0141d.rst", "api/function_MicroBitLog_8cpp_1a828fd59fd198ee012b05d3e079dc9f2b.rst", "api/function_MicroBitPowerManager_8cpp_1a5a52267ab568b498e7108aa9007eee14.rst", "api/function_MicroBitRadio_8cpp_1a069017076901874ae563e04dbd958d9b.rst", "api/function_MicroBitUSBFlashManager_8cpp_1ad382041038a6cbbda868e1d2391d5598.rst", "api/function_NRF52FlashManager_8cpp_1a50350adb4d21c98f05795d4864b7a9b6.rst", "api/function_NRF52LedMatrix_8cpp_1a8012d7c41a5acdf7fe59142bcbe34a16.rst", "api/function_PearsonHash_8cpp_1abb822fb4d187abf0db02c994fdd9f766.rst", "api/function_RefCounted_8cpp_1ad48348232972a5840883c91559c19ce3.rst", "api/function_SoundExpressions_8cpp_1a1dd7d700f4a293bb9daf8a7de076e55c.rst", "api/function_SoundExpressions_8cpp_1a287f5e4af8618ae9c853500384497500.rst", "api/function_SoundExpressions_8cpp_1a309a867ad2f668d180dd091f7372e45d.rst", "api/function_SoundExpressions_8cpp_1a4e5c3f878b31725aa82b12d508092405.rst", "api/function_SoundExpressions_8cpp_1a5f66898c419c88513f2764a3009dc63c.rst", "api/function_SoundExpressions_8cpp_1a60737a45759863c0e620ae760c3b553f.rst", "api/function_SoundExpressions_8cpp_1a70ed5118959990d80a28c4035b86c05d.rst", "api/function_SoundExpressions_8cpp_1a864709e2962d0f6829cf8c76dd7a62d2.rst", "api/function_SoundExpressions_8cpp_1a88744faf53b8387c7ecf729bc57e107e.rst", "api/function_SoundExpressions_8cpp_1aa0d8a18e215ec42c08fcd66989234f0f.rst", "api/function_SoundExpressions_8cpp_1aa4e8a4ec723446eda4d8553b8ff060f6.rst", "api/function_SoundExpressions_8cpp_1aa8a2d09598a654bcb7da4db7277fc5d6.rst", "api/function_SoundExpressions_8cpp_1aad9fd68724d233828e2eddc00cd37c92.rst", "api/function_SoundExpressions_8cpp_1ad11e25a6c6ba4d0f68e6a13767025b71.rst", "api/function_SoundExpressions_8cpp_1ad1e71d611192867e84bb32678692333f.rst", "api/function_SoundExpressions_8cpp_1adefa5f8e3d4de3471d3781611b3b200b.rst", "api/function_SoundExpressions_8cpp_1ae5f03b8c1a686c58cbc6b0fd25bd7781.rst", "api/function_SoundExpressions_8cpp_1aef045ebf30c64cdae75745af970c9578.rst", "api/function_SoundExpressions_8cpp_1afb41c29c4d22a0f03fdb9b429f9ea1be.rst", "api/function_SoundExpressions_8cpp_1afd892011bbd7fea7bd36e739db0c57ea.rst", "api/function_SoundSynthesizerEffects_8cpp_1a04f6b0874d1214d6ccb10cab0c2570a4.rst", "api/function_StreamNormalizer_8cpp_1a02252cb4291db6ef8db6b2ece6a475a0.rst", "api/function_StreamNormalizer_8cpp_1a09cb725f6c3a99b8c803b26e02926264.rst", "api/function_StreamNormalizer_8cpp_1a0a604b84aadf81c44fb9ab6b655930d5.rst", "api/function_StreamNormalizer_8cpp_1a1362b198826646d727e732920d2dda3c.rst", "api/function_StreamNormalizer_8cpp_1a1805414585f15ce45f9aab2dbe2fdc57.rst", "api/function_StreamNormalizer_8cpp_1a1d7f9563b4a2aa717fc2d6103f1a5123.rst", "api/function_StreamNormalizer_8cpp_1a2a413989037d761dbc6486b3614e8160.rst", "api/function_StreamNormalizer_8cpp_1a4f75b9e7025573b11001d1b5a87f1668.rst", "api/function_StreamNormalizer_8cpp_1a52e03ea7b759df939c767f9c52dac697.rst", "api/function_StreamNormalizer_8cpp_1a549be96b19d706afed3f7b2abbf4965f.rst", "api/function_StreamNormalizer_8cpp_1a7db885f5688c5048cc64df6b62d950b0.rst", "api/function_StreamNormalizer_8cpp_1a97c2b2b813a16085cb7ecb3b2bf64c9e.rst", "api/function_StreamNormalizer_8cpp_1adce48dc157ea7ba3a50edff16d940f90.rst", "api/function_StreamNormalizer_8cpp_1aded6f3a9d9cf4359cc1c59f77ca920c2.rst", "api/function_StreamNormalizer_8cpp_1aee105453936d06e1b957f05c4407af9a.rst", "api/function_Synthesizer_8cpp_1a5b1f1699568e7455dfd56ab98c7d4898.rst", "api/function_Timer_8cpp_1af4ec1b65c8a502592715146e478fb443.rst", "api/function_codal__default__target__hal_8cpp_1a71d29209e89161a64a01c9f594a7361e.rst", "api/namespace_codal.rst", "api/namespace_std.rst", "api/page_view_hierarchy.rst", "api/program_listing_file_libraries_codal-core_source_core_CodalCompat.cpp.rst", "api/program_listing_file_libraries_codal-core_source_core_CodalComponent.cpp.rst", "api/program_listing_file_libraries_codal-core_source_core_CodalDevice.cpp.rst", "api/program_listing_file_libraries_codal-core_source_core_CodalDmesg.cpp.rst", "api/program_listing_file_libraries_codal-core_source_core_CodalFiber.cpp.rst", "api/program_listing_file_libraries_codal-core_source_core_CodalHeapAllocator.cpp.rst", "api/program_listing_file_libraries_codal-core_source_core_CodalListener.cpp.rst", "api/program_listing_file_libraries_codal-core_source_core_CodalUtil.cpp.rst", "api/program_listing_file_libraries_codal-core_source_core_MemberFunctionCallback.cpp.rst", "api/program_listing_file_libraries_codal-core_source_core_codal_default_target_hal.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_AbstractButton.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_Accelerometer.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_CodalUSB.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_Compass.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_Display.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_Gyroscope.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_I2C.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_PinPeripheral.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_SPI.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_Sensor.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_Serial.cpp.rst", "api/program_listing_file_libraries_codal-core_source_driver-models_Timer.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_AnalogSensor.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_AnimatedDisplay.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_AsciiKeyMap.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_Button.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_FXOS8700.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_GhostFAT.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_HID.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_HIDJoystick.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_HIDKeyboard.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_HIDMouse.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_ILI9341.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_KeyValueStorage.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_LEDMatrix.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_LIS3DH.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_LSM303Accelerometer.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_LSM303Magnetometer.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_LinearAnalogSensor.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_MAG3110.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_MMA8653.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_MPU6050.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_MessageBus.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_MultiButton.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_NonLinearAnalogSensor.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_PearsonHash.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_PulseIn.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_ST7735.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_ScreenIO.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_StandardSPIFlash.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_TouchButton.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_TouchSensor.cpp.rst", "api/program_listing_file_libraries_codal-core_source_drivers_USBMSC.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_DataStream.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_EffectFilter.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_FIFOStream.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_LevelDetector.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_LevelDetectorSPL.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_LowPassFilter.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_MemorySource.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_Mixer.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_StreamFlowTrigger.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_StreamNormalizer.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_StreamRecording.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_StreamSplitter.cpp.rst", "api/program_listing_file_libraries_codal-core_source_streams_Synthesizer.cpp.rst", "api/program_listing_file_libraries_codal-core_source_types_BitmapFont.cpp.rst", "api/program_listing_file_libraries_codal-core_source_types_CoordinateSystem.cpp.rst", "api/program_listing_file_libraries_codal-core_source_types_Event.cpp.rst", "api/program_listing_file_libraries_codal-core_source_types_Image.cpp.rst", "api/program_listing_file_libraries_codal-core_source_types_ManagedBuffer.cpp.rst", "api/program_listing_file_libraries_codal-core_source_types_ManagedString.cpp.rst", "api/program_listing_file_libraries_codal-core_source_types_Matrix4.cpp.rst", "api/program_listing_file_libraries_codal-core_source_types_RefCounted.cpp.rst", "api/program_listing_file_libraries_codal-core_source_types_RefCountedInit.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_FSCache.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitAccelerometer.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitAudio.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitCompass.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitCompassCalibrator.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitCompat.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitDevice.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitDisplay.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitFile.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitFileSystem.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitFlash.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitLog.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitMemoryMap.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitPowerManager.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitRadio.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitRadioDatagram.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitRadioEvent.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitThermometer.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroBitUSBFlashManager.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_MicroSynth.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_Mixer2.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_NRF52FlashManager.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_NRF52LedMatrix.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_PacketBuffer.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_SoundEmojiSynthesizer.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_SoundExpressions.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_SoundOutputPin.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_SoundSynthesizerEffects.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitAccelerometerService.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEChar.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEManager.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEService.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLEServices.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitBLETypes.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitButtonService.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitEddystone.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitEventService.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitIOPinService.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitLEDService.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitMagnetometerService.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitPartialFlashingService.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitTemperatureService.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_bluetooth_MicroBitUARTService.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_compat_MbedMemberFunctionCallback.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_compat_MicroBitButton.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_compat_MicroBitI2C.cpp.rst", "api/program_listing_file_libraries_codal-microbit-v2_source_compat_MicroBitSerial.cpp.rst", "api/root.rst", "api/structcodal_1_1ST7735WorkBuffer.rst", "api/structcodal_1_1microbit__LEDMapStr.rst", "api/typedef_MicroBitDevice_8cpp_1a3731f47723ab9c6b2e265bc589fbf5e9.rst", "api/typedef_MicroBitDevice_8cpp_1a3a89a267df18144b75ca7ba619ba5112.rst", "api/typedef_MicroBitDevice_8cpp_1a8449cf8d6a048d04f55c5ff21f33cd5b.rst", "api/unabridged_api.rst", "api/unabridged_orphan.rst", "api/variable_AsciiKeyMap_8cpp_1a02cf225055a2c4d2b8273fc06a7e4022.rst", "api/variable_AsciiKeyMap_8cpp_1a035e7b13022af652ce68d5069d2e2e70.rst", "api/variable_AsciiKeyMap_8cpp_1a060f9fdff99889ffb40ca1d0af660446.rst", "api/variable_AsciiKeyMap_8cpp_1a06c33ab4ee5c5df5d8100d8a5fca29c7.rst", "api/variable_AsciiKeyMap_8cpp_1a0706f30e64990b9c56a950486366c55b.rst", "api/variable_AsciiKeyMap_8cpp_1a0849db89482f8c3e68b33046619d0352.rst", "api/variable_AsciiKeyMap_8cpp_1a08965ae121c69472ee61d638a94a164d.rst", "api/variable_AsciiKeyMap_8cpp_1a09691c54996060ab0c57d9626743cb47.rst", "api/variable_AsciiKeyMap_8cpp_1a0b25b4989e24edc841d8bfedecbfcf9b.rst", "api/variable_AsciiKeyMap_8cpp_1a0c417630140c2fd983a3b70fb418092e.rst", "api/variable_AsciiKeyMap_8cpp_1a0f99d1bfee2c2ed0538d6422972c0b35.rst", "api/variable_AsciiKeyMap_8cpp_1a11c5ecf63cddaf0405badd022938bd87.rst", "api/variable_AsciiKeyMap_8cpp_1a13e7c0cb3a316f7293fb5f5e0ca54b4d.rst", "api/variable_AsciiKeyMap_8cpp_1a1539e45b60c8bb7baf0f828461da1a74.rst", "api/variable_AsciiKeyMap_8cpp_1a197ebf8474aadaf55731c65f0f5f3897.rst", "api/variable_AsciiKeyMap_8cpp_1a21485161c53faa5bb4086f23f05096bf.rst", "api/variable_AsciiKeyMap_8cpp_1a2264130dd88363cfff6f8601e8a610ba.rst", "api/variable_AsciiKeyMap_8cpp_1a23546d73b7c7e837e9440710ffa7cbfc.rst", "api/variable_AsciiKeyMap_8cpp_1a26db20801683db3224f28bc7f194e30a.rst", "api/variable_AsciiKeyMap_8cpp_1a27c67c147badb36e6f7f1a47ecf17124.rst", "api/variable_AsciiKeyMap_8cpp_1a2974521be47ef52a8283da21058d7854.rst", "api/variable_AsciiKeyMap_8cpp_1a2c9f629c0a7dceb3b390ea45faaa42de.rst", "api/variable_AsciiKeyMap_8cpp_1a2cd31f0c3ea8807460e09abb9dd82d9e.rst", "api/variable_AsciiKeyMap_8cpp_1a30c3b290181146964d1345f2fa9fa175.rst", "api/variable_AsciiKeyMap_8cpp_1a3392e907e3e3902bf0da44142cb0dcda.rst", "api/variable_AsciiKeyMap_8cpp_1a36bf86b113daaf75f7b230018379762c.rst", "api/variable_AsciiKeyMap_8cpp_1a370fd0970310b963357207af6755d8a0.rst", "api/variable_AsciiKeyMap_8cpp_1a38c4424d77303d4c669611ca0a40b394.rst", "api/variable_AsciiKeyMap_8cpp_1a3d83a7b58827778d71c3f3def97121fd.rst", "api/variable_AsciiKeyMap_8cpp_1a423a546d3388419df8463c5b71836d86.rst", "api/variable_AsciiKeyMap_8cpp_1a428043778bdc4c1627e5c0e51544474e.rst", "api/variable_AsciiKeyMap_8cpp_1a4450bc80c9cca966920443fce5002eb4.rst", "api/variable_AsciiKeyMap_8cpp_1a47a8c6f83bafc4410413f7881a063191.rst", "api/variable_AsciiKeyMap_8cpp_1a4a9842c383c40b5078e68bc748fd7039.rst", "api/variable_AsciiKeyMap_8cpp_1a4f1a0567502aebb40665f13726f0cde3.rst", "api/variable_AsciiKeyMap_8cpp_1a51bbfe91e599596b9e00ac7a1e0722fe.rst", "api/variable_AsciiKeyMap_8cpp_1a52d6cd92b9c35e57a1dd5a4a43b9eead.rst", "api/variable_AsciiKeyMap_8cpp_1a56080806274770d0f1ceb2dadf68627a.rst", "api/variable_AsciiKeyMap_8cpp_1a5830886602e5ddad66ff7824b5bf90a6.rst", "api/variable_AsciiKeyMap_8cpp_1a61515aaef7f8c2fe1a9cd66cddf11012.rst", "api/variable_AsciiKeyMap_8cpp_1a627f6b5f3d13fe24821ce1446582d01f.rst", "api/variable_AsciiKeyMap_8cpp_1a628c3838b7a5133d41ce42bfb0506c2f.rst", "api/variable_AsciiKeyMap_8cpp_1a66581b690b5584a128cd5b4c4c755641.rst", "api/variable_AsciiKeyMap_8cpp_1a66d56da69b84dfb4793eebac43521e9f.rst", "api/variable_AsciiKeyMap_8cpp_1a679c6634da2986be67ec5f874ad325e2.rst", "api/variable_AsciiKeyMap_8cpp_1a6b669f02be6d376661d45b34c47c06f9.rst", "api/variable_AsciiKeyMap_8cpp_1a6d980fa0446413da2eb70687559614d1.rst", "api/variable_AsciiKeyMap_8cpp_1a7bb901859beff79ca3b285df54df6bf0.rst", "api/variable_AsciiKeyMap_8cpp_1a7bde965dbab331a9ff4c68e9e36fc391.rst", "api/variable_AsciiKeyMap_8cpp_1a7d96dfb3b746034c44d2ae4c0adf4594.rst", "api/variable_AsciiKeyMap_8cpp_1a7d9b24e360f1005da61ce8ef4db85ed1.rst", "api/variable_AsciiKeyMap_8cpp_1a834446caedea1efb54291a09ea2a1ac2.rst", "api/variable_AsciiKeyMap_8cpp_1a8350f9b0271a68dbf980c4dc381108e8.rst", "api/variable_AsciiKeyMap_8cpp_1a895d8c856a1b5099fab86df83ab6d6c1.rst", "api/variable_AsciiKeyMap_8cpp_1a8dc5eb08cb39a1754cf4283bd7d2d080.rst", "api/variable_AsciiKeyMap_8cpp_1a8ed92f9d04e15edf35d47aee702e866c.rst", "api/variable_AsciiKeyMap_8cpp_1a93be0be4a648db81962cb4c2e9bb5052.rst", "api/variable_AsciiKeyMap_8cpp_1a94b60cc7be2fb25c92965a71a5a7cb66.rst", "api/variable_AsciiKeyMap_8cpp_1a94da320ceed9c9513635523c16d73350.rst", "api/variable_AsciiKeyMap_8cpp_1a95e32d54db661406cc25c16a4cd4d72e.rst", "api/variable_AsciiKeyMap_8cpp_1a96a4a4d3c2cbb4d795aa687ee716c554.rst", "api/variable_AsciiKeyMap_8cpp_1a9753c6f3e624772f123b59ba5b978fef.rst", "api/variable_AsciiKeyMap_8cpp_1aa024919a5345a5ff7bbf12c090891472.rst", "api/variable_AsciiKeyMap_8cpp_1aa63a85eff0f1d2883b0744cdf1604db3.rst", "api/variable_AsciiKeyMap_8cpp_1aa79671e799df152361df0ba5b982f619.rst", "api/variable_AsciiKeyMap_8cpp_1aaf605b6dc3a4fdf3cc8b785fe5bdf8cb.rst", "api/variable_AsciiKeyMap_8cpp_1aaf9e54190bac70fd28e14f6ff57ab69a.rst", "api/variable_AsciiKeyMap_8cpp_1ab0b7985ce48b012634302ed52ed1a6c4.rst", "api/variable_AsciiKeyMap_8cpp_1ab3fa4abcea4908ccb52e08ab5ff20154.rst", "api/variable_AsciiKeyMap_8cpp_1ab7129d06eb53bf293424b3daa10f8c3e.rst", "api/variable_AsciiKeyMap_8cpp_1ab80002f723395f6df8151ee846bad804.rst", "api/variable_AsciiKeyMap_8cpp_1ab85628fd5a75d853f4523e6e3b7a04b4.rst", "api/variable_AsciiKeyMap_8cpp_1aba7cbcf5f5dd1d5f0b0c252b000f131f.rst", "api/variable_AsciiKeyMap_8cpp_1abd53571d7a16fe028e28d001c4703eb4.rst", "api/variable_AsciiKeyMap_8cpp_1abe258ffe4dc9babdc901a2d05de47989.rst", "api/variable_AsciiKeyMap_8cpp_1ac6969350973a2a194c082d7d84bccf81.rst", "api/variable_AsciiKeyMap_8cpp_1ac6e5618ff993b4bce08473ab119a8a8e.rst", "api/variable_AsciiKeyMap_8cpp_1ac936ddf84b6ea4fe3b5d7d4cf48046f4.rst", "api/variable_AsciiKeyMap_8cpp_1acb59fd5128860547716a02e388c33126.rst", "api/variable_AsciiKeyMap_8cpp_1acbd5eb85205e6649876142b6f955c52c.rst", "api/variable_AsciiKeyMap_8cpp_1acd5e83c9d0e633eadf5ac352a9f544bb.rst", "api/variable_AsciiKeyMap_8cpp_1acdf9401dd361834dfb745c23fc1963d0.rst", "api/variable_AsciiKeyMap_8cpp_1ace1504e827436f295eab82f9a57ea975.rst", "api/variable_AsciiKeyMap_8cpp_1ad01065bd6a3d99d70d9aa714d93831a2.rst", "api/variable_AsciiKeyMap_8cpp_1ad132e594b9a2639bde5e4f6fe422f36f.rst", "api/variable_AsciiKeyMap_8cpp_1adac008576fd4c9fff289bef492b03a72.rst", "api/variable_AsciiKeyMap_8cpp_1ae1db93cae32137c378f5bbb90a6683a0.rst", "api/variable_AsciiKeyMap_8cpp_1ae6c459f9d61d4e731bfa07bf4a7bb484.rst", "api/variable_AsciiKeyMap_8cpp_1ae71a0d88fed76cb30fa8e967c70dccfa.rst", "api/variable_AsciiKeyMap_8cpp_1ae8ffb741139f4c0fd86f22a525febba0.rst", "api/variable_AsciiKeyMap_8cpp_1aedcbd7651ed42e9e98194f72d159d70f.rst", "api/variable_AsciiKeyMap_8cpp_1aee24f29fc75e69a4e8e04aea2396e320.rst", "api/variable_AsciiKeyMap_8cpp_1aef75616e66ca4e05789229f5493c3d62.rst", "api/variable_AsciiKeyMap_8cpp_1af15d0c6d0be055aab2f5a17b69544ab9.rst", "api/variable_AsciiKeyMap_8cpp_1af3ef6971f764029893aee40256475632.rst", "api/variable_AsciiKeyMap_8cpp_1af4284f0ff3348bbb93e1f421145e957d.rst", "api/variable_AsciiKeyMap_8cpp_1af56c44d42e9b42a5a5896c1d8fd637df.rst", "api/variable_AsciiKeyMap_8cpp_1afab36d7c93b12105e316dd2814a31bdd.rst", "api/variable_AsciiKeyMap_8cpp_1afb33c1f0369db53db75e5725c2beeefb.rst", "api/variable_AsciiKeyMap_8cpp_1afd7ab3e42f8ed9f81015dda0005efd23.rst", "api/variable_AsciiKeyMap_8cpp_1affbf81e909a241f61ae86a641d3342c1.rst", "api/variable_BitmapFont_8cpp_1a27f21ff1f40f4a1d2ed52fcdb03f4187.rst", "api/variable_CodalCompat_8cpp_1a758c3372d6cee09fdcdd519d7cce550e.rst", "api/variable_CodalFiber_8cpp_1a024441a947df7cf106c747afc1c71884.rst", "api/variable_CodalFiber_8cpp_1a321f36a72129609bbefc8ef11f5f0594.rst", "api/variable_CodalFiber_8cpp_1a6a03c0975b4fb247c9dd3b4a2b222c4f.rst", "api/variable_CodalFiber_8cpp_1a6b3f16aa2de21913219f4b2c05d943fb.rst", "api/variable_CodalFiber_8cpp_1a79d205f4fdf41a28905f91cbe67e302c.rst", "api/variable_CodalFiber_8cpp_1a875529fe3c5e7bbdd548733a4e5e1de9.rst", "api/variable_CodalFiber_8cpp_1a8ccfb37c12a9651b85c545a31c630913.rst", "api/variable_CodalFiber_8cpp_1aafb289e9e5ab78b01c7f5e7bb467bb88.rst", "api/variable_CodalFiber_8cpp_1ab33e92569d99baa36adfbaa1c9a83ae3.rst", "api/variable_CodalFiber_8cpp_1ad6f9a39ab738ae2bb17e15410fd343d9.rst", "api/variable_FXOS8700_8cpp_1a71103c9f99262747c9a498efd5e54ec2.rst", "api/variable_FXOS8700_8cpp_1ae1f31e8793a543459b039ef0decad1ad.rst", "api/variable_ILI9341_8cpp_1a12a5e81ac4690592cac1fb6c8e9485ba.rst", "api/variable_LEDMatrix_8cpp_1a7b407c11f267d3fb302453361e8a99ec.rst", "api/variable_LIS3DH_8cpp_1a71103c9f99262747c9a498efd5e54ec2.rst", "api/variable_LIS3DH_8cpp_1ae1f31e8793a543459b039ef0decad1ad.rst", "api/variable_LSM303Accelerometer_8cpp_1a71103c9f99262747c9a498efd5e54ec2.rst", "api/variable_LSM303Accelerometer_8cpp_1ae1f31e8793a543459b039ef0decad1ad.rst", "api/variable_LSM303Magnetometer_8cpp_1a4dd3f5e563a05b8b4539fa75300d2538.rst", "api/variable_MAG3110_8cpp_1aaef161739390d90c05343a840c6606e4.rst", "api/variable_MMA8653_8cpp_1ad89aacfd8c9a434a00090ec41892c632.rst", "api/variable_MMA8653_8cpp_1afec87b4f9eab482fd5d01be8b98be135.rst", "api/variable_ManagedString_8cpp_1af7ca2d5d9b84fa4a9b208538d3c4329f.rst", "api/variable_MessageBus_8cpp_1ae827326cb3657a61e58b1d0c40cef12b.rst", "api/variable_MicroBitDevice_8cpp_1a3e733810377dde17a57ef676f2a01c6e.rst", "api/variable_MicroBitDevice_8cpp_1a5b247a1b9c09c76d22f0e1466c82b76c.rst", "api/variable_MicroBitDevice_8cpp_1a6bc4f8afa78cc2f4ced08845e37ce237.rst", "api/variable_MicroBitDevice_8cpp_1aca4cf1dfeab2fc47ee0436aca7c829f1.rst", "api/variable_MicroBitDevice_8cpp_1ad3b4768ec67808bc2ba52b4582473720.rst", "api/variable_MicroBitDevice_8cpp_1ad8b3b7b2a628f99bde2d771ceb5d2d13.rst", "api/variable_MicroBitDevice_8cpp_1affa4a9c43eed32f048354199021ac08c.rst", "api/variable_MicroBitFileSystem_8cpp_1a5e0a2c7c0c374fb50703be0dbd817ed6.rst", "api/variable_MicroBitFlash_8cpp_1a94a1c7bf5b9e170ed004a6f774428eae.rst", "api/variable_MicroBitPowerManager_8cpp_1a2de8e061450f2d67d2af29294c926918.rst", "api/variable_MicroBitPowerManager_8cpp_1a9a0001a09c0fccb67648eb648cdc1b24.rst", "api/variable_MicroBitRadio_8cpp_1a73d5f8bde09d544a39a35a0eb88482fe.rst", "api/variable_MicroBitUSBFlashManager_8cpp_1a1dcf62e2f8b6064eae30bee84eb43707.rst", "api/variable_NRF52FlashManager_8cpp_1a94a1c7bf5b9e170ed004a6f774428eae.rst", "api/variable_NRF52LedMatrix_8cpp_1a87fff697cb02bf4ad1ef95f65b5bf868.rst", "api/variable_PearsonHash_8cpp_1acffaf01df4ac6fa7c559ab1a27710684.rst", "api/variable_ST7735_8cpp_1a8548039b21f185e3e3bbe4e4a365a26e.rst", "api/variable_SoundSynthesizerEffects_8cpp_1a58f8237bcc62039cd6a821dfb281854f.rst", "api/variable_SoundSynthesizerEffects_8cpp_1a919d3356f404c818e4b1a3ff0d2b6db9.rst", "api/variable_SoundSynthesizerEffects_8cpp_1a96a134c607ad3c3feae7936bd1d16eab.rst", "api/variable_SoundSynthesizerEffects_8cpp_1a99d0c90424c212e5d13b8d82684600de.rst", "api/variable_SoundSynthesizerEffects_8cpp_1aab135d05b36c0ac09643fdbbb4d14a01.rst", "api/variable_SoundSynthesizerEffects_8cpp_1abc1725500a39372298b25dc70c1d4ae5.rst", "api/variable_SoundSynthesizerEffects_8cpp_1adaf55f5737ae946154150213ed3206f1.rst", "api/variable_SoundSynthesizerEffects_8cpp_1ae8e6a6b19633e7e8e7d1ec8c2f2b79f2.rst", "api/variable_Synthesizer_8cpp_1a9a05778a3f22c7bf79aef01133278e3d.rst", "api/variable_Timer_8cpp_1aa7f770e117e3a2d7911f18fefcdbb462.rst", "api/variable_codal__default__target__hal_8cpp_1a04c74f4e114fccbc00eb4c0e5b4e4462.rst", "api/variable_codal__default__target__hal_8cpp_1a0fff774d9819726afed87bb8849a77a6.rst", "api/variable_codal__default__target__hal_8cpp_1a72cce251f881b457edf43fe08ac1e251.rst", "codal-api.rst", "getting-started.rst", "glossary.rst", "guides/codal-projects.rst", "guides/index.rst", "guides/prerequisites.rst", "index.rst", "memory-and-storage/index.rst", "memory-and-storage/managedstring.rst", "memory-and-storage/microbitimage.rst", "memory-and-storage/packetbuffer.rst", "projects/disco-lights.rst", "projects/index.rst", "ubit/accelerometer.rst", "ubit/audio.rst", "ubit/buttons.rst", "ubit/compass.rst", "ubit/display.rst", "ubit/edge-connector.rst", "ubit/index.rst", "ubit/serial.rst", "ubit/storage.rst", "ubit/thermometer.rst"], "titles": ["Class Hierarchy", "Define HAS_THREAD_USER_DATA", "Define INITIAL_STACK_DEPTH", "Define CALIBRATED_SAMPLE", "Define ILI9341_SWRESET", "Define ILI9341_CASET", "Define ILI9341_FRMCTR1", "Define ILI9341_RAMRD", "Define ILI9341_FRMCTR2", "Define ILI9341_RDID2", "Define ILI9341_FRMCTR3", "Define ILI9341_SLPOUT", "Define ILI9341_PWCTR1", "Define ILI9341_DISPON", "Define ILI9341_RDID4", "Define ILI9341_INVON", "Define ILI9341_RDID3", "Define ILI9341_MADCTL", "Define ILI9341_GAMMASET", "Define ILI9341_VMCTR1", "Define ILI9341_PWCTR4", "Define ILI9341_RDIMGFMT", "Define ILI9341_NOP", "Define ILI9341_GMCTRP1", "Define ILI9341_RAMWR", "Define ILI9341_DFUNCTR", "Define ILI9341_RDDST", "Define ILI9341_SLPIN", "Define ILI9341_DISPOFF", "Define ILI9341_RDDID", "Define ILI9341_PTLON", "Define ILI9341_PTLAR", "Define ILI9341_RDID1", "Define ILI9341_GMCTRN1", "Define ILI9341_INVOFF", "Define ILI9341_RDMADCTL", "Define ILI9341_RDPIXFMT", "Define ILI9341_INVCTR", "Define ILI9341_NORON", "Define ILI9341_PASET", "Define ILI9341_PWCTR3", "Define ILI9341_RDMODE", "Define ILI9341_RDSELFDIAG", "Define ILI9341_PIXFMT", "Define ILI9341_VMCTR2", "Define ILI9341_PWCTR2", "Define ILI9341_VSCRSADD", "Define ILI9341_PWCTR5", "Define EMPTY_DATA", "Define REF_TAG", "Define EMPTY_DATA", "Define REF_TAG", "Define EMPTY_DATA", "Define REF_TAG", "Define MICROBIT_MBED_MEMBER_FUNCTION_CALLBACK_CPP", "Define CALIBRATION_INCREMENT", "Define microbit_LEDMap_PINROW1", "Define microbit_LEDMap_PINCOL0", "Define microbit_LEDMap_PINCOL1", "Define microbit_panic_DIVBASE", "Define microbit_LEDMap_PINROW3", "Define microbit_LEDMap_PINCOL3", "Define microbit_LEDMap_PINROW0", "Define microbit_LEDMap_WIDTH", "Define microbit_LEDMap_PINROW2", "Define microbit_panic_ROWDELAY", "Define microbit_LEDMap_PINROW4", "Define microbit_LEDMap_HEIGHT", "Define microbit_LEDMap_COLS", "Define microbit_panic_MSG1STDIGIT", "Define microbit_LEDMap_PINCOL2", "Define microbit_LEDMap_ROWS", "Define microbit_panic_CLEARSCANS", "Define microbit_panic_MSGLEN", "Define microbit_LEDMap_PINCOL4", "Define microbit_panic_DIVMAX", "Define microbit_panic_SCANS", "Define MIN", "Define WORD_ADDR", "Define ARRAY_LEN", "Define MAX_STRING_LENGTH", "Define ST7735_PTLAR", "Define ST7735_PWCTR6", "Define ENC16", "Define ST7735_DISPON", "Define ST7735_NOP", "Define ST7735_RDID4", "Define ST7735_DISPOFF", "Define ST7735_SWRESET", "Define assert", "Define ST7735_FRMCTR2", "Define ST7735_CASET", "Define ST7735_FRMCTR3", "Define ST7735_SLPIN", "Define ST7735_RAMRD", "Define DELAY", "Define MADCTL_BGR", "Define MADCTL_MX", "Define MADCTL_MH", "Define ST7735_MADCTL", "Define ST7735_RDID3", "Define ST7735_RDID1", "Define ST7735_PWCTR5", "Define ST7735_PWCTR4", "Define ST7735_COLMOD", "Define ST7735_NORON", "Define MADCTL_ML", "Define ST7735_SLPOUT", "Define DATABUFSIZE", "Define ST7735_VMCTR1", "Define ST7735_RAMWR", "Define ST7735_PTLON", "Define SWAP", "Define ST7735_GMCTRN1", "Define MADCTL_MY", "Define ST7735_PWCTR1", "Define ST7735_PWCTR3", "Define ST7735_RDDST", "Define MADCTL_RGB", "Define ST7735_DISSET5", "Define ST7735_INVOFF", "Define ST7735_GMCTRP1", "Define MADCTL_MV", "Define ST7735_INVCTR", "Define ST7735_INVON", "Define ST7735_RASET", "Define ST7735_FRMCTR1", "Define ST7735_RDDID", "Define ST7735_PWCTR2", "Define ST7735_RDID2", "Define CLAMP", "Define check", "Directory libraries", "Directory codal-core", "Directory source", "Directory core", "Directory driver-models", "Directory drivers", "Directory streams", "Directory types", "Directory codal-microbit-v2", "Directory source", "Directory bluetooth", "Directory compat", "File CodalCompat.cpp", "File CodalComponent.cpp", "File CodalDevice.cpp", "File CodalDmesg.cpp", "File CodalFiber.cpp", "File CodalHeapAllocator.cpp", "File CodalListener.cpp", "File CodalUtil.cpp", "File MemberFunctionCallback.cpp", "File codal_default_target_hal.cpp", "File AbstractButton.cpp", "File Accelerometer.cpp", "File CodalUSB.cpp", "File Compass.cpp", "File Display.cpp", "File Gyroscope.cpp", "File I2C.cpp", "File PinPeripheral.cpp", "File SPI.cpp", "File Sensor.cpp", "File Serial.cpp", "File Timer.cpp", "File AnalogSensor.cpp", "File AnimatedDisplay.cpp", "File AsciiKeyMap.cpp", "File Button.cpp", "File FXOS8700.cpp", "File GhostFAT.cpp", "File HID.cpp", "File HIDJoystick.cpp", "File HIDKeyboard.cpp", "File HIDMouse.cpp", "File ILI9341.cpp", "File KeyValueStorage.cpp", "File LEDMatrix.cpp", "File LIS3DH.cpp", "File LSM303Accelerometer.cpp", "File LSM303Magnetometer.cpp", "File LinearAnalogSensor.cpp", "File MAG3110.cpp", "File MMA8653.cpp", "File MPU6050.cpp", "File MessageBus.cpp", "File MultiButton.cpp", "File NonLinearAnalogSensor.cpp", "File PearsonHash.cpp", "File PulseIn.cpp", "File ST7735.cpp", "File ScreenIO.cpp", "File StandardSPIFlash.cpp", "File TouchButton.cpp", "File TouchSensor.cpp", "File USBMSC.cpp", "File DataStream.cpp", "File EffectFilter.cpp", "File FIFOStream.cpp", "File LevelDetector.cpp", "File LevelDetectorSPL.cpp", "File LowPassFilter.cpp", "File MemorySource.cpp", "File Mixer.cpp", "File StreamFlowTrigger.cpp", "File StreamNormalizer.cpp", "File StreamRecording.cpp", "File StreamSplitter.cpp", "File Synthesizer.cpp", "File BitmapFont.cpp", "File CoordinateSystem.cpp", "File Event.cpp", "File Image.cpp", "File ManagedBuffer.cpp", "File ManagedString.cpp", "File Matrix4.cpp", "File RefCounted.cpp", "File RefCountedInit.cpp", "File FSCache.cpp", "File MicroBitAccelerometer.cpp", "File MicroBitAudio.cpp", "File MicroBitCompass.cpp", "File MicroBitCompassCalibrator.cpp", "File MicroBitCompat.cpp", "File MicroBitDevice.cpp", "File MicroBitDisplay.cpp", "File MicroBitFile.cpp", "File MicroBitFileSystem.cpp", "File MicroBitFlash.cpp", "File MicroBitLog.cpp", "File MicroBitMemoryMap.cpp", "File MicroBitPowerManager.cpp", "File MicroBitRadio.cpp", "File MicroBitRadioDatagram.cpp", "File MicroBitRadioEvent.cpp", "File MicroBitThermometer.cpp", "File MicroBitUSBFlashManager.cpp", "File MicroSynth.cpp", "File Mixer2.cpp", "File NRF52FlashManager.cpp", "File NRF52LedMatrix.cpp", "File PacketBuffer.cpp", "File SoundEmojiSynthesizer.cpp", "File SoundExpressions.cpp", "File SoundOutputPin.cpp", "File SoundSynthesizerEffects.cpp", "File MicroBitAccelerometerService.cpp", "File MicroBitBLEChar.cpp", "File MicroBitBLEManager.cpp", "File MicroBitBLEService.cpp", "File MicroBitBLEServices.cpp", "File MicroBitBLETypes.cpp", "File MicroBitButtonService.cpp", "File MicroBitEddystone.cpp", "File MicroBitEventService.cpp", "File MicroBitIOPinService.cpp", "File MicroBitLEDService.cpp", "File MicroBitMagnetometerService.cpp", "File MicroBitPartialFlashingService.cpp", "File MicroBitTemperatureService.cpp", "File MicroBitUARTService.cpp", "File MbedMemberFunctionCallback.cpp", "File MicroBitButton.cpp", "File MicroBitI2C.cpp", "File MicroBitSerial.cpp", "File Hierarchy", "Function asciiKeyMap", "Function component_callback", "Function getFiberContext", "Function __create_fiber", "Function handle_fob", "Function CREATE_KEY_VALUE_TABLE(accelerometerPeriod, accelerometerPeriodData)", "Function CREATE_KEY_VALUE_TABLE(accelerometerRange, accelerometerRangeData)", "Function CREATE_KEY_VALUE_TABLE(accelerometerPeriod, accelerometerPeriodData)", "Function CREATE_KEY_VALUE_TABLE(accelerometerRange, accelerometerRangeData)", "Function CREATE_KEY_VALUE_TABLE(accelerometerPeriod, accelerometerPeriodData)", "Function CREATE_KEY_VALUE_TABLE(accelerometerRange, accelerometerRangeData)", "Function CREATE_KEY_VALUE_TABLE(magnetometerPeriod, magnetometerPeriodData)", "Function if", "Function ManagedString(codal::operator+)", "Function ManagedString(lhs, rhs)", "Function codal::allocateNotifyEvent", "Function async_callback", "Function getPullModeFronPinMode", "Function codal::microbit_LEDMap_pinOutput", "Function codal::microbit_LEDMap_configure", "Function codal::microbit_LEDMap_RCtoX", "Function codal::microbit_LEDMap_rowOff", "Function codal::microbit_LEDMap_RCtoY", "Function codal::microbit_random", "Function codal::ble_running", "Function codal::microbit_seed_random(uint32_t)", "Function __attribute__((weak))", "Function codal::microbit_friendly_name", "Function codal::microbit_serial_number", "Function codal::microbit_panic", "Function codal::microbit_LEDMap_columnOn", "Function codal::microbit_LEDMap_columnOff", "Function codal::microbit_panic_timeout", "Function codal::microbit_seed_random()", "Function codal::microbit_LEDMap_rowOn", "Function codal::microbit_reset", "Function btle_set_user_evt_handler(void(*)(uint32_t))", "Function padString", "Function writeNum", "Function CREATE_KEY_VALUE_TABLE(uipmPropertyLengths, uipmPropertyLengthData)", "Function RADIO_IRQHandler", "Function CREATE_KEY_VALUE_TABLE(usbFlashPropertyLength, usbFlashPropertyLengthData)", "Function btle_set_user_evt_handler(void(*)(uint32_t))", "Function display_irq", "Function eightBitHash", "Function isReadOnlyInline", "Function giggle", "Function hello", "Function slideData", "Function sadData", "Function slide", "Function soaringData", "Function soaring", "Function mysterious", "Function happyData", "Function twinkleData", "Function twinkle", "Function happy", "Function yawnData", "Function springData", "Function giggleData", "Function sad", "Function mysteriousData", "Function helloData", "Function yawn", "Function spring", "Function calculateFrequencyFromProgression", "Function write_sample_4", "Function read_sample_7", "Function read_sample_2", "Function read_sample_3", "Function read_sample_5", "Function write_sample_7", "Function write_sample_8", "Function write_sample_5_6", "Function read_sample_6", "Function write_sample_2", "Function read_sample_8", "Function read_sample_1", "Function write_sample_1", "Function write_sample_3", "Function read_sample_4", "Function begin_playback", "Function timer_callback", "Function __attribute__((weak))", "Namespace codal", "Namespace std", "&lt;no title&gt;", "Program Listing for File CodalCompat.cpp", "Program Listing for File CodalComponent.cpp", "Program Listing for File CodalDevice.cpp", "Program Listing for File CodalDmesg.cpp", "Program Listing for File CodalFiber.cpp", "Program Listing for File CodalHeapAllocator.cpp", "Program Listing for File CodalListener.cpp", "Program Listing for File CodalUtil.cpp", "Program Listing for File MemberFunctionCallback.cpp", "Program Listing for File codal_default_target_hal.cpp", "Program Listing for File AbstractButton.cpp", "Program Listing for File Accelerometer.cpp", "Program Listing for File CodalUSB.cpp", "Program Listing for File Compass.cpp", "Program Listing for File Display.cpp", "Program Listing for File Gyroscope.cpp", "Program Listing for File I2C.cpp", "Program Listing for File PinPeripheral.cpp", "Program Listing for File SPI.cpp", "Program Listing for File Sensor.cpp", "Program Listing for File Serial.cpp", "Program Listing for File Timer.cpp", "Program Listing for File AnalogSensor.cpp", "Program Listing for File AnimatedDisplay.cpp", "Program Listing for File AsciiKeyMap.cpp", "Program Listing for File Button.cpp", "Program Listing for File FXOS8700.cpp", "Program Listing for File GhostFAT.cpp", "Program Listing for File HID.cpp", "Program Listing for File HIDJoystick.cpp", "Program Listing for File HIDKeyboard.cpp", "Program Listing for File HIDMouse.cpp", "Program Listing for File ILI9341.cpp", "Program Listing for File KeyValueStorage.cpp", "Program Listing for File LEDMatrix.cpp", "Program Listing for File LIS3DH.cpp", "Program Listing for File LSM303Accelerometer.cpp", "Program Listing for File LSM303Magnetometer.cpp", "Program Listing for File LinearAnalogSensor.cpp", "Program Listing for File MAG3110.cpp", "Program Listing for File MMA8653.cpp", "Program Listing for File MPU6050.cpp", "Program Listing for File MessageBus.cpp", "Program Listing for File MultiButton.cpp", "Program Listing for File NonLinearAnalogSensor.cpp", "Program Listing for File PearsonHash.cpp", "Program Listing for File PulseIn.cpp", "Program Listing for File ST7735.cpp", "Program Listing for File ScreenIO.cpp", "Program Listing for File StandardSPIFlash.cpp", "Program Listing for File TouchButton.cpp", "Program Listing for File TouchSensor.cpp", "Program Listing for File USBMSC.cpp", "Program Listing for File DataStream.cpp", "Program Listing for File EffectFilter.cpp", "Program Listing for File FIFOStream.cpp", "Program Listing for File LevelDetector.cpp", "Program Listing for File LevelDetectorSPL.cpp", "Program Listing for File LowPassFilter.cpp", "Program Listing for File MemorySource.cpp", "Program Listing for File Mixer.cpp", "Program Listing for File StreamFlowTrigger.cpp", "Program Listing for File StreamNormalizer.cpp", "Program Listing for File StreamRecording.cpp", "Program Listing for File StreamSplitter.cpp", "Program Listing for File Synthesizer.cpp", "Program Listing for File BitmapFont.cpp", "Program Listing for File CoordinateSystem.cpp", "Program Listing for File Event.cpp", "Program Listing for File Image.cpp", "Program Listing for File ManagedBuffer.cpp", "Program Listing for File ManagedString.cpp", "Program Listing for File Matrix4.cpp", "Program Listing for File RefCounted.cpp", "Program Listing for File RefCountedInit.cpp", "Program Listing for File FSCache.cpp", "Program Listing for File MicroBitAccelerometer.cpp", "Program Listing for File MicroBitAudio.cpp", "Program Listing for File MicroBitCompass.cpp", "Program Listing for File MicroBitCompassCalibrator.cpp", "Program Listing for File MicroBitCompat.cpp", "Program Listing for File MicroBitDevice.cpp", "Program Listing for File MicroBitDisplay.cpp", "Program Listing for File MicroBitFile.cpp", "Program Listing for File MicroBitFileSystem.cpp", "Program Listing for File MicroBitFlash.cpp", "Program Listing for File MicroBitLog.cpp", "Program Listing for File MicroBitMemoryMap.cpp", "Program Listing for File MicroBitPowerManager.cpp", "Program Listing for File MicroBitRadio.cpp", "Program Listing for File MicroBitRadioDatagram.cpp", "Program Listing for File MicroBitRadioEvent.cpp", "Program Listing for File MicroBitThermometer.cpp", "Program Listing for File MicroBitUSBFlashManager.cpp", "Program Listing for File MicroSynth.cpp", "Program Listing for File Mixer2.cpp", "Program Listing for File NRF52FlashManager.cpp", "Program Listing for File NRF52LedMatrix.cpp", "Program Listing for File PacketBuffer.cpp", "Program Listing for File SoundEmojiSynthesizer.cpp", "Program Listing for File SoundExpressions.cpp", "Program Listing for File SoundOutputPin.cpp", "Program Listing for File SoundSynthesizerEffects.cpp", "Program Listing for File MicroBitAccelerometerService.cpp", "Program Listing for File MicroBitBLEChar.cpp", "Program Listing for File MicroBitBLEManager.cpp", "Program Listing for File MicroBitBLEService.cpp", "Program Listing for File MicroBitBLEServices.cpp", "Program Listing for File MicroBitBLETypes.cpp", "Program Listing for File MicroBitButtonService.cpp", "Program Listing for File MicroBitEddystone.cpp", "Program Listing for File MicroBitEventService.cpp", "Program Listing for File MicroBitIOPinService.cpp", "Program Listing for File MicroBitLEDService.cpp", "Program Listing for File MicroBitMagnetometerService.cpp", "Program Listing for File MicroBitPartialFlashingService.cpp", "Program Listing for File MicroBitTemperatureService.cpp", "Program Listing for File MicroBitUARTService.cpp", "Program Listing for File MbedMemberFunctionCallback.cpp", "Program Listing for File MicroBitButton.cpp", "Program Listing for File MicroBitI2C.cpp", "Program Listing for File MicroBitSerial.cpp", "CODAL API", "Struct ST7735WorkBuffer", "Struct microbit_LEDMapStr", "Typedef codal::microbit_LEDMapFnRCtoXY", "Typedef codal::microbit_LEDMapStr", "Typedef codal::microbit_LEDMapPinNumber", "Full API", "Full API", "Variable seq_A", "Variable seq_y", "Variable seq_slash", "Variable seq_K", "Variable unmapped", "Variable seq_5", "Variable seq_S", "Variable seq_E", "Variable seq_g", "Variable seq_space", "Variable seq_7", "Variable seq_x", "Variable seq_H", "Variable seq_apostrophe", "Variable seq_9", "Variable seq_backslash", "Variable seq_L", "Variable seq_question", "Variable seq_amp", "Variable seq_tilda", "Variable seq_m", "Variable seq_G", "Variable seq_b", "Variable seq_Z", "Variable seq_right_paren", "Variable seq_w", "Variable seq_q", "Variable seq_percent", "Variable seq_angle_right", "Variable seq_J", "Variable seq_plus", "Variable seq_backspace", "Variable seq_ast", "Variable seq_k", "Variable seq_quote", "Variable seq_8", "Variable seq_equal", "Variable seq_V", "Variable seq_brace_left", "Variable seq_semicolon", "Variable seq_D", "Variable seq_newline", "Variable seq_P", "Variable seq_X", "Variable seq_s", "Variable seq_R", "Variable seq_N", "Variable seq_pound", "Variable seq_B", "Variable seq_c", "Variable seq_pipe", "Variable seq_del", "Variable seq_F", "Variable seq_O", "Variable seq_1", "Variable seq_left_paren", "Variable seq_4", "Variable seq_at", "Variable seq_I", "Variable seq_z", "Variable seq_dot", "Variable seq_W", "Variable seq_Q", "Variable seq_n", "Variable seq_colon", "Variable seq_angle_left", "Variable seq_minus", "Variable seq_i", "Variable seq_a", "Variable seq_e", "Variable seq_dollar", "Variable seq_j", "Variable seq_p", "Variable seq_brace_right", "Variable seq_d", "Variable seq_U", "Variable seq_l", "Variable seq_C", "Variable seq_M", "Variable seq_comma", "Variable seq_underscore", "Variable seq_f", "Variable seq_curly_left", "Variable seq_t", "Variable seq_v", "Variable seq_Y", "Variable seq_tab", "Variable seq_0", "Variable seq_hat", "Variable seq_exclamation_point", "Variable seq_r", "Variable seq_2", "Variable seq_grave", "Variable seq_T", "Variable seq_6", "Variable seq_curly_right", "Variable seq_o", "Variable ascii_keymap", "Variable seq_3", "Variable seq_u", "Variable seq_h", "Variable pendolino3", "Variable random_value", "Variable codal::waitQueue", "Variable codal::runQueue", "Variable codal::idleFiber", "Variable codal::currentFiber", "Variable codal::sleepQueue", "Variable codal::fiber_flags", "Variable codal::forkedFiber", "Variable codal::fiberList", "Variable codal::fiberPool", "Variable codal::messageBus", "Variable accelerometerRangeData", "Variable accelerometerPeriodData", "Variable initcmd", "Variable greyScaleTimings", "Variable accelerometerRangeData", "Variable accelerometerPeriodData", "Variable accelerometerRangeData", "Variable accelerometerPeriodData", "Variable magnetometerPeriodData", "Variable MAG3110SampleRate", "Variable MMA8653SampleRange", "Variable MMA8653SampleRate", "Variable rhs", "Variable userNotifyId", "Variable codal::microbit_LEDMap_rowPins", "Variable codal::panic_timeout", "Variable codal::panic_face", "Variable microbit_device_instance", "Variable codal::microbit_LEDMap", "Variable codal::microbit_LEDMap_columnPins", "Variable friendly_name", "Variable defaultScratchPage", "Variable flash_op_complete", "Variable UIPM_I2C_NOP", "Variable uipmPropertyLengthData", "Variable MICROBIT_RADIO_POWER_LEVEL", "Variable usbFlashPropertyLengthData", "Variable flash_op_complete", "Variable instance", "Variable hashTable", "Variable codal::initCmds", "Variable _majorScale", "Variable _pentatonicScale", "Variable _minorTriad", "Variable _diminished", "Variable _majorTriad", "Variable _wholeTone", "Variable _minorScale", "Variable _chromatic", "Variable sineTone", "Variable cycleScale", "Variable p", "Variable old", "Variable value", "The Complete CODAL API", "Getting Started with CODAL", "Glossary of Terms", "CODAL Projects", "Guides", "Installation - Tools", "CODAL Documentation", "Memory and Storage", "ManagedString", "MicroBitImage", "PacketBuffer", "Disco Lights", "Projects", "uBit.accelerometer", "uBit.audio", "Buttons and Touch Input", "uBit.compass", "uBit.display", "Edge Connector", "The uBit Object", "uBit.serial", "uBit.storage", "uBit.thermometer"], "terms": {"file": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 645, 653], "codalfib": [1, 2, 135, 145, 155, 157, 159, 162, 163, 165, 167, 170, 176, 178, 179, 180, 183, 185, 186, 191, 195, 197, 209, 233, 243, 269, 270, 271, 356, 366, 368, 370, 373, 374, 376, 378, 381, 387, 389, 390, 391, 394, 396, 397, 402, 406, 408, 420, 444, 454, 484, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 642], "cpp": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 141, 142, 143, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 645, 653], "doxygendefin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "cannot": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 381, 402, 424, 455, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 650, 658, 659, 663], "find": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 359, 362, 375, 376, 381, 390, 391, 392, 394, 395, 397, 406, 430, 436, 439, 442, 449, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 645, 653, 658, 659], "doxygen": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 658, 659], "xml": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 658, 659], "output": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 366, 380, 383, 385, 406, 409, 414, 417, 419, 420, 432, 450, 452, 454, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 658, 659], "project": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 472, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 646, 648, 653, 658, 659], "codal": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 283, 284, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 646, 647, 650, 653, 654, 658, 659], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 295, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 645, 647, 648, 650, 651, 652, 655, 657, 658, 659, 661, 662, 663, 664], "directori": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 439, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 658, 659], "_doxygen": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 658, 659], "compass": [3, 136, 181, 381, 392, 394, 433, 434, 447, 469, 484, 642, 648, 661, 663], "ili9341": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 137, 484, 600, 642], "imag": [48, 49, 139, 369, 378, 389, 402, 434, 439, 452, 460, 468, 484, 642, 649, 650, 653, 661], "managedbuff": [50, 51, 139, 198, 199, 205, 207, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 426, 441, 443, 448, 449, 450, 454, 455, 456, 484, 642], "managedstr": [52, 53, 139, 213, 244, 279, 375, 378, 385, 388, 400, 424, 438, 441, 445, 455, 460, 465, 468, 472, 477, 483, 484, 610, 642, 643, 648, 649], "mbedmemberfunctioncallback": [54, 143, 484, 642], "microbitcompasscalibr": [55, 141, 484, 642], "microbitdevic": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 141, 220, 222, 229, 233, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 431, 433, 440, 444, 447, 460, 462, 479, 480, 481, 482, 484, 612, 613, 614, 615, 616, 617, 618, 642], "microbitflash": [77, 78, 141, 228, 231, 303, 439, 442, 470, 484, 620, 642], "microbitlog": [79, 141, 304, 305, 484, 642, 661], "microbitmemorymap": [80, 141, 470, 484, 642], "st7735": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137, 387, 478, 484, 628, 642], "soundexpress": [130, 141, 221, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 432, 484, 642], "standardspiflash": [131, 137, 484, 642], "path": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 439, 441, 448], "core": [132, 134, 136, 137, 138, 139, 236, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 444, 447, 460, 484, 642], "microbit": [132, 141, 142, 143, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 484, 642, 643, 645, 653, 655, 657, 658, 661, 663], "v2": [132, 141, 142, 143, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 484, 643, 645, 647, 653], "parent": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 359, 419], "librari": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 484, 643, 645], "sourc": [133, 135, 136, 137, 138, 139, 140, 142, 143, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 484, 643, 644, 645, 648, 650, 653, 654, 659], "driver": [134, 236, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 431, 433, 443, 447, 452, 484, 642, 643, 658, 659, 662], "model": [134, 236, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 434, 447, 484, 642, 643], "stream": [134, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 432, 450, 484, 642], "type": [134, 367, 382, 383, 384, 385, 386, 408, 421, 422, 423, 424, 425, 426, 427, 428, 429, 439, 442, 459, 460, 461, 466, 470, 484, 642, 643, 644, 645, 650, 651, 652, 653, 659], "codal_default_target_h": [135, 351, 484, 639, 640, 641], "codalcompat": [135, 149, 153, 155, 157, 159, 163, 165, 170, 177, 179, 180, 185, 200, 201, 213, 214, 215, 358, 360, 364, 366, 368, 370, 374, 376, 381, 382, 388, 390, 391, 396, 411, 412, 424, 425, 426, 484, 587, 642], "codalcompon": [135, 181, 184, 197, 233, 268, 392, 395, 408, 435, 443, 444, 454, 456, 484, 642], "codaldevic": [135, 149, 217, 218, 358, 360, 382, 428, 429, 436, 484, 642], "codaldmesg": [135, 146, 149, 153, 161, 164, 165, 167, 169, 170, 174, 176, 178, 180, 181, 185, 186, 190, 191, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 219, 221, 230, 239, 241, 244, 245, 357, 360, 364, 367, 372, 375, 376, 378, 380, 381, 382, 385, 387, 389, 391, 392, 396, 397, 401, 402, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 422, 430, 432, 441, 450, 452, 455, 456, 460, 484, 642], "codalheapalloc": [135, 484, 642], "codallisten": [135, 484, 642], "codalutil": [135, 181, 243, 392, 454, 484, 642], "memberfunctioncallback": [135, 484, 642], "abstractbutton": [136, 484, 642], "acceleromet": [136, 170, 368, 381, 390, 391, 392, 394, 395, 396, 431, 433, 434, 458, 471, 484, 642, 643, 648, 658, 661, 663], "codalusb": [136, 484, 642], "displai": [136, 360, 378, 387, 389, 402, 426, 434, 436, 452, 460, 468, 484, 642, 643, 648, 650, 651, 652, 653, 657, 661, 663], "gyroscop": [136, 484, 642], "i2c": [136, 183, 381, 390, 391, 392, 394, 395, 396, 431, 433, 443, 448, 484, 642, 643, 655, 658, 661], "pinperipher": [136, 484], "sensor": [136, 368, 377, 380, 381, 405, 411, 412, 433, 443, 447, 484, 642], "serial": [136, 294, 295, 367, 397, 436, 441, 476, 484, 642, 643, 648, 661], "spi": [136, 376, 387, 403, 404, 484, 642, 643, 661], "timer": [136, 145, 148, 153, 154, 163, 169, 190, 194, 195, 200, 201, 212, 236, 239, 240, 350, 356, 359, 364, 365, 366, 374, 378, 380, 389, 401, 405, 406, 411, 412, 423, 443, 447, 450, 451, 452, 460, 484, 638, 642, 643, 661], "analogsensor": [137, 393, 399, 484, 642], "animateddisplai": [137, 437, 484, 642, 643, 653, 659], "asciikeymap": [137, 174, 385, 477, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 642], "button": [137, 384, 386, 398, 405, 406, 443, 460, 474, 484, 642, 643, 647, 648, 661], "fxos8700": [137, 272, 273, 484, 598, 599, 642], "ghostfat": [137, 484, 642], "hid": [137, 173, 174, 175, 384, 385, 386, 484, 642], "hidjoystick": [137, 484, 642], "hidkeyboard": [137, 484], "hidmous": [137, 484, 642], "keyvaluestorag": [137, 460, 484, 642], "ledmatrix": [137, 484, 601, 642], "linearanalogsensor": [137, 484, 642], "lis3dh": [137, 274, 275, 484, 602, 603, 642], "lsm303acceleromet": [137, 220, 276, 277, 431, 484, 604, 605, 642], "lsm303magnetomet": [137, 220, 222, 278, 431, 433, 484, 606, 642], "mag3110": [137, 484, 607, 642, 658], "messagebu": [137, 148, 199, 207, 282, 283, 352, 359, 410, 418, 460, 466, 470, 477, 483, 484, 611, 642, 643, 661, 662], "mma8653": [137, 484, 608, 609, 642, 655], "mpu6050": [137, 484, 642], "multibutton": [137, 484, 642, 657, 661], "nonlinearanalogsensor": [137, 484, 642], "pearsonhash": [137, 311, 484, 627, 642], "pulsein": [137, 484, 642], "screenio": [137, 387, 402, 484, 642], "touchbutton": [137, 406, 484, 642, 661], "touchsensor": [137, 405, 484, 642, 661], "usbmsc": [137, 484, 642], "datastream": [138, 198, 199, 205, 207, 409, 410, 415, 416, 418, 484, 642], "effectfilt": [138, 413, 484], "fifostream": [138, 484, 642], "leveldetector": [138, 201, 412, 432, 484, 642], "leveldetectorspl": [138, 432, 484, 642], "lowpassfilt": [138, 432, 484], "memorysourc": [138, 484, 642], "mixer": [138, 432, 456, 484, 642], "streamflowtrigg": [138, 484, 642], "streamnorm": [138, 198, 201, 208, 239, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 409, 412, 413, 419, 432, 450, 484, 642], "streamrecord": [138, 484, 642], "streamsplitt": [138, 221, 432, 484, 642], "synthes": [138, 221, 243, 244, 245, 349, 432, 454, 455, 456, 484, 637, 642], "bitmapfont": [139, 213, 424, 436, 484, 586, 642], "coordinatesystem": [139, 181, 366, 368, 370, 392, 431, 433, 484, 642], "event": [139, 155, 157, 159, 165, 170, 180, 181, 195, 200, 201, 208, 282, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 484, 642, 657, 661], "matrix4": [139, 484, 642], "refcount": [139, 218, 312, 429, 484, 642], "refcountedinit": [139, 484], "bluetooth": [141, 291, 447, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 484, 642, 643, 651], "compat": [141, 367, 375, 376, 440, 447, 451, 467, 473, 474, 475, 476, 484, 642, 645], "fscach": [141, 484, 642], "microbitacceleromet": [141, 433, 484, 642, 643], "microbitaudio": [141, 243, 245, 454, 456, 484, 642, 653, 661], "microbitcompass": [141, 220, 431, 484, 642], "microbitcompat": [141, 220, 222, 228, 431, 433, 439, 484, 642], "microbitdisplai": [141, 434, 460, 468, 484, 642, 650, 651, 659, 661], "microbitfil": [141, 484, 642], "microbitfilesystem": [141, 438, 484, 619, 642], "microbitpowermanag": [141, 306, 441, 448, 484, 621, 622, 642, 661], "microbitradio": [141, 234, 235, 307, 445, 446, 484, 623, 642, 652, 661], "microbitradiodatagram": [141, 484, 642], "microbitradioev": [141, 484, 642], "microbitthermomet": [141, 471, 484, 642, 661, 664], "microbitusbflashmanag": [141, 308, 441, 484, 624, 642, 661], "microsynth": [141, 484], "mixer2": [141, 456, 484, 642], "nrf52flashmanag": [141, 309, 484, 625, 642], "nrf52ledmatrix": [141, 310, 437, 484, 626, 642, 653], "packetbuff": [141, 445, 484, 642, 648, 649], "soundemojisynthes": [141, 221, 244, 432, 455, 457, 484, 642], "soundoutputpin": [141, 484, 642], "soundsynthesizereffect": [141, 244, 333, 455, 484, 629, 630, 631, 632, 633, 634, 635, 636, 642], "microbitaccelerometerservic": [142, 484, 642], "microbitblechar": [142, 484, 642], "microbitblemanag": [142, 470, 484, 642], "microbitbleservic": [142, 459, 484, 642], "microbitbletyp": [142, 484, 642], "microbitbuttonservic": [142, 484, 642], "microbiteddyston": [142, 460, 484, 642], "microbiteventservic": [142, 460, 484, 642], "microbitiopinservic": [142, 484, 642], "microbitledservic": [142, 484, 642], "microbitmagnetometerservic": [142, 484, 642], "microbitpartialflashingservic": [142, 460, 484, 642], "microbittemperatureservic": [142, 484, 642], "microbituartservic": [142, 484, 642], "microbitbutton": [143, 284, 464, 484, 642, 643, 657], "microbiti2c": [143, 220, 431, 433, 443, 448, 484, 642, 661], "microbitseri": [143, 231, 442, 484, 642, 662], "program": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 484, 643, 644, 645, 647, 650, 651, 653, 658, 659, 661, 662], "list": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 484, 643, 644, 647, 650, 651, 654, 659], "h": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 650, 653, 661, 662, 663], "codalconfig": [144, 148, 149, 150, 152, 154, 169, 177, 179, 180, 181, 183, 184, 185, 186, 187, 194, 200, 201, 208, 210, 212, 213, 215, 216, 217, 218, 262, 355, 359, 360, 361, 363, 365, 380, 388, 390, 391, 392, 394, 395, 396, 397, 398, 405, 411, 412, 419, 421, 423, 424, 426, 427, 428, 429, 473, 642], "errorno": [144, 149, 155, 157, 158, 159, 160, 162, 163, 165, 170, 178, 179, 180, 181, 183, 184, 185, 186, 197, 199, 200, 201, 204, 206, 207, 208, 209, 213, 222, 227, 228, 229, 233, 239, 241, 242, 243, 355, 360, 366, 367, 368, 369, 370, 371, 373, 374, 376, 381, 389, 390, 391, 392, 394, 395, 396, 397, 408, 410, 411, 412, 415, 417, 418, 419, 420, 424, 433, 438, 439, 440, 444, 450, 452, 453, 454, 472, 642], "random_valu": [144, 355, 477, 483], "eventmodel": [145, 154, 169, 194, 212, 223, 356, 359, 365, 374, 380, 389, 397, 398, 401, 402, 405, 406, 407, 408, 423, 432, 434, 443, 446, 458, 460, 464, 466, 469, 470, 471, 597, 642], "component_callback": [145, 356, 477, 483], "codal_target_h": [148, 153, 165, 186, 195, 359, 364, 367, 376, 397, 406], "__create_fib": [148, 359, 477, 483], "getfibercontext": [148, 359, 477, 483], "handle_fob": [148, 359, 477, 483], "has_thread_user_data": [148, 359, 477, 483], "initial_stack_depth": [148, 359, 477, 483], "currentfib": [148, 352, 359, 460, 477, 483], "fiber_flag": [148, 352, 359, 477, 483], "fiberlist": [148, 352, 359, 477, 483], "fiberpool": [148, 352, 359, 477, 483], "forkedfib": [148, 352, 359, 477, 483], "idlefib": [148, 352, 359, 477, 483], "runqueu": [148, 352, 359, 477, 483], "sleepqueu": [148, 352, 359, 477, 483], "waitqueu": [148, 352, 359, 477, 483], "platform_includ": [149, 360], "__attribute__": [153, 225, 360, 364, 436, 460, 477, 483, 651], "weak": [153, 225, 360, 364, 436, 477, 483, 658], "old": [153, 359, 360, 364, 368, 372, 387, 388, 430, 439, 441, 444, 477, 483, 648, 658], "p": [153, 358, 359, 360, 361, 362, 364, 367, 372, 375, 382, 397, 401, 407, 417, 424, 425, 426, 430, 436, 441, 444, 445, 446, 448, 449, 452, 453, 456, 461, 474, 477, 483], "valu": [153, 292, 355, 356, 359, 361, 362, 364, 366, 371, 374, 375, 376, 378, 380, 381, 388, 390, 391, 392, 393, 395, 397, 398, 399, 405, 406, 407, 408, 411, 412, 413, 417, 423, 424, 425, 426, 430, 432, 434, 436, 439, 441, 443, 444, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 461, 464, 466, 467, 468, 469, 470, 471, 472, 477, 483, 643, 650, 651, 652, 653, 655, 659, 661, 663, 664], "calibrated_sampl": [157, 368, 477, 483], "pin": [161, 285, 371, 372, 373, 375, 377, 380, 381, 387, 390, 391, 392, 393, 394, 395, 396, 399, 401, 402, 404, 405, 406, 424, 430, 432, 436, 443, 452, 456, 467, 474, 476, 642, 659], "notifyev": [164, 165, 167, 186, 375, 376, 378, 397, 472, 642], "timer_callback": [165, 376, 477, 483], "cyclescal": [165, 376, 477, 483], "usb_hid_kei": [168, 379, 642], "ascii_keymap": [168, 267, 379, 477, 483], "seq_0": [168, 379, 477, 483], "seq_1": [168, 379, 477, 483], "seq_2": [168, 379, 477, 483], "seq_3": [168, 379, 477, 483], "seq_4": [168, 379, 477, 483], "seq_5": [168, 379, 477, 483], "seq_6": [168, 379, 477, 483], "seq_7": [168, 379, 477, 483], "seq_8": [168, 379, 477, 483], "seq_9": [168, 379, 477, 483], "seq_a": [168, 379, 477, 483], "seq_amp": [168, 379, 477, 483], "seq_angle_left": [168, 379, 477, 483], "seq_angle_right": [168, 379, 477, 483], "seq_apostroph": [168, 379, 477, 483], "seq_ast": [168, 379, 477, 483], "seq_at": [168, 379, 477, 483], "seq_b": [168, 379, 477, 483], "seq_backslash": [168, 379, 477, 483], "seq_backspac": [168, 379, 477, 483], "seq_brace_left": [168, 379, 477, 483], "seq_brace_right": [168, 379, 477, 483], "seq_c": [168, 379, 477, 483], "seq_colon": [168, 379, 477, 483], "seq_comma": [168, 379, 477, 483], "seq_curly_left": [168, 379, 477, 483], "seq_curly_right": [168, 379, 477, 483], "seq_d": [168, 379, 477, 483], "seq_del": [168, 379, 477, 483], "seq_dollar": [168, 379, 477, 483], "seq_dot": [168, 379, 477, 483], "seq_": [168, 379, 477, 483], "seq_equ": [168, 379, 477, 483], "seq_exclamation_point": [168, 379, 477, 483], "seq_f": [168, 379, 477, 483], "seq_g": [168, 379, 477, 483], "seq_grav": [168, 379, 477, 483], "seq_h": [168, 379, 477, 483], "seq_hat": [168, 379, 477, 483], "seq_i": [168, 379, 477, 483], "seq_j": [168, 379, 477, 483], "seq_k": [168, 379, 477, 483], "seq_l": [168, 379, 477, 483], "seq_left_paren": [168, 379, 477, 483], "seq_m": [168, 379, 477, 483], "seq_minu": [168, 379, 477, 483], "seq_n": [168, 379, 477, 483], "seq_newlin": [168, 379, 477, 483], "seq_o": [168, 379, 477, 483], "seq_p": [168, 379, 477, 483], "seq_perc": [168, 379, 477, 483], "seq_pip": [168, 379, 477, 483], "seq_plu": [168, 379, 477, 483], "seq_pound": [168, 379, 477, 483], "seq_q": [168, 379, 477, 483], "seq_quest": [168, 379, 477, 483], "seq_quot": [168, 379, 477, 483], "seq_r": [168, 379, 477, 483], "seq_right_paren": [168, 379, 477, 483], "seq_semicolon": [168, 379, 477, 483], "seq_slash": [168, 379, 477, 483], "seq_spac": [168, 379, 477, 483], "seq_t": [168, 379, 477, 483], "seq_tab": [168, 379, 477, 483], "seq_tilda": [168, 379, 477, 483], "seq_u": [168, 379, 477, 483], "seq_underscor": [168, 379, 477, 483], "seq_v": [168, 379, 477, 483], "seq_w": [168, 379, 477, 483], "seq_x": [168, 379, 477, 483], "seq_z": [168, 379, 477, 483], "unmap": [168, 379, 477, 483], "create_key_value_t": [170, 179, 180, 181, 232, 237, 381, 390, 391, 392, 443, 448, 477, 483], "accelerometerperiod": [170, 179, 180, 381, 390, 391, 477, 483], "accelerometerperioddata": [170, 179, 180, 381, 390, 391, 477, 483], "accelerometerrang": [170, 179, 180, 381, 390, 391, 477, 483], "accelerometerrangedata": [170, 179, 180, 381, 390, 391, 477, 483], "fat": [171, 382, 642], "ili9341_caset": [176, 387, 477, 483], "ili9341_dfunctr": [176, 387, 477, 483], "ili9341_dispoff": [176, 387, 477, 483], "ili9341_dispon": [176, 387, 477, 483], "ili9341_frmctr1": [176, 387, 477, 483], "ili9341_frmctr2": [176, 387, 477, 483], "ili9341_frmctr3": [176, 387, 477, 483], "ili9341_gammaset": [176, 387, 477, 483], "ili9341_gmctrn1": [176, 387, 477, 483], "ili9341_gmctrp1": [176, 387, 477, 483], "ili9341_invctr": [176, 387, 477, 483], "ili9341_invoff": [176, 387, 477, 483], "ili9341_invon": [176, 387, 477, 483], "ili9341_madctl": [176, 387, 477, 483], "ili9341_nop": [176, 387, 477, 483], "ili9341_noron": [176, 387, 477, 483], "ili9341_paset": [176, 387, 477, 483], "ili9341_pixfmt": [176, 387, 477, 483], "ili9341_ptlar": [176, 387, 477, 483], "ili9341_ptlon": [176, 387, 477, 483], "ili9341_pwctr1": [176, 387, 477, 483], "ili9341_pwctr2": [176, 387, 477, 483], "ili9341_pwctr3": [176, 387, 477, 483], "ili9341_pwctr4": [176, 387, 477, 483], "ili9341_pwctr5": [176, 387, 477, 483], "ili9341_ramrd": [176, 387, 477, 483], "ili9341_ramwr": [176, 387, 477, 483], "ili9341_rddid": [176, 387, 477, 483], "ili9341_rddst": [176, 387, 477, 483], "ili9341_rdid1": [176, 387, 477, 483], "ili9341_rdid2": [176, 387, 477, 483], "ili9341_rdid3": [176, 387, 477, 483], "ili9341_rdid4": [176, 387, 477, 483], "ili9341_rdimgfmt": [176, 387, 477, 483], "ili9341_rdmadctl": [176, 387, 477, 483], "ili9341_rdmod": [176, 387, 477, 483], "ili9341_rdpixfmt": [176, 387, 477, 483], "ili9341_rdselfdiag": [176, 387, 477, 483], "ili9341_slpin": [176, 387, 477, 483], "ili9341_slpout": [176, 387, 477, 483], "ili9341_swreset": [176, 387, 477, 483], "ili9341_vmctr1": [176, 387, 477, 483], "ili9341_vmctr2": [176, 387, 477, 483], "ili9341_vscrsadd": [176, 387, 477, 483], "initcmd": [176, 191, 352, 387, 402, 477, 483], "greyscaletim": [178, 389, 477, 483], "magnetometerperiod": [181, 392, 477, 483], "magnetometerperioddata": [181, 392, 477, 483], "mag3110sampler": [183, 394, 477, 483], "mma8653samplerang": [184, 395, 477, 483], "mma8653sampler": [184, 395, 477, 483], "async_callback": [186, 397, 477, 483], "allocatenotifyev": [186, 352, 397, 408, 477, 483], "usernotifyid": [186, 397, 477, 483], "eightbithash": [189, 400, 477, 483], "hashtabl": [189, 400, 477, 483], "struct": [191, 225, 352, 360, 388, 402, 407, 434, 436, 481], "st7735workbuff": [191, 352, 402, 477, 483], "assert": [191, 367, 402, 460, 477, 483], "databufs": [191, 402, 477, 483], "delai": [191, 367, 378, 402, 436, 448, 460, 477, 483, 653, 659, 661], "enc16": [191, 402, 477, 483], "madctl_bgr": [191, 402, 477, 483], "madctl_mh": [191, 402, 477, 483], "madctl_ml": [191, 402, 477, 483], "madctl_mv": [191, 402, 477, 483], "madctl_mx": [191, 402, 477, 483], "madctl_mi": [191, 402, 477, 483], "madctl_rgb": [191, 402, 477, 483], "st7735_caset": [191, 402, 477, 483], "st7735_colmod": [191, 402, 477, 483], "st7735_dispoff": [191, 402, 477, 483], "st7735_dispon": [191, 402, 477, 483], "st7735_disset5": [191, 402, 477, 483], "st7735_frmctr1": [191, 402, 477, 483], "st7735_frmctr2": [191, 402, 477, 483], "st7735_frmctr3": [191, 402, 477, 483], "st7735_gmctrn1": [191, 402, 477, 483], "st7735_gmctrp1": [191, 402, 477, 483], "st7735_invctr": [191, 402, 477, 483], "st7735_invoff": [191, 402, 477, 483], "st7735_invon": [191, 402, 477, 483], "st7735_madctl": [191, 402, 477, 483], "st7735_nop": [191, 402, 477, 483], "st7735_noron": [191, 402, 477, 483], "st7735_ptlar": [191, 402, 477, 483], "st7735_ptlon": [191, 402, 477, 483], "st7735_pwctr1": [191, 402, 477, 483], "st7735_pwctr2": [191, 402, 477, 483], "st7735_pwctr3": [191, 402, 477, 483], "st7735_pwctr4": [191, 402, 477, 483], "st7735_pwctr5": [191, 402, 477, 483], "st7735_pwctr6": [191, 402, 477, 483], "st7735_ramrd": [191, 402, 477, 483], "st7735_ramwr": [191, 402, 477, 483], "st7735_raset": [191, 402, 477, 483], "st7735_rddid": [191, 402, 477, 483], "st7735_rddst": [191, 402, 477, 483], "st7735_rdid1": [191, 402, 477, 483], "st7735_rdid2": [191, 402, 477, 483], "st7735_rdid3": [191, 402, 477, 483], "st7735_rdid4": [191, 402, 477, 483], "st7735_slpin": [191, 402, 477, 483], "st7735_slpout": [191, 402, 477, 483], "st7735_swreset": [191, 402, 477, 483], "st7735_vmctr1": [191, 402, 477, 483], "swap": [191, 359, 402, 477, 483], "spiscreenio": [192, 403, 642], "check": [193, 355, 359, 360, 366, 367, 375, 380, 388, 397, 402, 404, 407, 418, 424, 426, 428, 439, 441, 442, 444, 447, 448, 449, 450, 460, 467, 470, 472, 477, 483, 647], "read_sample_1": [206, 417, 477, 483], "read_sample_2": [206, 417, 477, 483], "read_sample_3": [206, 417, 477, 483], "read_sample_4": [206, 417, 477, 483], "read_sample_5": [206, 417, 477, 483], "read_sample_6": [206, 417, 477, 483], "read_sample_7": [206, 417, 477, 483], "read_sample_8": [206, 417, 477, 483], "write_sample_1": [206, 417, 477, 483], "write_sample_2": [206, 417, 477, 483], "write_sample_3": [206, 417, 477, 483], "write_sample_4": [206, 417, 477, 483], "write_sample_5_6": [206, 417, 477, 483], "write_sample_7": [206, 417, 477, 483], "write_sample_8": [206, 417, 477, 483], "begin_playback": [209, 420, 477, 483], "sineton": [209, 420, 455, 477, 483], "pendolino3": [210, 421, 477, 483], "empty_data": [213, 214, 215, 424, 425, 426, 477, 483], "ref_tag": [213, 214, 215, 424, 425, 426, 477, 483], "limit": [214, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "std": [214, 367, 425, 449, 477, 483], "stdlib": [215, 426], "string": [215, 355, 367, 375, 407, 424, 426, 436, 441, 442, 455, 468, 643, 649, 651, 659], "lh": [215, 279, 426, 477, 483], "rh": [215, 426, 477, 483], "oper": [215, 291, 359, 363, 390, 397, 405, 424, 425, 426, 430, 439, 440, 441, 443, 444, 448, 450, 451, 453, 454, 460, 467, 468, 473, 477, 483, 643, 645, 647, 650, 651, 652, 658, 659, 661, 662], "isreadonlyinlin": [217, 428, 477, 483], "microbiterror": [220, 222, 431, 433], "microbitev": [220, 222, 431, 432, 433, 434, 458, 460, 464, 466, 469, 470, 471, 472, 642, 643], "microbitfib": [220, 222, 431, 433, 460, 466, 467, 472, 642], "microbitio": [220, 431, 443, 448, 467, 642, 659, 661], "nrf52pwm": [221, 244, 432, 455], "microbitconfig": [223, 225, 228, 229, 231, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 434, 436, 439, 440, 442, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 642, 662], "calibration_incr": [223, 434, 477, 483], "hal": [225, 436], "nrf_gpio": [225, 436], "nrf": [225, 233, 236, 240, 436, 444, 447, 451, 460, 472], "microbit_ledmapstr": [225, 352, 436, 477, 483, 616], "ble_run": [225, 352, 436, 440, 444, 447, 477, 483], "microbit_friendly_nam": [225, 352, 436, 477, 483], "microbit_ledmap_columnoff": [225, 352, 436, 477, 483], "microbit_ledmap_columnon": [225, 352, 436, 477, 483], "microbit_ledmap_configur": [225, 352, 436, 477, 483], "microbit_ledmap_pinoutput": [225, 352, 436, 477, 483], "microbit_ledmap_rctox": [225, 352, 436, 477, 483, 616], "microbit_ledmap_rctoi": [225, 352, 436, 477, 483, 616], "microbit_ledmap_rowoff": [225, 352, 436, 477, 483], "microbit_ledmap_rowon": [225, 352, 436, 477, 483], "microbit_pan": [225, 352, 436, 460, 462, 477, 483], "microbit_panic_timeout": [225, 352, 436, 477, 483], "microbit_random": [225, 352, 436, 477, 483], "microbit_reset": [225, 352, 436, 460, 470, 477, 483], "microbit_seed_random": [225, 352, 436, 477, 483], "uint32_t": [225, 229, 240, 295, 352, 355, 358, 359, 360, 362, 364, 366, 367, 370, 371, 373, 374, 375, 376, 382, 385, 388, 389, 400, 401, 402, 403, 404, 407, 417, 420, 428, 430, 432, 435, 436, 439, 440, 441, 442, 443, 444, 448, 450, 451, 452, 456, 460, 467, 470, 477, 478, 483], "microbit_serial_numb": [225, 352, 436, 477, 483], "microbit_ledmap_col": [225, 436, 477, 483], "microbit_ledmap_height": [225, 436, 477, 483], "microbit_ledmap_pincol0": [225, 436, 477, 483], "microbit_ledmap_pincol1": [225, 436, 477, 483], "microbit_ledmap_pincol2": [225, 436, 477, 483], "microbit_ledmap_pincol3": [225, 436, 477, 483], "microbit_ledmap_pincol4": [225, 436, 477, 483], "microbit_ledmap_pinrow0": [225, 436, 477, 483], "microbit_ledmap_pinrow1": [225, 436, 477, 483], "microbit_ledmap_pinrow2": [225, 436, 477, 483], "microbit_ledmap_pinrow3": [225, 436, 477, 483], "microbit_ledmap_pinrow4": [225, 436, 477, 483], "microbit_ledmap_row": [225, 436, 477, 483], "microbit_ledmap_width": [225, 436, 477, 483], "microbit_panic_clearscan": [225, 436, 477, 483], "microbit_panic_divbas": [225, 436, 477, 483], "microbit_panic_divmax": [225, 436, 477, 483], "microbit_panic_msg1stdigit": [225, 436, 477, 483], "microbit_panic_msglen": [225, 436, 477, 483], "microbit_panic_rowdelai": [225, 436, 477, 483], "microbit_panic_scan": [225, 436, 477, 483], "microbit_ledmapfnrctoxi": [225, 352, 436, 477, 479, 483], "microbit_ledmappinnumb": [225, 352, 436, 477, 479, 483, 612, 617], "microbit_ledmap": [225, 352, 436, 477, 483], "microbit_ledmap_columnpin": [225, 352, 436, 477, 483, 616], "microbit_ledmap_rowpin": [225, 352, 436, 477, 483, 616], "panic_fac": [225, 352, 436, 477, 483], "panic_timeout": [225, 352, 436, 477, 483], "friendly_nam": [225, 436, 477, 483], "microbit_device_inst": [225, 436, 470, 477, 483], "nrflowleveltim": [226, 437, 443, 452, 661], "microbitstorag": [228, 434, 439, 460, 470, 642, 661, 663], "defaultscratchpag": [228, 439, 477, 483], "btle_set_user_evt_handl": [229, 240, 440, 451, 477, 483], "void": [229, 240, 285, 286, 288, 292, 296, 297, 298, 299, 300, 301, 302, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 380, 381, 382, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 477, 483, 651], "min": [229, 360, 374, 383, 389, 414, 424, 425, 426, 430, 439, 440, 441, 445, 448, 449, 450, 454, 456, 477, 483], "word_addr": [229, 440, 477, 483], "flash_op_complet": [229, 240, 440, 451, 477, 483], "new": [230, 359, 360, 361, 366, 367, 368, 370, 372, 376, 382, 387, 388, 389, 390, 391, 392, 397, 402, 406, 407, 415, 417, 419, 420, 424, 426, 427, 431, 432, 437, 438, 439, 440, 441, 443, 444, 449, 450, 452, 460, 462, 465, 467, 472, 475, 476, 643, 646, 650, 651, 653], "padstr": [230, 441, 477, 483], "writenum": [230, 358, 441, 477, 483], "array_len": [230, 441, 477, 483], "app_util": [231, 442], "crc32": [231, 442, 470], "sdk_config": [231, 442], "max_string_length": [231, 442, 477, 483], "uipmpropertylength": [232, 443, 477, 483], "uipmpropertylengthdata": [232, 443, 477, 483], "uipm_i2c_nop": [232, 443, 477, 483], "radio_irqhandl": [233, 444, 477, 483], "microbit_radio_power_level": [233, 444, 477, 483], "inc": [236, 447], "usbflashpropertylength": [237, 448, 477, 483], "usbflashpropertylengthdata": [237, 448, 477, 483], "nrf52pin": [241, 431, 432, 443, 452, 474, 475, 476], "display_irq": [241, 452, 477, 483], "instanc": [241, 432, 436, 444, 452, 465, 470, 477, 483, 657, 662], "giggl": [244, 455, 477, 483], "giggledata": [244, 455, 477, 483], "happi": [244, 455, 477, 483, 653], "happydata": [244, 455, 477, 483], "hello": [244, 455, 477, 483, 643, 650, 653, 659, 661], "hellodata": [244, 455, 477, 483], "mysteri": [244, 455, 477, 483], "mysteriousdata": [244, 455, 477, 483], "sad": [244, 455, 477, 483], "saddata": [244, 455, 477, 483], "slide": [244, 455, 477, 483], "slidedata": [244, 455, 477, 483], "soar": [244, 455, 477, 483], "soaringdata": [244, 455, 477, 483], "spring": [244, 455, 477, 483], "springdata": [244, 455, 477, 483], "twinkl": [244, 455, 477, 483], "twinkledata": [244, 455, 477, 483], "yawn": [244, 455, 477, 483], "yawndata": [244, 455, 477, 483], "clamp": [244, 412, 450, 455, 477, 483], "calculatefrequencyfromprogress": [246, 457, 477, 483], "_chromat": [246, 457, 477, 483], "_diminish": [246, 457, 477, 483], "_majorscal": [246, 457, 477, 483], "_majortriad": [246, 457, 477, 483], "_minorscal": [246, 457, 477, 483], "_minortriad": [246, 457, 477, 483], "_pentatonicscal": [246, 457, 477, 483], "_wholeton": [246, 457, 477, 483], "microbit_mbed_member_function_callback_cpp": [262, 473, 477, 483], "getpullmodefronpinmod": [263, 474, 477, 483], "defin": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 359, 367, 368, 379, 382, 384, 385, 387, 402, 404, 407, 408, 424, 425, 426, 434, 436, 440, 441, 442, 450, 451, 455, 456, 460, 467, 472, 473, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643], "doxygenfunct": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 293, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 658, 659], "unabl": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 645], "resolv": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 645], "argument": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 645], "128": [267, 379, 400, 402, 412, 420, 449, 456], "could": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 359, 376, 385, 424, 432, 652, 657, 659, 663], "pars": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 417, 424, 441], "eror": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351], "i": [267, 279, 291, 293, 300, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 644, 645, 647, 648, 650, 651, 652, 653, 655, 657, 658, 659, 661, 662, 664], "invalid": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 407, 439, 441, 448, 460], "c": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 645, 648, 650, 653, 659], "declar": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351], "expect": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 412, 419, 441, 647, 650], "identifi": [267, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 366, 367, 368, 370, 381, 390, 391, 392, 396, 439, 643], "nest": [267, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351], "name": [267, 293, 294, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 382, 407, 436, 439, 442, 452, 455, 460, 474, 643, 661], "error": [267, 279, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 356, 368, 381, 391, 392, 394, 397, 407, 439, 443, 448, 460, 463, 467, 470, 645], "15": [267, 387, 400, 402, 412, 420, 427, 434, 436, 455, 461, 470, 612], "paramet": [279, 292, 359, 368, 387, 426, 439, 440, 448, 454, 455, 456, 457, 460, 650, 651, 653, 659], "qualifi": [279, 439], "got": [279, 388, 419], "4": [279, 355, 358, 367, 375, 381, 384, 387, 388, 390, 391, 392, 394, 395, 396, 400, 402, 404, 407, 412, 420, 427, 430, 432, 434, 435, 436, 440, 441, 442, 443, 447, 448, 455, 457, 460, 466, 468, 470, 651, 659], "uint16_t": [282, 356, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 406, 407, 411, 412, 415, 417, 419, 420, 423, 425, 426, 431, 433, 434, 435, 437, 439, 443, 444, 446, 447, 448, 449, 450, 452, 454, 455, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476], "alloc": [282, 359, 360, 407, 408, 417, 424, 439, 441, 444, 449, 450, 452, 454, 460, 472, 652, 662], "notifi": [282, 359, 410, 414, 441, 443, 454, 461, 464, 466, 470], "code": [282, 359, 367, 383, 384, 385, 386, 391, 392, 397, 407, 418, 429, 433, 436, 439, 440, 443, 444, 447, 451, 460, 472, 643, 644, 646, 647, 648, 650, 651, 652, 653, 662], "dynamicali": 282, "gener": [282, 292, 300, 355, 367, 384, 385, 386, 397, 406, 420, 436, 440, 441, 442, 443, 444, 447, 450, 451, 454, 456, 472, 643, 645, 647, 648, 653, 657, 659, 662], "purpos": [282, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 647, 659, 662], "condit": [282, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "synchronis": [282, 659], "static": [285, 286, 287, 288, 289, 297, 298, 301, 355, 356, 358, 359, 360, 367, 376, 379, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 397, 402, 407, 417, 420, 428, 431, 434, 436, 439, 440, 441, 443, 448, 451, 452, 455, 457, 460, 462, 474, 476, 588, 589, 590, 592, 593, 594, 595, 596, 597, 612, 613, 614, 616, 617, 628, 661], "inlin": [285, 286, 288, 297, 298, 301, 400, 407, 428, 436, 449], "uint8_t": [285, 356, 359, 360, 367, 371, 373, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 400, 402, 403, 404, 407, 408, 412, 413, 414, 417, 419, 421, 424, 425, 430, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 478, 482, 593, 614, 628, 651, 652, 663], "int": [287, 288, 289, 290, 296, 297, 298, 299, 301, 355, 356, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 472, 476, 479, 480, 613, 643, 651, 653, 659, 661, 663], "row": [287, 288, 289, 301, 389, 408, 424, 427, 436, 441, 452, 479, 480, 659], "col": [287, 289, 297, 298, 424, 427, 436, 452, 480], "max": [290, 355, 364, 374, 376, 383, 387, 389, 405, 407, 412, 434, 436, 439, 448, 449, 454], "bool": [291, 297, 356, 358, 362, 363, 366, 367, 371, 372, 375, 376, 380, 382, 389, 390, 391, 392, 395, 396, 397, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 430, 431, 432, 436, 438, 439, 440, 441, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 464, 467, 469, 471, 472, 473, 478], "determin": [291, 359, 366, 370, 374, 380, 381, 385, 388, 391, 392, 397, 411, 412, 417, 424, 430, 434, 439, 441, 443, 448, 452, 456, 470, 643, 645, 650, 663], "ble": [291, 300, 440, 444, 447, 451, 459, 460, 461, 467, 468, 469, 470, 643], "stack": [291, 300, 359, 373, 402, 460, 467, 643, 644, 651], "current": [291, 359, 374, 375, 382, 389, 402, 411, 412, 415, 434, 436, 441, 450, 452, 454, 456, 467, 468, 470, 643, 645, 653, 661, 662, 663, 664], "run": [291, 359, 368, 376, 381, 394, 397, 407, 436, 439, 443, 444, 447, 460, 643, 645, 647, 651, 653, 655, 658, 661, 664], "return": [291, 294, 295, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 653, 659, 662], "true": [291, 355, 356, 358, 366, 367, 371, 375, 376, 378, 380, 382, 387, 389, 391, 392, 397, 401, 402, 405, 406, 407, 408, 410, 411, 412, 414, 415, 417, 419, 420, 424, 425, 428, 431, 432, 439, 440, 441, 443, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 464, 467, 469, 470, 471, 472, 653], "fals": [291, 356, 358, 359, 366, 367, 375, 376, 378, 380, 382, 387, 389, 391, 392, 401, 402, 405, 406, 407, 408, 410, 411, 412, 414, 417, 419, 420, 428, 431, 432, 439, 440, 441, 443, 446, 448, 449, 450, 451, 452, 454, 455, 458, 459, 460, 464, 467, 469, 471, 472], "otherwis": [291, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 645, 647], "seed": [292, 300, 355, 436], "pseudo": [292, 355], "random": [292, 300, 355, 364, 420, 436, 444, 455, 651, 663], "number": [292, 294, 295, 300, 355, 359, 360, 367, 375, 387, 397, 412, 417, 420, 424, 434, 436, 441, 444, 448, 450, 452, 460, 643, 645, 650, 651, 657, 659, 662, 663], "rng": [292, 300], "us": [292, 300, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 644, 645, 648, 650, 651, 652, 653, 655, 657, 658, 661, 662, 663, 664], "given": [292, 360, 380, 397, 401, 434, 439, 441, 460, 466, 650, 651, 662], "32": [292, 355, 359, 376, 379, 381, 382, 391, 396, 400, 402, 417, 420, 430, 434, 439, 441, 444, 448, 460, 659, 663], "bit": [292, 302, 355, 359, 367, 371, 376, 381, 385, 389, 390, 391, 392, 394, 395, 402, 407, 411, 417, 429, 430, 436, 441, 442, 444, 448, 449, 450, 454, 456, 457, 460, 470, 644, 645, 647, 648, 650, 651, 652, 653, 655, 657, 658, 659, 661, 662, 663, 664], "thi": [292, 294, 295, 300, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 644, 645, 647, 648, 650, 651, 652, 653, 655, 657, 658, 659, 662, 663], "doe": [292, 389, 439, 440, 441, 447, 451, 643, 645, 653, 659], "nrf52833": [292, 300], "": [292, 300, 355, 358, 359, 360, 367, 368, 370, 373, 374, 375, 378, 382, 385, 389, 394, 395, 397, 400, 402, 406, 408, 411, 412, 415, 417, 419, 420, 422, 424, 426, 431, 432, 434, 436, 438, 439, 441, 444, 448, 449, 450, 454, 460, 467, 468, 470, 472, 643, 645, 647, 650, 657, 659, 661, 662], "built": [292, 300, 455, 661], "cryptograph": [292, 300], "The": [292, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 644, 647, 648, 650, 651, 652, 653, 655, 657, 658, 659, 662, 663, 664], "1": [293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 355, 356, 358, 359, 360, 361, 362, 364, 366, 367, 371, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 406, 407, 408, 410, 411, 412, 415, 417, 418, 419, 420, 421, 424, 426, 427, 428, 429, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 462, 464, 465, 467, 469, 470, 472, 643, 651, 652, 659, 663], "char": [294, 355, 358, 367, 371, 375, 378, 382, 383, 384, 385, 386, 388, 400, 421, 424, 426, 436, 438, 439, 441, 448, 455, 460, 463, 465, 468, 472, 650, 653], "deriv": [294, 295, 397, 436], "friendli": 294, "devic": [294, 295, 366, 367, 370, 381, 385, 390, 391, 392, 394, 395, 430, 442, 444, 448, 458, 460, 464, 469, 471, 472, 644, 645, 651, 653, 655, 658, 659, 663], "base": [294, 359, 366, 368, 387, 397, 402, 407, 420, 436, 443, 444, 448, 452, 456, 458, 464, 466, 467, 468, 469, 470, 471, 472, 643, 653, 659], "its": [294, 359, 376, 381, 391, 392, 407, 436, 439, 443, 460, 643, 647, 653, 655, 659, 663], "uniqu": [295, 643], "consist": [295, 366, 643], "intern": [295, 300, 387, 396, 420, 436, 444, 643, 661], "data": [295, 356, 359, 360, 362, 366, 367, 368, 370, 371, 374, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 399, 407, 410, 411, 412, 414, 415, 417, 418, 420, 422, 424, 425, 426, 427, 430, 434, 439, 440, 441, 442, 443, 444, 445, 448, 451, 453, 454, 455, 458, 459, 460, 461, 464, 466, 467, 468, 469, 470, 471, 472, 643, 645, 650, 651, 652, 655, 659, 661, 662, 663], "statuscod": [296, 364, 436], "iter": [299, 356, 375, 385, 388, 417, 420, 430, 434, 436, 439, 442, 472], "galoi": 300, "lfsr": [300, 355], "we": [300, 355, 356, 359, 360, 366, 367, 368, 374, 375, 376, 378, 380, 381, 385, 388, 389, 390, 391, 392, 394, 395, 397, 401, 402, 404, 405, 406, 408, 410, 411, 412, 414, 415, 418, 419, 420, 422, 424, 426, 427, 428, 430, 431, 432, 433, 434, 436, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 460, 466, 467, 468, 469, 470, 472, 643, 644, 645, 647, 650, 651, 653, 657, 658, 659, 661, 664], "do": [300, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 645, 647, 650, 651, 652, 659, 661], "hardwar": [300, 407, 440, 443, 444, 452, 643, 644, 645, 653, 655, 657, 658, 661, 662], "rel": [300, 386, 439, 659, 664], "high": [300, 356, 366, 374, 391, 395, 397, 411, 412, 444, 452, 460, 650, 659], "power": [300, 359, 381, 387, 389, 392, 394, 395, 402, 431, 433, 436, 441, 443, 444, 447, 448, 455, 460, 659, 661, 663], "lock": [300, 359, 372, 401, 414, 454, 645, 662], "out": [300, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 645, 658, 662], "less": [300, 355, 419, 439, 441, 460, 650, 659], "than": [300, 355, 380, 402, 415, 439, 441, 443, 448, 450, 452, 460, 467, 643, 650, 653, 659], "optim": [300, 355, 360, 441, 448], "applic": [300, 383, 384, 385, 386, 387, 461, 470, 472, 643, 645, 653, 655], "interfac": [300, 367, 376, 385, 386, 426, 443, 448, 460, 643, 653, 661, 662], "A": [300, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 645, 650, 655, 657], "suffici": [300, 366, 397, 448], "our": [300, 355, 356, 359, 366, 367, 368, 370, 374, 375, 378, 380, 381, 388, 390, 391, 392, 394, 395, 396, 397, 401, 405, 406, 410, 411, 412, 414, 417, 419, 420, 424, 430, 434, 436, 439, 440, 441, 443, 444, 447, 448, 450, 452, 454, 456, 458, 460, 464, 466, 467, 468, 469, 471, 472, 643, 645, 651, 653, 658, 661, 663], "much": [300, 376, 415, 443, 643, 645, 659], "more": [300, 368, 376, 395, 397, 402, 406, 415, 418, 424, 439, 440, 443, 447, 450, 451, 454, 460, 467, 643, 645, 648, 650, 651, 652, 657, 658, 659, 661], "lightweight": [300, 662], "perform": [302, 359, 366, 368, 370, 374, 385, 391, 392, 393, 394, 399, 401, 405, 407, 430, 434, 441, 443, 444, 452, 454, 460, 643, 655, 658, 664], "hard": 302, "reset": [302, 359, 366, 374, 376, 378, 387, 389, 394, 401, 402, 407, 411, 412, 430, 439, 441, 443, 448, 449, 454, 460, 470], "micro": [302, 376, 436, 442, 456, 460, 470, 644, 645, 647, 648, 650, 651, 652, 653, 655, 657, 658, 659, 661, 662, 663, 664], "010232520091002440044008881023012801022400110400000000000000010000000000": [315, 455], "310231623093602440093908880000012800000100240000000000000000000000000000": [316, 455], "402233727273014440044008880000003101024400030000000000000000000000000000": [318, 455], "002322129029508440240408880000000400022400110000000000000000007500000000": [321, 455], "000002129029509440240408880145000400022400110000000000000000007500000000": [321, 455], "010180007672209440075608880855012800000000240000000000000000000000000000": [322, 455], "005312520091002440044008880636012801022400110300000000000000010000000000": [325, 455], "008220784019008440044008880681001600005500240000000000000000005000000000": [325, 455], "004790784019008440044008880298001600000000240000000000000000005000000000": [325, 455], "003210784019008440044008880108001600003300080000000000000000005000000000": [325, 455], "010230037116313440058708881023003100000000240000000000000000050000000000": [326, 455], "110232570087411440044008880352005901003300010000000000000000010000000000": [327, 455], "310232729021105440288908880091006300000000240700020000000000003000000000": [327, 455], "310232729010205440288908880091006300000000240700020000000000003000000000": [327, 455], "310232729011405440288908880091006300000000240700020000000000003000000000": [327, 455], "405512845385000440044008880000012803010500160000000000000000085000500015": [329, 455], "300001064001602440098108880000012800000100040000000000000000000000000000": [330, 455], "310231064029302440098108881023012800000100040000000000000000000000000000": [330, 455], "document": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 643, 644, 645, 647, 653, 659], "mit": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "licens": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "copyright": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "2017": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 389, 390, 391, 392, 393, 397, 398, 399, 404, 405, 406, 407, 408, 411, 412, 415, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 443, 450, 452, 454, 456, 473], "lancast": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 645], "univers": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 645], "permiss": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 645], "herebi": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "grant": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "free": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 644, 650, 651, 652, 655], "charg": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "ani": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 644, 647, 650, 651, 652, 653, 659, 661, 662], "person": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "obtain": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "copi": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 645, 651], "softwar": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 644, 645, 657, 664], "associ": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "deal": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "without": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 651, 653, 659], "restrict": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "includ": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 484, 643, 645, 651, 653, 659, 661, 663], "right": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 647, 651, 659], "modifi": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 645], "merg": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643], "publish": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "distribut": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 647], "sublicens": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "sell": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "permit": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 651], "whom": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "furnish": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "so": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 645, 647, 648, 651, 653, 659, 661], "subject": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "follow": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 645, 647, 651, 652, 653, 659, 663], "abov": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 645, 647, 659], "notic": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 659], "shall": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "all": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 645, 650, 653, 658, 659, 661, 662], "substanti": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "portion": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "THE": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "provid": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 645, 650, 651, 652, 657, 658, 659, 661, 662, 663, 664], "AS": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "warranti": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "OF": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "kind": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643], "express": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "OR": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "impli": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "BUT": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "NOT": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "TO": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "merchant": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "fit": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643], "FOR": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "particular": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "AND": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "noninfring": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "IN": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "NO": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "author": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "holder": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "BE": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "liabl": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "claim": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "damag": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "other": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 644, 645, 650, 651, 653, 655, 658, 661, 664], "liabil": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "whether": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "an": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 644, 645, 648, 651, 652, 653, 655, 657, 658, 659, 662, 664], "action": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 653, 658], "contract": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "tort": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "aris": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "connect": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 643, 645, 659], "WITH": [355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "string_revers": 355, "saniti": [355, 360, 424, 426, 428, 448], "null": [355, 356, 358, 359, 360, 361, 367, 368, 371, 372, 375, 376, 379, 382, 385, 388, 397, 402, 403, 404, 406, 407, 408, 409, 410, 414, 415, 416, 418, 419, 421, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 450, 451, 452, 453, 454, 456, 460, 461, 462, 465, 466, 468, 470, 476, 588, 589, 590, 591, 592, 594, 595, 596, 597, 650, 663], "device_invalid_paramet": [355, 359, 360, 369, 371, 372, 374, 375, 376, 378, 384, 385, 388, 397, 404, 406, 408, 411, 412, 417, 420, 424, 425, 430, 432, 441, 444, 445, 446, 448, 450, 453, 454, 456, 460], "j": [355, 424, 427, 441, 460, 651], "strlen": [355, 358, 367, 382, 388, 426, 439, 441, 460, 465], "while": [355, 356, 358, 359, 360, 361, 362, 364, 367, 375, 376, 378, 381, 382, 391, 392, 394, 397, 400, 402, 404, 406, 407, 408, 412, 415, 420, 424, 425, 428, 430, 434, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 454, 456, 460, 465, 466, 467, 469, 472, 643, 653, 659], "device_ok": [355, 356, 359, 360, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 401, 402, 404, 406, 407, 408, 410, 411, 412, 414, 415, 417, 418, 419, 420, 424, 425, 430, 432, 436, 441, 443, 444, 447, 448, 450, 451, 452, 453, 454, 456, 460], "itoa": [355, 358, 375, 382, 426], "n": [355, 358, 360, 367, 376, 382, 390, 395, 397, 415, 424, 430, 434, 436, 439, 440, 441, 442, 448, 450, 452, 455, 460, 650, 651, 653, 659], "0": [355, 356, 358, 359, 360, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 593, 613, 650, 651, 652, 653, 659], "posit": [355, 378, 387, 408, 420, 424, 425, 434, 436, 439, 450, 453, 454, 456, 651], "record": [355, 359, 360, 366, 368, 380, 397, 405, 418, 420, 430, 434, 439, 441, 442, 444, 447, 452, 454, 460], "sign": [355, 381, 394], "ensur": [355, 359, 360, 366, 368, 374, 375, 381, 390, 391, 392, 397, 406, 410, 411, 412, 417, 430, 434, 439, 440, 441, 443, 444, 447, 448, 452, 454, 458, 469, 471, 643, 645, 647, 650, 653, 662], "work": [355, 359, 367, 376, 397, 402, 443, 449, 460, 643, 645, 650, 651, 653, 662], "calcul": [355, 359, 367, 368, 375, 378, 385, 388, 389, 412, 414, 417, 424, 426, 434, 436, 441, 444, 470, 472, 664], "each": [355, 366, 385, 387, 391, 392, 394, 419, 420, 424, 434, 436, 439, 441, 444, 448, 450, 455, 458, 464, 467, 468, 469, 471, 472, 643, 645, 647, 651, 653, 659], "charact": [355, 375, 421, 436, 441, 444, 448, 455, 472, 650, 651, 659], "start": [355, 360, 367, 368, 371, 376, 378, 382, 388, 397, 406, 418, 420, 424, 425, 426, 432, 434, 436, 439, 440, 441, 442, 444, 448, 449, 452, 454, 455, 460, 468, 470, 645, 647, 648, 651, 659], "lsb": [355, 381, 390, 394, 395], "ab": [355, 384, 385, 411, 417, 443, 455], "10": [355, 358, 367, 368, 374, 382, 387, 391, 392, 394, 396, 399, 400, 402, 404, 415, 420, 424, 427, 431, 432, 433, 436, 440, 441, 443, 449, 451, 455, 457, 460, 465, 470, 647, 651, 652, 653], "add": [355, 359, 367, 388, 390, 395, 397, 406, 419, 431, 432, 439, 441, 442, 444, 445, 449, 450, 468, 470, 472, 653], "neg": [355, 359, 366, 387, 424, 448, 449, 454], "need": [355, 359, 360, 366, 370, 374, 376, 385, 388, 390, 397, 402, 411, 412, 414, 415, 417, 419, 420, 424, 430, 431, 433, 434, 436, 439, 441, 443, 444, 447, 448, 449, 450, 452, 454, 455, 460, 470, 643, 644, 645, 647, 650, 651, 652, 653, 658, 659, 661], "termin": [355, 424, 426, 436, 441, 468, 645, 647, 659], "flip": [355, 422, 454], "order": [355, 359, 397, 432, 444, 445, 652, 662], "seed_random": [355, 364], "m": [355, 367, 376, 385, 402, 441, 460, 647], "result": [355, 359, 362, 366, 368, 370, 371, 375, 376, 381, 389, 390, 391, 392, 394, 395, 396, 405, 407, 411, 412, 417, 422, 427, 434, 435, 439, 443, 444, 452, 455, 456, 464, 466, 474, 645, 650, 659], "0xc0da1": 355, "maximum": [355, 360, 385, 386, 407, 434, 450, 659], "actual": [355, 375, 408, 458, 460, 467, 469, 471, 472, 643, 653], "one": [355, 359, 368, 372, 375, 382, 385, 387, 397, 415, 419, 420, 424, 429, 439, 441, 444, 454, 460, 466, 467, 472, 643, 650, 651, 653, 655, 658, 662], "pass": [355, 366, 394, 397, 407, 424, 436, 439, 444, 460, 650, 651], "cycl": [355, 376, 387, 396, 406, 430, 436, 441, 456, 658, 663], "linear": [355, 424, 457], "feedback": 355, "shift": [355, 425, 448, 651], "regist": [355, 359, 360, 376, 381, 397, 405, 411, 412, 414, 417, 443, 444, 447, 458, 464, 466, 467, 468, 469, 470, 471, 472], "sequenc": [355, 379, 385, 387, 454, 455, 650, 652], "period": [355, 366, 368, 370, 374, 376, 380, 381, 390, 391, 392, 396, 405, 406, 420, 431, 433, 443, 447, 452, 456, 458, 467, 469, 471, 657, 659], "2": [355, 359, 360, 366, 367, 368, 370, 371, 374, 381, 382, 383, 385, 386, 387, 390, 391, 392, 394, 395, 396, 400, 402, 404, 407, 411, 412, 417, 420, 424, 426, 427, 428, 432, 434, 435, 439, 441, 442, 443, 444, 448, 449, 450, 454, 455, 457, 458, 460, 461, 464, 467, 469, 470, 472, 643, 651, 652, 659], "bruce": 355, "schneier": 355, "here": [355, 359, 360, 376, 380, 381, 385, 391, 392, 397, 408, 418, 424, 428, 432, 439, 440, 441, 443, 447, 449, 450, 451, 452, 457, 643, 645, 647, 650, 653, 654, 659], "legend": 355, "field": [355, 359, 397, 441, 444, 643, 658], "For": [355, 366, 376, 419, 447, 643, 650, 651, 652, 659], "those": [355, 359, 441, 643, 659], "interest": [355, 643, 659], "hi": [355, 394, 443, 450, 455, 456, 650, 652], "paper": 355, "cpu": [355, 450, 460, 659], "fast": [355, 397, 441, 659], "machin": 355, "independ": [355, 659], "microprocessor": 355, "http": [355, 387, 400, 431, 433, 449, 460, 465, 467, 472, 645, 653, 655, 658, 662], "www": [355, 385, 407, 465, 655, 658, 662], "com": [355, 374, 387, 407, 431, 433, 449, 465, 467, 472, 645, 655, 658, 662], "pseudorandom": 355, "html": [355, 441, 472, 662], "rnd": 355, "31": [355, 379, 384, 387, 394, 400, 436, 617], "6": [355, 367, 382, 385, 386, 387, 390, 391, 392, 394, 395, 396, 400, 402, 420, 427, 431, 433, 442, 455, 457, 465, 468, 470, 650], "0x0000001": 355, "0x00000001": 355, "namespac": [356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 434, 436, 437, 440, 441, 444, 445, 446, 447, 450, 451, 452, 453, 454, 456, 457, 465, 470, 473, 474, 475, 476, 484], "compon": [356, 368, 391, 392, 397, 411, 412, 414, 417, 434, 441, 647, 662], "device_component_count": 356, "configur": [356, 359, 366, 368, 370, 374, 375, 381, 388, 390, 391, 392, 394, 395, 396, 397, 401, 402, 406, 417, 431, 433, 441, 443, 444, 448, 450, 452, 460, 467, 472, 643, 644, 645, 653, 661, 662], "255": [356, 369, 375, 378, 383, 385, 389, 400, 402, 412, 424, 432, 434, 452, 460, 467, 468, 651, 652, 653, 659], "ha": [356, 359, 360, 366, 374, 381, 391, 392, 394, 396, 397, 408, 411, 412, 417, 434, 439, 440, 441, 442, 443, 444, 447, 449, 454, 455, 467, 470, 643, 645, 651, 653, 655, 657, 658, 659, 662, 663, 664], "endif": [356, 358, 359, 360, 364, 367, 375, 376, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 395, 402, 405, 407, 420, 423, 430, 436, 440, 441, 443, 447, 449, 451, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "generatedynamicid": 356, "__nextdynamicid": 356, "device_id_dynamic_min": 356, "have": [356, 359, 360, 366, 368, 375, 376, 378, 380, 388, 389, 394, 395, 397, 402, 406, 410, 414, 415, 418, 419, 424, 428, 430, 433, 434, 439, 441, 443, 444, 448, 450, 452, 454, 455, 460, 467, 470, 472, 643, 644, 645, 647, 651, 652, 653, 654, 659, 661, 663], "blown": 356, "off": [356, 380, 387, 389, 397, 402, 406, 412, 420, 434, 436, 440, 443, 444, 448, 451, 452, 454, 653, 659, 663], "end": [356, 358, 359, 360, 375, 376, 383, 385, 386, 387, 402, 406, 412, 430, 432, 434, 436, 439, 440, 441, 444, 448, 450, 454, 455, 457, 470, 650, 658], "dynam": [356, 432, 439, 643], "space": [356, 360, 368, 379, 397, 408, 420, 430, 439, 441, 448, 450, 645, 650, 661], "device_id_dynamic_max": 356, "target_pan": [356, 360, 364, 367, 382, 402, 404, 428, 431, 433, 436, 460], "paniccod": 356, "device_resoruces_exhaust": 356, "evt": [356, 359, 376, 380, 397, 398, 423, 443, 460, 461, 466, 469, 470], "device_component_evt_system_tick": 356, "statu": [356, 365, 366, 367, 368, 370, 374, 375, 378, 380, 381, 385, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 404, 405, 407, 411, 412, 420, 432, 434, 435, 439, 441, 443, 444, 447, 448, 452, 454, 456, 460, 461], "device_component_status_system_tick": [356, 378, 380, 389, 452], "periodiccallback": [356, 378, 380, 389], "device_scheduler_evt_idl": [356, 359, 397], "device_component_status_idle_tick": [356, 375, 381, 390, 391, 392, 394, 395, 396, 420, 435, 443, 444, 447, 456], "idlecallback": [356, 375, 381, 390, 391, 392, 394, 395, 396, 420, 443, 444, 447, 456, 460, 466, 467], "addcompon": 356, "through": [356, 375, 385, 388, 424, 430, 439, 441, 442, 447, 466, 472, 643, 645, 647, 652, 653, 657, 659, 661, 662, 663, 664], "until": [356, 375, 378, 388, 397, 439, 440, 441, 443, 444, 448, 450, 451, 454, 457, 466, 645, 651, 659, 662], "empti": [356, 359, 360, 376, 397, 418, 426, 430, 439, 441, 444, 450, 454], "found": [356, 385, 388, 397, 439, 441, 442, 653, 659], "break": [356, 358, 359, 360, 362, 367, 375, 376, 382, 384, 385, 388, 394, 395, 397, 398, 406, 407, 412, 419, 422, 430, 434, 439, 440, 441, 443, 444, 448, 450, 451, 452, 455, 460, 461, 462, 465, 467, 470, 472], "device_component_listeners_configur": 356, "defaulteventbu": [356, 374, 389, 397, 398, 401, 402, 406, 407, 408, 423, 432, 434, 443, 446, 458, 464, 469, 471], "ret": [356, 359, 375, 438, 460, 472], "system_timer_event_every_u": [356, 359, 376, 401, 406], "scheduler_tick_period_u": [356, 359, 378, 389], "device_id_compon": 356, "listen": [356, 359, 361, 374, 375, 389, 397, 398, 401, 402, 406, 407, 408, 432, 434, 443, 444, 446, 458, 464, 466, 469, 470, 471, 472, 643], "message_bus_listener_immedi": [356, 359, 374, 389, 397, 398, 401, 406, 432, 434, 443, 446, 458, 464, 466, 469, 471], "device_id_schedul": [356, 359, 397], "removecompon": 356, "setallsleep": 356, "dosleep": [356, 380, 391, 392, 432, 443, 444, 452, 460], "deepsleepal": [356, 443], "deepsleepcallbackbegin": [356, 443], "deepsleepcallbackend": [356, 443], "deepsleepcallback": 356, "deepsleepcallbackreason": 356, "reason": [356, 452, 466, 643, 645], "deepsleepcallbackdata": 356, "switch": [356, 358, 359, 367, 375, 383, 384, 398, 407, 422, 441, 443, 444, 448, 449, 452, 455, 460, 461, 470, 645], "case": [356, 358, 359, 360, 367, 375, 376, 383, 384, 398, 402, 407, 415, 418, 422, 432, 434, 439, 441, 443, 444, 448, 449, 450, 452, 455, 456, 460, 461, 465, 468, 470, 643, 645, 651, 659], "deepsleepcallbackbeginwithwakeup": [356, 443], "setsleep": [356, 380, 390, 391, 392, 395, 396, 402, 432, 444, 452, 460], "deepsleepcallbackendwithwakeup": [356, 443], "default": [356, 358, 364, 366, 368, 370, 374, 375, 376, 384, 387, 395, 396, 407, 408, 422, 439, 440, 441, 443, 444, 448, 449, 450, 452, 460, 461, 465, 470, 651, 659, 662], "usual": [356, 443, 659], "depend": [356, 397, 401, 645, 657], "x": [356, 358, 366, 367, 368, 370, 375, 378, 381, 384, 386, 389, 390, 391, 392, 394, 395, 396, 402, 407, 422, 424, 430, 434, 440, 442, 449, 452, 459, 460, 461, 462, 463, 468, 470, 478, 643, 655, 658], "ar": [356, 359, 360, 366, 368, 375, 376, 380, 385, 386, 387, 397, 407, 418, 424, 426, 429, 430, 432, 434, 439, 440, 441, 443, 444, 448, 449, 451, 452, 454, 456, 460, 472, 643, 645, 647, 650, 651, 652, 653, 655, 657, 658, 659, 662, 664], "ad": [356, 367, 376, 397, 406, 441, 467], "befor": [356, 367, 376, 387, 388, 406, 431, 432, 433, 434, 439, 441, 443, 444, 448, 452, 460, 643, 645, 647, 659], "itself": [356, 397, 407, 414, 439, 643, 651, 658, 659], "backward": [356, 645, 659], "level": [356, 369, 387, 389, 394, 397, 411, 412, 432, 434, 436, 439, 450, 452, 460, 643, 650, 653, 659], "low": [356, 366, 374, 380, 381, 392, 402, 406, 408, 411, 412, 436, 443, 452, 659], "when": [356, 359, 367, 375, 376, 378, 385, 389, 390, 397, 402, 417, 434, 440, 443, 444, 450, 451, 454, 455, 470, 472, 643, 650, 651, 652, 655, 657, 658, 659, 663, 664], "put": [356, 359, 376, 378, 388, 406, 434, 452, 460, 470, 651, 659, 663], "stuff": [356, 645], "sleep": [356, 357, 359, 376, 387, 394, 396, 402, 443, 653, 659, 661], "forward": [356, 385, 443, 657], "wake": [356, 359, 375, 378, 401, 414, 443], "up": [356, 359, 360, 366, 368, 375, 376, 378, 385, 387, 388, 394, 397, 402, 407, 408, 431, 432, 433, 439, 441, 443, 444, 449, 454, 460, 467, 470, 472, 474, 643, 646, 647, 653, 659, 662], "deepsleepcallbackprepar": [356, 443], "deepsleepcallbackcountwakeup": 356, "unsign": [356, 357, 358, 359, 364, 382, 400, 402, 418, 421, 426, 439, 455, 459, 460, 461, 462, 470, 478], "deepsleepcallbackclearwakeup": 356, "long": [357, 358, 359, 366, 380, 419, 443, 448, 643, 661], "millisecond": [357, 364, 406, 441, 443], "fiber_sleep": [357, 359, 385, 387, 394, 396, 402, 404, 443, 448, 452, 460], "device_dmesg_buffer_s": [358, 382, 460], "codallogstor": [358, 382], "dmesg_flush_fn": 358, "logwrit": 358, "const": [358, 362, 363, 367, 373, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 400, 402, 403, 404, 407, 414, 420, 421, 424, 425, 426, 427, 430, 434, 436, 437, 438, 439, 441, 443, 444, 446, 448, 449, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 478, 479, 612, 614, 616, 617, 628, 651, 653, 661], "msg": [358, 463], "real_time_func": [358, 359, 360, 364, 376, 397, 423], "logwriten": 358, "l": [358, 359, 367, 382, 397, 414, 430, 441, 445, 466, 650], "target_disable_irq": [358, 359, 360, 364, 376, 397, 436], "ptr": [358, 360, 364, 367, 382, 407, 412, 417, 420, 424, 425, 426, 448, 453], "sizeof": [358, 359, 360, 363, 367, 376, 382, 383, 384, 385, 386, 388, 402, 407, 424, 425, 426, 430, 434, 439, 441, 442, 443, 446, 448, 449, 451, 453, 454, 455, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 473, 663], "buffer": [358, 359, 375, 382, 392, 400, 404, 408, 410, 414, 417, 418, 419, 420, 424, 425, 426, 434, 436, 438, 439, 440, 441, 444, 445, 449, 450, 453, 454, 456, 460, 470, 472, 643, 652, 661, 662], "0x0a2e2e2": 358, "5": [358, 367, 376, 381, 382, 385, 386, 387, 390, 391, 394, 395, 396, 400, 402, 417, 420, 427, 434, 436, 441, 448, 449, 455, 457, 460, 468, 470, 612, 616, 617, 651], "dmesg": [358, 360, 364, 367, 381, 382, 391, 392, 396, 397, 407, 410, 411, 418, 419, 430, 441, 442, 443, 448, 450, 456, 460, 461, 470, 643], "line": [358, 367, 375, 381, 387, 390, 391, 392, 394, 395, 402, 431, 441, 443, 643, 645, 651], "too": [358, 359, 360, 415, 442, 448, 460, 643, 650, 658], "21": [358, 400, 420, 436, 612, 663], "dst": [358, 382, 402, 425], "tmp": [358, 383, 384, 385, 386, 407, 425], "target_enable_irq": [358, 359, 360, 364, 376, 397], "buf": [358, 367, 382, 383, 402, 407, 441, 445, 446, 449, 472, 652], "full": [358, 359, 360, 375, 381, 387, 391, 396, 408, 434, 439, 441, 452, 460, 470, 653, 659], "sh": [358, 441], "28": [358, 400, 402, 420, 436, 441, 617], "d": [358, 360, 364, 367, 375, 382, 394, 397, 407, 410, 415, 418, 430, 434, 436, 439, 441, 442, 443, 444, 448, 449, 450, 456, 459, 460, 461, 470, 647], "0xf": [358, 382, 402, 441], "9": [358, 367, 375, 382, 383, 384, 385, 386, 396, 400, 402, 420, 427, 441, 448, 455, 457, 470, 659], "logwritenum": 358, "hex": [358, 645, 653], "buff": [358, 375, 438], "20": [358, 366, 367, 368, 370, 375, 392, 394, 396, 400, 402, 411, 412, 420, 448, 460, 472], "0x": [358, 460, 462], "els": [358, 359, 360, 361, 366, 367, 371, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 407, 408, 411, 412, 417, 419, 420, 423, 424, 425, 427, 432, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 464, 466, 467, 468, 469, 471, 472, 643, 651, 659, 663], "codal_dmesg_nocrlf": 358, "format": [358, 375, 387, 391, 402, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 422, 439, 441, 444, 448, 450, 650, 652, 659], "va_list": [358, 375], "arg": [358, 361, 373, 375, 402, 420], "va_start": [358, 375], "codal_vdmesg": 358, "va_end": [358, 375], "codal_dmesg": 358, "codal_dmesg_with_flush": 358, "codal_dmesg_flush": 358, "codal_dmesg_set_flush_fn": 358, "fn": 358, "crlf": 358, "ap": 358, "val": [358, 367, 375, 376, 384], "va_arg": [358, 375], "u": [358, 360, 364, 367, 389, 414, 424, 434, 436, 439, 440, 441, 443, 444, 451, 460, 645, 647, 653], "should": [358, 359, 367, 376, 396, 397, 407, 426, 428, 441, 449, 643, 645, 647, 651, 653, 662], "print": [358, 375, 378, 420, 424, 460, 651, 661], "now": [358, 359, 360, 362, 366, 370, 376, 381, 390, 391, 392, 395, 397, 408, 420, 422, 430, 431, 434, 439, 443, 444, 447, 448, 449, 457, 460, 645, 659], "r": [358, 367, 373, 376, 402, 404, 408, 427, 435, 436, 439, 441, 445, 446, 448, 449, 450, 460], "fiber_initial_stack_bas": 359, "0x04": [359, 384, 385, 387, 392, 402, 444], "creat": [359, 360, 376, 397, 420, 424, 426, 432, 436, 439, 441, 453, 454, 458, 464, 466, 467, 468, 469, 470, 471, 472, 646, 649, 652, 653, 659], "destroi": [359, 419, 428, 429], "fiber": [359, 375, 378, 397, 401, 408, 414, 420, 443, 454, 460, 472, 588, 589, 590, 591, 592, 594, 595, 596, 643, 661, 662], "requir": [359, 385, 388, 407, 434, 441, 447, 448, 460, 643, 645, 647, 650, 657, 659, 661, 662], "allow": [359, 366, 381, 407, 414, 439, 443, 444, 452, 454, 460, 461, 467, 643, 645, 647, 651, 659], "persist": [359, 441, 448, 470, 643, 659, 661, 663], "dure": [359, 366, 376, 441, 447, 460, 643], "context": [359, 375, 397, 402, 407, 443, 454, 457], "which": [359, 376, 378, 381, 387, 397, 432, 434, 449, 455, 470, 643, 645, 647, 650, 651, 653, 655, 657, 658, 661, 662, 663, 664], "execut": [359, 389, 397, 402, 643, 655, 658, 664], "newli": 359, "child": 359, "idl": [359, 387, 397, 402, 410, 443, 655, 658, 664], "task": [359, 444, 643, 647, 655, 658, 664], "effici": [359, 368, 394, 424, 439], "system": [359, 376, 381, 391, 392, 394, 397, 422, 439, 440, 441, 443, 451, 460, 643, 645, 653, 661], "mainten": [359, 643], "schedul": [359, 375, 376, 380, 381, 390, 397, 408, 432, 440, 443, 447, 451, 454, 455, 472, 643, 655, 658, 662, 664], "state": [359, 367, 372, 374, 380, 389, 394, 395, 396, 397, 407, 410, 411, 412, 418, 430, 434, 441, 443, 448, 449, 454, 460, 657, 663], "runnabl": 359, "block": [359, 360, 375, 378, 381, 397, 401, 407, 408, 414, 418, 424, 430, 439, 441, 443, 448, 454, 470, 472, 643, 650, 662, 663], "wait": [359, 375, 378, 394, 401, 406, 408, 414, 436, 440, 441, 443, 444, 451, 454, 460, 472, 643, 659], "pool": 359, "unus": [359, 376, 389, 430, 439, 441, 443, 448, 455], "just": [359, 360, 375, 376, 397, 405, 407, 408, 410, 426, 432, 439, 441, 444, 447, 450, 452, 454, 460, 472, 643, 645, 650, 651, 652, 659, 661, 663], "job": [359, 643], "activ": [359, 360, 380, 381, 391, 392, 394, 395, 397, 406, 411, 412, 419, 420, 431, 432, 434, 441, 443, 444, 448, 454, 456, 460, 662], "exclud": 359, "wide": [359, 376, 395, 659], "flag": [359, 360, 361, 376, 380, 382, 397, 407, 430, 439, 460, 461, 470, 643], "mai": [359, 376, 378, 381, 391, 392, 397, 430, 439, 441, 443, 444, 454, 460, 467, 470, 643, 645, 647, 648, 650, 651, 653], "semant": 359, "If": [359, 360, 366, 367, 368, 372, 374, 378, 380, 389, 391, 392, 393, 394, 397, 399, 408, 410, 411, 412, 414, 417, 420, 422, 424, 426, 430, 432, 439, 440, 441, 442, 443, 444, 447, 448, 450, 451, 454, 456, 460, 467, 470, 645, 647, 651, 652, 653, 655, 658, 659, 663, 664], "set": [359, 366, 367, 368, 370, 371, 374, 375, 376, 380, 387, 390, 396, 402, 407, 408, 411, 412, 427, 429, 432, 434, 439, 440, 441, 444, 447, 449, 450, 451, 452, 454, 456, 459, 460, 470, 472, 643, 646, 651, 652, 653, 659], "queue_fib": 359, "f": [359, 360, 367, 382, 397, 438, 441, 449, 450, 470], "queue": [359, 361, 376, 397, 444, 445], "tail": [359, 375, 397, 444, 445, 472], "although": [359, 643, 650, 653, 659], "involv": 359, "scan": [359, 385, 387, 436, 439, 659], "fairer": 359, "qnext": 359, "qprev": 359, "don": [359, 360, 366, 385, 388, 397, 402, 404, 408, 424, 432, 439, 440, 441, 447, 448, 450, 451, 452, 454, 456, 643], "t": [359, 360, 366, 367, 368, 373, 375, 376, 382, 384, 385, 388, 389, 394, 396, 397, 402, 404, 408, 420, 424, 428, 431, 432, 434, 436, 439, 440, 441, 444, 447, 448, 449, 450, 451, 452, 454, 456, 460, 465, 470, 643, 645, 662], "maintain": [359, 397, 430, 460, 645, 663], "pointer": [359, 386, 417, 424, 436, 439, 441, 454, 456, 457, 460, 470], "save": [359, 405, 415, 436, 448, 450, 470, 651, 659, 661], "ram": [359, 384, 385, 386, 397, 402, 418, 441, 651, 663], "nrmalli": 359, "veri": [359, 360, 434, 444, 643, 651, 658, 659, 662, 664], "short": [359, 364, 444, 448, 653], "last": [359, 378, 406, 425, 439, 441, 454, 470, 650, 651, 652], "dequeue_fib": 359, "alreadi": [359, 366, 376, 389, 397, 420, 430, 439, 441, 444, 450, 454, 470, 643, 647, 651, 652], "dequeu": [359, 397], "noth": [359, 378, 380, 388, 389, 401, 406, 408, 426, 430, 439, 441, 443, 444, 454], "remov": [359, 360, 388, 397, 407, 438, 439, 441, 449, 470, 663], "fromm": 359, "whichev": 359, "get_fiber_list": 359, "tcb": 359, "tcb_alloc": 359, "stack_bottom": 359, "stack_top": 359, "suitabl": [359, 653], "reus": [359, 405, 452, 659], "config_en": [359, 360, 364, 367, 375, 376, 381, 382, 383, 384, 385, 386, 390, 391, 392, 395, 407, 423, 443, 449, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "device_fiber_user_data": 359, "user_data": 359, "tcb_configure_stack_bas": 359, "next": [359, 360, 361, 367, 376, 382, 385, 389, 397, 415, 417, 418, 423, 425, 430, 434, 439, 441, 442, 444, 445, 447, 450, 452, 454, 455, 458, 470, 472, 645, 651], "scheduler_init": 359, "_messagebu": [359, 466, 470], "re": [359, 360, 366, 367, 368, 376, 380, 381, 389, 390, 394, 397, 400, 405, 408, 418, 419, 420, 424, 425, 426, 428, 432, 434, 439, 440, 441, 444, 447, 448, 449, 450, 451, 454, 456, 460, 468, 645, 647, 648, 653], "initialis": [359, 360, 366, 375, 401, 406, 417, 426, 430, 439, 444, 454, 458, 464, 466, 467, 468, 469, 471, 472, 643, 658], "fiber_scheduler_run": [359, 397, 443], "store": [359, 366, 367, 368, 370, 375, 381, 384, 385, 386, 388, 390, 391, 392, 396, 417, 434, 439, 442, 444, 454, 458, 461, 468, 470, 472, 649, 654, 661, 663], "refer": [359, 366, 387, 396, 408, 424, 426, 429, 436, 453, 457, 460, 643, 645, 647, 652, 659, 661], "being": [359, 360, 381, 391, 392, 406, 410, 417, 454, 458, 469, 471, 645, 651, 655, 659], "messag": [359, 432, 434, 436, 466, 643, 650, 659], "bu": [359, 466, 643, 655, 658, 661], "ourselv": [359, 376, 401, 405, 419, 444], "directli": [359, 397, 439, 447, 645, 647, 648, 653, 655, 659], "enter": [359, 381, 394, 397, 405, 426, 434, 443, 647], "tcb_configure_sp": 359, "tcb_configure_lr": 359, "processor_word_typ": [359, 360], "idle_task": 359, "receiv": [359, 375, 406, 410, 440, 443, 444, 451, 454, 470, 645, 652], "channel": [359, 415, 419, 432, 443, 444, 450, 452, 456, 460], "implement": [359, 360, 364, 367, 432, 443, 461, 472, 662], "device_id_notifi": [359, 375, 376, 378, 408, 443], "device_evt_ani": [359, 397, 398, 432], "scheduler_ev": 359, "device_id_notify_on": [359, 378, 408], "device_scheduler_evt_tick": 359, "scheduler_tick": 359, "device_scheduler_run": 359, "lightweight_ev": [359, 376, 423], "timestamp": [359, 376, 401, 423, 441, 450], "1000": [359, 366, 376, 378, 381, 390, 391, 392, 394, 395, 406, 420, 434, 436, 443, 452, 454, 455, 456, 460], "necessari": [359, 366, 370, 375, 405, 408, 412, 430, 440, 441, 448, 454, 460], "wakei": 359, "notifyonecomplet": 359, "never": [359, 397, 402, 449, 643, 653], "happen": [359, 376, 402, 407, 440, 444, 451, 460, 643], "It": [359, 387, 443, 643, 645, 651, 652, 659, 661, 662, 663], "howev": [359, 447, 643, 645, 650, 651, 659, 662, 664], "safe": [359, 426, 439, 447, 650, 651], "simpli": [359, 360, 378, 397, 401, 405, 422, 430, 444, 454, 460, 643, 650, 652, 653, 659, 663], "ignor": [359, 387, 389, 397, 401, 406, 424, 440, 443, 446, 458, 464, 466, 469, 471], "extract": [359, 439, 650, 652], "id": [359, 361, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 380, 382, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 405, 406, 411, 412, 419, 431, 432, 433, 437, 439, 442, 443, 444, 446, 447, 448, 452, 454, 455, 456, 460, 466, 470, 474, 476, 643, 647], "0xffff": [359, 382, 396, 428, 444], "0xffff0000": 359, "16": [359, 376, 379, 381, 382, 384, 385, 387, 390, 391, 392, 394, 396, 400, 402, 404, 407, 411, 417, 420, 427, 432, 441, 455, 460, 461, 470, 472, 651, 652, 663], "special": [359, 407, 439, 441, 643, 644, 650], "notify_on": 359, "normal": [359, 380, 387, 390, 391, 395, 397, 402, 405, 417, 432, 452, 456, 460, 643, 658, 659], "device_id_ani": [359, 397], "unregist": 359, "ve": [359, 360, 366, 368, 378, 380, 397, 401, 405, 410, 414, 420, 422, 434, 441, 444, 450, 452, 454, 456, 469, 643, 645], "woken": [359, 408], "match": [359, 360, 375, 388, 397, 419, 439, 441, 444, 465, 472], "call": [359, 375, 376, 378, 397, 408, 415, 434, 439, 441, 454, 459, 460, 470, 643, 650, 655, 657, 658, 659, 661, 662, 664], "fork": [359, 397, 644], "time": [359, 366, 368, 380, 387, 389, 397, 402, 404, 408, 411, 434, 441, 443, 444, 448, 449, 450, 452, 454, 456, 460, 466, 643, 645, 651, 652, 653, 659, 661, 662], "spawn": 359, "device_fiber_flag_fob": 359, "come": [359, 367, 405, 420, 432, 643], "tread": 359, "avail": [359, 360, 366, 368, 370, 381, 390, 391, 392, 408, 439, 441, 444, 450, 643, 647, 661, 662], "heap": [359, 360, 424, 454, 643], "memori": [359, 360, 381, 387, 405, 424, 439, 440, 441, 442, 451, 460, 470, 472, 643, 645, 648, 650, 652, 659, 661], "can": [359, 360, 366, 367, 376, 378, 385, 387, 388, 394, 395, 397, 408, 414, 418, 420, 424, 429, 430, 431, 433, 434, 439, 441, 443, 444, 448, 449, 450, 452, 455, 456, 457, 458, 460, 466, 467, 470, 471, 643, 645, 647, 650, 651, 652, 653, 655, 657, 658, 659, 662, 663, 664], "keep": [359, 360, 454, 456, 460, 466, 650], "thread": [359, 397, 643, 655, 658, 664], "best": [359, 405, 430, 434, 439], "effort": 359, "spin": [359, 375, 397], "exit": [359, 387, 397, 643], "target_wait": [359, 364, 406, 431, 433, 434, 443], "want": [359, 366, 367, 375, 397, 408, 424, 432, 441, 444, 449, 450, 643, 645, 647, 651, 652, 659, 663], "system_timer_current_tim": [359, 376, 380, 423, 441, 443, 447, 456, 460], "strict": [359, 407], "reduc": [359, 366, 368, 387, 397, 439, 441, 444, 454, 643, 658], "lookup": [359, 417], "final": [359, 407, 422, 470, 652, 659], "fiber_wait_for_ev": [359, 375, 378, 402, 472], "fiber_wake_on_ev": [359, 375, 408, 455, 472], "device_not_support": [359, 366, 367, 368, 370, 376, 378, 383, 384, 385, 386, 397, 407, 408, 430, 443, 444], "encod": [359, 417, 448, 455], "handi": 359, "alwai": [359, 367, 376, 387, 388, 397, 432, 454, 460, 470, 651], "stai": [359, 659], "invok": [359, 363, 373, 397, 454], "entry_fn": 359, "valid": [359, 360, 378, 397, 430, 432, 434, 439, 441, 442, 443, 448, 450, 452, 454, 460, 467, 470, 659], "device_fiber_flag_par": 359, "device_fiber_flag_child": 359, "attempt": [359, 397, 430, 434, 439, 443, 444, 450, 454, 645, 658], "whilst": [359, 397, 460, 647], "user": [359, 366, 368, 375, 429, 434, 439, 441, 460, 467, 470, 643, 657, 658, 662, 663], "launch": [359, 368, 420, 643, 645, 659], "request": [359, 367, 368, 375, 380, 385, 390, 391, 392, 394, 395, 397, 401, 407, 408, 414, 419, 420, 439, 441, 443, 448, 450, 452, 454, 458, 461, 468, 471, 644, 651, 659, 661], "done": [359, 360, 397, 420, 424, 434, 441, 444, 448, 449, 450, 454, 459, 468, 643, 645, 650, 651, 652], "create_fib": [359, 373, 420], "snapshot": [359, 417, 434, 456], "also": [359, 360, 376, 381, 387, 396, 397, 420, 433, 439, 440, 441, 443, 444, 447, 448, 449, 451, 467, 643, 647, 650, 651, 652, 655, 657, 659, 661, 663], "updat": [359, 366, 368, 370, 374, 375, 381, 385, 388, 390, 391, 392, 394, 395, 396, 407, 411, 412, 418, 420, 424, 430, 434, 439, 441, 443, 447, 454, 456, 458, 460, 461, 467, 469, 470, 471, 643, 647, 653, 659, 661], "link": [359, 643, 652, 653, 655, 658, 659], "function": [359, 360, 367, 378, 387, 391, 397, 406, 407, 434, 436, 440, 442, 454, 457, 460, 484, 643, 650, 651, 652, 653, 658, 661, 664], "save_register_context": 359, "two": [359, 366, 407, 429, 441, 444, 455, 472, 643, 652, 655, 657, 658, 659], "possibl": [359, 397, 417, 439, 444, 445, 448, 452, 454, 460, 643, 652, 659], "about": [359, 360, 375, 402, 434, 443, 448, 449, 645, 651, 658], "tri": 359, "backtrack": 359, "anoth": [359, 366, 376, 408, 420, 441, 443, 450, 454, 643, 651, 662], "cleanup": 359, "first": [359, 360, 367, 374, 376, 381, 390, 391, 392, 393, 394, 395, 397, 399, 405, 406, 408, 424, 425, 430, 432, 434, 436, 439, 441, 444, 445, 448, 449, 454, 456, 460, 643, 655, 658, 659, 663, 664], "ON": [359, 387], "mode": [359, 375, 380, 381, 387, 389, 391, 392, 394, 395, 402, 405, 406, 408, 414, 423, 438, 443, 444, 452, 454, 460, 467, 470, 472, 474, 643, 661], "detect": [359, 366, 374, 411, 412, 433, 440, 441, 443, 447, 451, 653, 655, 657], "handl": [359, 360, 366, 368, 376, 407, 420, 422, 439, 441, 458, 459, 460, 461, 466, 467, 468, 469, 470, 471, 472, 643, 658], "recycl": [359, 439], "further": [359, 397, 460, 644], "release_fib": [359, 643], "param": [359, 397, 434, 458, 460, 461, 466, 467, 468, 469, 470, 471, 472], "launch_new_fib": 359, "ep": [359, 367, 382], "cp": 359, "entrypoint": 359, "complet": [359, 360, 368, 376, 378, 397, 405, 414, 440, 444, 450, 451, 452, 454, 460, 470, 643, 648, 662], "routin": 359, "get": [359, 362, 366, 367, 373, 378, 381, 387, 388, 390, 391, 392, 402, 407, 408, 412, 415, 418, 421, 424, 427, 434, 439, 443, 444, 448, 449, 450, 460, 470, 645, 647, 648, 651, 655, 657, 658, 659, 663], "didn": [359, 375], "anywai": [359, 452], "launch_new_fiber_param": 359, "pm": [359, 449], "parameteris": [359, 397], "newfib": 359, "tcb_configure_arg": 359, "completion_fn": 359, "form": [359, 444, 643, 650, 651, 652, 663], "numfre": 359, "3": [359, 367, 381, 382, 385, 386, 387, 389, 390, 392, 394, 395, 396, 400, 402, 404, 407, 420, 427, 428, 429, 432, 434, 435, 441, 442, 443, 448, 449, 455, 457, 460, 467, 470, 643, 647, 655, 658, 659], "memset": [359, 360, 375, 382, 385, 388, 402, 407, 425, 430, 443, 449, 460, 461, 465, 467, 470], "someth": [359, 443, 449, 454, 643, 659], "verify_stack_s": 359, "larg": [359, 360, 439, 644], "enough": [359, 360, 366, 389, 653, 658, 659], "hold": [359, 380, 397, 426, 430, 439, 441, 460, 648, 652, 653], "realloc": [359, 360, 376], "stackdepth": 359, "buffers": [359, 420, 454], "depth": 359, "tcb_get_stack_bas": 359, "get_current_sp": 359, "size": [359, 360, 367, 375, 376, 382, 383, 385, 386, 388, 402, 408, 411, 412, 414, 417, 420, 424, 427, 430, 438, 439, 440, 441, 448, 454, 460, 470, 472, 651, 652], "small": [359, 402], "increas": [359, 397, 444], "onli": [359, 367, 368, 385, 387, 395, 397, 407, 415, 420, 427, 428, 432, 433, 434, 439, 443, 444, 448, 454, 460, 472, 643, 645, 647, 651, 653, 655, 658, 662, 663], "make": [359, 360, 367, 368, 380, 385, 402, 407, 419, 425, 432, 439, 470, 643, 645, 647, 650, 653, 657, 658, 659, 664], "sure": [359, 360, 367, 387, 402, 407, 432, 645, 647], "content": [359, 420, 439, 461, 648, 651, 655], "variabl": [359, 376, 383, 385, 405, 484, 643, 650, 651, 652, 653, 659], "reflect": [359, 407, 439, 469], "extern": [359, 360, 385, 436, 440, 444, 451, 643, 657], "might": [359, 375, 376, 382, 408, 415, 419, 468, 469, 643, 645, 651, 659], "confus": 359, "prevcurrfib": 359, "gcc": [359, 360, 389, 439, 440, 447, 451, 643, 647], "would": [359, 376, 439, 450, 643, 650, 655, 658, 659, 664], "assum": [359, 368, 376, 378, 415, 426, 442, 443, 449], "malloc": [359, 360, 375, 376, 382, 388, 400, 424, 425, 426, 430, 441, 453, 472], "access": [359, 368, 387, 444, 447, 460, 643, 647, 651, 652, 653, 658, 661, 662, 663, 664], "thu": 359, "skip": [359, 378, 382, 412, 441, 450, 454, 456, 470, 645], "emit": [359, 432], "know": [359, 390, 422, 439, 444, 448, 449, 450, 643, 653], "forc": [359, 366, 370, 381, 390, 391, 655], "To": [359, 375, 387, 439, 643, 645, 647, 657, 658], "eas": [359, 457], "churn": [359, 360, 374, 411, 412, 439], "choos": [359, 439, 450, 458, 469, 471, 645], "largest": 359, "multpl": 359, "byte": [359, 367, 385, 402, 407, 424, 436, 438, 439, 440, 441, 442, 443, 444, 448, 470, 651, 652, 662, 663], "0xffffffe0": 359, "releas": [359, 376, 397, 408, 432, 439, 448, 449, 650, 651, 652], "appropri": [359, 392, 407, 417, 424, 645], "recalcul": [359, 366, 370, 452], "where": [359, 380, 387, 397, 402, 417, 424, 432, 439, 440, 441, 454, 460, 465, 643, 655, 658, 659], "top": [359, 645, 651], "scheduler_runqueue_empti": [359, 397], "scheduler_waitqueue_empti": 359, "take": [359, 366, 368, 374, 389, 393, 394, 399, 405, 434, 439, 442, 444, 445, 448, 450, 467, 469, 643, 651, 659, 663], "oldfib": 359, "see": [359, 360, 366, 375, 380, 407, 414, 432, 439, 440, 441, 443, 451, 455, 467, 472, 643, 645, 647, 648, 650, 651, 653, 658, 659], "restor": [359, 434, 443, 448, 452], "back": [359, 385, 387, 395, 418, 439, 449, 458, 467, 469, 471, 643, 659], "point": [359, 368, 397, 417, 434, 442, 645, 662], "fob": 359, "relationship": 359, "align": [359, 360, 378, 390, 391, 392, 394, 402, 430, 440, 448, 460, 651], "entri": [359, 376, 406, 439, 441], "tcb_get_sp": 359, "save_context": 359, "indic": [359, 366, 368, 370, 378, 390, 391, 392, 394, 405, 414, 434, 439, 441, 443, 447, 460, 461, 643, 652, 658], "either": [359, 368, 387, 397, 408, 426, 439, 443, 455, 460, 645, 647, 651, 657, 659], "still": [359, 395, 414, 441, 443, 444, 450, 460, 650], "restore_register_context": 359, "must": [359, 376, 384, 385, 386, 387, 397, 432, 443, 448, 467, 470], "been": [359, 360, 366, 374, 380, 394, 397, 401, 408, 410, 411, 412, 417, 420, 422, 428, 434, 439, 440, 441, 442, 443, 444, 454, 456, 470, 643, 658, 663], "unblock": [359, 375, 454], "continu": [359, 360, 378, 382, 391, 392, 397, 434, 439, 441, 443, 448, 449, 450, 454, 643, 655, 658, 664], "process": [359, 368, 397, 417, 419, 434, 441, 442, 443, 444, 447, 448, 449, 450, 454, 460, 470, 645], "round": [359, 368, 439], "robin": [359, 439], "algorithm": [359, 360, 368, 434, 444], "across": [359, 455, 659, 662], "ok": [359, 367, 394, 395, 397, 407, 418, 441, 443], "pick": [359, 467, 659], "head": [359, 368, 375, 382, 433, 441, 469, 472, 658], "device_fiber_flag_do_not_pag": [359, 460], "origin": [359, 439, 440, 457, 651, 653], "preserv": [359, 388, 440, 444, 445], "non": [359, 367, 381, 397, 408, 443, 444, 456, 643, 653, 663], "same": [359, 367, 374, 376, 387, 411, 412, 434, 439, 441, 443, 449, 472, 643, 645, 650, 651, 659], "ll": [359, 432, 449, 452, 643, 645], "chosen": 359, "bother": [359, 404], "overhead": [359, 397, 662], "wast": 359, "processor": [359, 432, 444, 460, 643, 659, 662], "discard": 359, "chang": [359, 368, 372, 380, 381, 385, 418, 419, 439, 443, 444, 448, 456, 460, 467, 643, 644, 645, 650, 651, 652, 653, 661], "swap_context": 359, "prevent": [359, 375, 432, 457, 460, 472], "loop": [359, 434, 449, 653], "death": 359, "after": [359, 366, 370, 375, 387, 394, 397, 408, 410, 432, 436, 439, 441, 460, 643, 645, 655, 658, 662, 663, 664], "anyth": [359, 388, 424, 426, 441, 460, 659], "device_scheduler_idl": 359, "scenario": 359, "did": [359, 367, 419, 659], "unset": [359, 643], "becaus": [359, 408, 418, 645, 658], "enforc": [359, 662], "place": [359, 367, 376, 391, 395, 417, 419, 429, 434, 441, 443, 645, 651], "target_scheduler_idl": [359, 364, 436], "fiber_scheduler_get_deepsleep_pend": [359, 376, 443], "device_scheduler_deepsleep": 359, "fiber_scheduler_set_deepsleep_pend": [359, 443], "pend": [359, 376, 439, 454, 460], "fiberlock": 359, "initi": [359, 425, 429, 441, 452, 460, 468, 645], "monothread": 359, "race": [359, 360, 392, 397, 402, 449, 452], "interrupt": [359, 360, 375, 381, 390, 391, 392, 394, 395, 396, 402, 443, 444, 454, 460, 468], "note": [359, 376, 382, 387, 397, 402, 420, 432, 439, 443, 449, 460, 645, 647, 653], "irq": [359, 360, 376, 381, 391, 392, 397, 407, 431, 443], "preemptiv": [359, 643], "neither": [359, 647], "ourself": 359, "reach": [359, 360, 366, 406, 439, 645, 651], "constrain": [359, 651], "resourc": [359, 397, 408, 420, 439, 444, 460, 655, 658, 659], "notifyal": [359, 401, 443], "getwaitcount": [359, 443, 454], "count": [359, 366, 383, 385, 386, 389, 414, 418, 424, 436, 441, 444, 448, 462, 470, 651], "device_heap_alloc": 360, "region": [360, 442, 470], "dimens": [360, 424], "heapdefinit": 360, "device_maximum_heap": 360, "heap_count": 360, "codal_debug": 360, "codal_debug_heap": 360, "diplai": [360, 452], "usag": [360, 383, 384, 385, 386], "summari": [360, 647], "device_heap_print": 360, "blocksiz": [360, 430, 448], "totalfreeblock": 360, "totalusedblock": 360, "heap_start": 360, "heap_end": 360, "heap_siz": 360, "disabl": [360, 365, 369, 375, 376, 380, 381, 387, 389, 391, 392, 396, 401, 405, 407, 412, 432, 436, 440, 441, 443, 444, 448, 451, 452, 460, 659], "temporarili": [360, 452], "device_heap_block_fre": 360, "dmesgn": [360, 430], "device_heap_block_s": 360, "enabl": [360, 365, 369, 374, 375, 376, 381, 387, 389, 390, 391, 392, 394, 395, 396, 401, 407, 410, 411, 412, 432, 440, 441, 443, 444, 447, 451, 452, 454, 456, 460, 472, 659], "mb_total_fre": 360, "mb_total_us": 360, "diagnost": [360, 389, 440], "nheap": 360, "device_create_heap": 360, "codal_low_level_valid": 360, "exce": [360, 367, 449], "segment": 360, "device_no_resourc": [360, 367, 375, 376, 385, 388, 406, 408, 410, 418, 441, 444, 446], "rang": [360, 362, 366, 368, 370, 381, 390, 391, 395, 412, 431, 449, 450, 454, 455, 456, 643, 651], "word": [360, 366, 402, 470, 650], "device_heap_s": 360, "heap_index": 360, "device_malloc_in": 360, "size_t": [360, 465], "blocksneed": 360, "account": [360, 368, 417, 448], "index": [360, 367, 389, 426, 441, 442, 448, 457, 465, 467, 645, 647, 650, 651], "cach": [360, 430, 439, 441, 443, 448], "rapid": [360, 655], "defrag": 360, "search": [360, 385, 439, 645, 650], "optimis": [360, 389, 439, 443, 456, 460, 659], "futur": [360, 455, 643, 664], "look": [360, 366, 375, 428, 439, 441, 643, 645, 648, 651, 659], "let": [360, 439, 643, 650, 659], "subsequ": [360, 376, 664], "ones": [360, 424, 465, 647], "big": 360, "winner": 360, "mark": [360, 397, 439, 650], "whole": [360, 441], "split": [360, 643], "splitblock": 360, "device_malloc": 360, "codal_heap_start": 360, "device_stack_bas": 360, "device_stack_s": 360, "device_heap_error": [360, 428], "assign": [360, 376, 387, 439, 444, 649, 650, 652], "total": [360, 367, 397, 455, 650], "option": [360, 407, 440, 444, 447, 451, 460, 643, 645, 659, 662], "everyth": [360, 643, 661], "transpar": [360, 407, 659], "yet": [360, 397, 643, 645], "device_panic_heap_ful": 360, "device_oom": [360, 462], "device_fre": 360, "mem": 360, "cb": [360, 361, 397], "wa": [360, 376, 378, 380, 397, 414, 434, 439, 444, 452, 454, 455, 659], "part": [360, 394, 444, 643, 644, 645, 650, 654], "area": [360, 441, 643], "calloc": 360, "num": [360, 383, 384, 385, 386, 402, 449], "write": [360, 367, 371, 373, 383, 384, 385, 386, 388, 389, 391, 392, 404, 407, 417, 424, 430, 438, 439, 440, 441, 443, 444, 448, 450, 451, 454, 461, 467, 470, 643, 651, 652, 653, 659, 663], "happili": 360, "device_realloc": 360, "simplest": [360, 652], "previou": [360, 385, 389, 460, 470], "alloct": 360, "memcpi": [360, 367, 382, 384, 385, 386, 388, 400, 402, 407, 409, 414, 424, 425, 426, 430, 434, 439, 441, 442, 443, 445, 446, 448, 451, 453, 458, 465, 468, 469, 470, 471, 652, 663], "sz": [360, 382], "alia": 360, "libc": 360, "pull": [360, 380, 397, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 449, 450, 452, 454, 456, 644], "_malloc_r": 360, "_reent": 360, "len": [360, 367, 371, 373, 375, 382, 385, 402, 404, 407, 415, 425, 426, 430, 438, 440, 441, 445, 450, 458, 459, 460, 461, 466, 467, 468, 469, 470, 471, 472], "_free_r": 360, "addr": [360, 367, 382, 404, 440, 451], "handler": [361, 374, 376, 397, 416, 460, 643], "cb_arg": [361, 397], "evt_queu": [361, 397], "cb_param": [361, 397], "message_bus_listener_parameteris": [361, 397], "message_bus_listener_method": [361, 397], "delet": [361, 367, 368, 380, 382, 388, 397, 401, 415, 419, 427, 428, 432, 434, 439, 444, 445, 446, 449, 450, 460, 470, 476, 651, 663], "cb_method": [361, 397], "e": [361, 363, 366, 367, 368, 370, 376, 382, 398, 401, 402, 407, 419, 432, 436, 444, 446, 447, 460, 464, 466, 469, 470, 643, 645, 647, 650, 651, 658, 659], "queuedepth": [361, 444, 445], "eventqueueitem": [361, 397, 423], "message_bus_listener_max_queue_depth": [361, 397], "keyvaluetableentri": [362, 381, 390, 391, 392, 443, 448], "keyvaluet": 362, "kei": [362, 379, 385, 388, 407, 441, 643, 661, 663], "nearest": [362, 381, 390, 391, 392, 394, 395, 434, 439, 458, 469, 471], "sampl": [362, 366, 368, 370, 374, 381, 390, 391, 392, 394, 395, 396, 406, 411, 412, 417, 419, 420, 434, 444, 447, 450, 454, 469, 645, 653], "specifi": [362, 367, 381, 387, 390, 391, 392, 394, 395, 412, 454, 469, 659], "length": [362, 367, 371, 375, 378, 385, 400, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 425, 426, 430, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 466, 467, 468, 472, 650, 663], "getkei": [362, 381, 390, 391, 392], "haskei": 362, "fire": [363, 375, 376, 380, 397, 407, 423, 446, 454, 466, 470, 472, 473], "object": [363, 367, 397, 428, 460, 473, 643, 648, 653, 655, 657, 658, 659], "method": [363, 397, 443, 460, 473, 643, 653, 661], "mfc": [363, 473], "memcmp": [363, 388, 424, 425, 441, 453, 470, 473], "system_timer_wait_m": [364, 376, 440, 451], "target_wait_u": [364, 390], "system_timer_wait_u": [364, 376], "target_seed_random": 364, "rand": [364, 455], "target_random": 364, "panic": [364, 431, 460], "wfi": 364, "target_wait_for_ev": [364, 378, 436], "target_deepsleep": 364, "__sync_fetch_and_add_2": 364, "volatil": [364, 440, 442, 443, 451, 460, 663], "disable_irq_for_software_atom": 364, "clickcount": [365, 380, 398], "ispress": [365, 380, 398, 460], "waspress": 365, "device_component_run": [365, 368, 378, 380, 389, 394, 395, 460], "coordinatespac": [366, 368, 370, 381, 390, 391, 392, 394, 395, 396, 422, 431, 433], "cspace": [366, 368, 370, 395], "sampleenu": [366, 368, 370, 381, 390, 391, 392, 394, 395, 396], "rate": [366, 368, 370, 381, 387, 390, 391, 392, 394, 395, 402, 408, 419, 444, 450, 655, 662], "50hz": [366, 368, 370, 396], "2g": [366, 370, 396], "sampleperiod": [366, 368, 370, 374, 381, 390, 391, 392, 394, 395, 396, 447], "samplerang": [366, 370, 381, 390, 391, 395, 396, 450, 454], "gestur": 366, "histori": 366, "sigma": [366, 376, 380, 411, 420], "impulsesigma": 366, "lastgestur": 366, "accelerometer_evt_non": 366, "currentgestur": 366, "shake": 366, "y": [366, 368, 370, 378, 381, 384, 386, 389, 390, 391, 392, 394, 395, 396, 402, 422, 424, 434, 452, 468, 655, 658, 659], "z": [366, 368, 370, 381, 382, 384, 390, 391, 392, 394, 395, 396, 417, 422, 434, 436, 448, 655, 658], "impulse_2": 366, "impulse_3": 366, "impulse_6": 366, "impulse_8": 366, "coordin": [366, 368, 370, 381, 391, 392, 394, 422], "transform": [366, 368, 370, 422], "pitch": [366, 368, 370], "roll": [366, 368, 370, 441], "stale": [366, 370], "accelerometer_imu_data_valid": 366, "track": [366, 385, 405, 460, 650], "updategestur": 366, "accelerometer_evt_data_upd": 366, "instantaneousaccelerationsquar": [366, 370], "pythagora": [366, 370], "theorem": [366, 370], "combin": [366, 370, 381, 391, 392, 394, 433, 443, 655, 657, 658], "act": [366, 370, 655], "instantaneouspostur": 366, "shakedetect": 366, "test": [366, 367, 391, 406, 407, 434, 440, 447, 451, 643, 645], "measur": [366, 405, 452], "zero": [366, 387, 389, 417, 425, 439, 441, 443, 444, 448, 452, 455, 456, 650, 651, 653, 659], "cross": [366, 439, 441, 460, 651], "axi": [366, 368], "In": [366, 387, 407, 431, 433, 643, 647, 650, 651, 653, 659, 662], "strong": 366, "acceler": [366, 655], "left": [366, 378, 436, 448, 454, 470, 645, 651, 653, 659], "infer": [366, 417, 448, 655], "similarli": [366, 443], "down": [366, 385, 443, 450, 474, 643, 645, 653], "success": [366, 442, 460], "accelerometer_shake_count_threshold": 366, "decid": [366, 397, 450, 643], "shaken": [366, 643], "accelerometer_shake_toler": 366, "accelerometer_evt_shak": 366, "how": [366, 397, 439, 444, 472, 645, 647, 650, 651, 659], "issu": [366, 410, 431, 433, 444, 454, 467], "ass": 366, "accelerometer_shake_rtx": 366, "decai": [366, 374, 393, 399, 653], "over": [366, 388, 394, 417, 430, 434, 441, 643, 651, 663], "them": [366, 375, 381, 388, 397, 408, 432, 441, 452, 643, 645, 650, 651, 652, 659], "accumul": [366, 450], "slow": [366, 448, 653], "move": [366, 384, 386, 389, 406, 408, 430, 439, 441, 444, 449, 450, 452, 454, 651, 659], "motion": 366, "accelerometer_shake_damp": 366, "accelerometer_freefall_threshold": 366, "accelerometer_evt_freefal": 366, "postur": 366, "accelerometer_tilt_toler": 366, "accelerometer_evt_tilt_left": 366, "accelerometer_evt_tilt_right": 366, "accelerometer_evt_tilt_down": 366, "accelerometer_evt_tilt_up": 366, "accelerometer_evt_face_up": 366, "accelerometer_evt_face_down": 366, "g": [366, 367, 381, 390, 391, 394, 395, 402, 436, 444, 449, 460, 643, 645, 651, 655, 659], "typic": [366, 404, 440, 447, 451, 651], "impuls": 366, "impact": [366, 643], "etc": [366, 367, 424, 643, 651, 661], "again": [366, 443, 645], "spike": 366, "prioriti": [366, 397], "filter": [366, 424, 432, 444, 449, 460, 658], "accelerometer_2g_threshold": 366, "device_id_gestur": 366, "accelerometer_evt_2g": 366, "accelerometer_3g_threshold": 366, "accelerometer_evt_3g": 366, "accelerometer_6g_threshold": 366, "accelerometer_evt_6g": 366, "accelerometer_8g_threshold": 366, "accelerometer_evt_8g": 366, "onv": 366, "subsid": [366, 655], "accelerometer_gesture_damp": 366, "what": [366, 387, 450, 460, 648, 657, 661], "like": [366, 385, 420, 434, 439, 443, 454, 643, 647, 650, 651, 652, 655, 657, 658, 659, 664], "latest": [366, 441, 472], "some": [366, 376, 381, 397, 428, 439, 441, 444, 448, 450, 454, 460, 467, 643, 647, 648, 653, 654, 659, 661], "jitter": 366, "effect": [366, 378, 387, 424, 434, 444, 454, 455, 457, 643, 651, 652, 659], "threshold": [366, 374, 405, 406, 411, 412, 443], "rais": [366, 380, 385, 406, 443, 643], "relev": [366, 439, 643], "setperiod": [366, 368, 370, 374, 431, 433, 447, 458, 469, 471, 658], "getperiod": [366, 368, 370, 374, 431, 433, 447, 458, 469, 471, 658], "setrang": [366, 370, 431], "getrang": [366, 370, 431], "requestupd": [366, 368, 370, 381, 390, 391, 392, 394, 395, 396, 431, 433, 658], "sample3d": [366, 368, 370, 395, 422, 431, 433, 434], "getsampl": [366, 368, 370, 431, 433, 434, 658], "getx": [366, 368, 370, 431, 433, 434, 458, 469, 658], "geti": [366, 368, 370, 431, 433, 434, 458, 469, 658], "getz": [366, 368, 370, 431, 433, 458, 469, 658], "getpitch": [366, 431], "360": [366, 368, 420], "getpitchradian": [366, 368, 431], "pi": [366, 368, 449], "float": [366, 368, 393, 399, 408, 409, 412, 413, 417, 418, 419, 420, 427, 431, 434, 443, 449, 450, 452, 454, 455, 456, 457, 653], "recalculatepitchrol": 366, "getrol": [366, 431], "getrollradian": [366, 368, 431], "doubl": [366, 368], "atan2": [366, 368], "sin": [366, 368, 457], "co": [366, 368, 424, 457, 643, 651, 659], "quadrant": 366, "18": [366, 400, 402, 420, 441, 455, 465, 470], "degre": [366, 368], "getgestur": [366, 431], "device_usb": [367, 382, 383, 384, 385, 386, 407], "device_usb_endpoint_shar": 367, "endpoint": [367, 407], "stm32f4": 367, "samd": 367, "elsewher": 367, "num_endpoint": 367, "send": [367, 371, 375, 380, 385, 397, 402, 403, 407, 410, 414, 418, 423, 441, 444, 445, 446, 447, 454, 460, 466, 467, 470, 472, 643, 645, 652, 662], "ctrlin": 367, "usbinst": 367, "log": [367, 382, 399, 407, 441, 661], "usb_initialis": 367, "usb_20": 367, "pdf": [367, 655, 658], "usb_statu": 367, "usb_suspend": 367, "udint": 367, "suspi": 367, "wakeupi": 367, "usb_configur": 367, "configdescriptor": 367, "static_config": 367, "usb_config_bus_pow": 367, "devicedescriptor": 367, "default_device_desc": 367, "0x12": [367, 387, 402, 421], "blength": 367, "0x01": [367, 371, 381, 383, 384, 385, 386, 387, 389, 392, 394, 395, 396, 402, 404, 468, 470], "bdescriptortyp": 367, "device_webusb": 367, "0x0210": 367, "bcdusbl": 367, "0x0200": 367, "usb": [367, 443, 448, 662, 663], "cdc": 367, "iad": 367, "descriptor": [367, 384, 385, 386, 407, 439], "0xef": [367, 387], "bdeviceclass": 367, "misc": 367, "0x02": [367, 383, 384, 385, 386, 387, 402, 404], "bdevicesubclass": 367, "bdeviceprotocol": 367, "class": [367, 376, 397, 407, 436, 439, 449, 484, 643, 651, 652, 653, 657, 659, 662, 663], "per": [367, 387, 389, 417, 454, 460, 470, 659], "0x00": [367, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 396, 402, 407, 440, 441, 442, 444, 448, 461, 465, 466, 470, 472], "0x40": [367, 382, 390, 391, 394, 396, 402, 421, 472], "bmaxpacketsize0": 367, "usb_default_vid": 367, "usb_default_pid": 367, "0x4202": 367, "bcddevic": 367, "leav": [367, 436, 439, 460, 472], "unchang": 367, "hf2": 367, "imanufactur": 367, "iproduct": 367, "0x03": [367, 383, 384, 385, 386, 387, 392, 402, 404, 430, 444], "serialnumb": [367, 460], "bnumconfig": 367, "default_str": 367, "4242": 367, "vendor_webusb": 367, "vendor_ms20": 367, "0x41": [367, 421, 441], "winusb_s": 367, "msos20descriptor": 367, "numwebusbinterfac": 367, "msos20functiondescriptor": 367, "bosdescriptor": 367, "0x05": [367, 384, 385, 386, 404], "0x0f": [367, 375, 382, 385, 387], "binari": [367, 643], "0x39": [367, 387, 402, 421, 441, 448], "capabl": [367, 444, 448, 650, 661], "webusb": [367, 460], "platform": [367, 406, 643, 644, 645, 648], "bvendorcod": 367, "0x18": [367, 381, 387, 395, 396, 421, 444], "0x10": [367, 381, 382, 384, 385, 387, 390, 391, 395, 402, 421, 424, 465], "reserv": [367, 382, 385, 387, 643], "0x38": [367, 381, 386, 395, 396, 441], "0xb6": [367, 385, 387, 402], "0x08": [367, 381, 384, 385, 386, 387, 390, 392, 395, 402, 407], "0x34": [367, 387, 441], "0xa9": [367, 461, 470, 472], "0x09": [367, 383, 384, 385, 386, 387, 402], "0xa0": [367, 394, 461, 470], "0x47": [367, 441, 461, 470], "guid": [367, 645, 648], "0x8b": 367, "0xfd": 367, "0x76": [367, 441], "0x88": [367, 394, 421], "0x15": [367, 383, 384, 385, 386], "0x65": [367, 385, 441], "version": [367, 441, 442, 443, 445, 446, 448, 470, 643, 647, 648, 662], "vendor": [367, 383, 385], "land": 367, "page": [367, 383, 385, 386, 388, 430, 439, 440, 441, 442, 448, 451, 460, 470, 643, 648, 659], "0x1c": [367, 402, 421], "0xdf": [367, 461, 470], "0x60": [367, 390, 391, 394, 404, 421], "0xdd": [367, 387, 402], "0xd8": [367, 404, 444], "0x89": [367, 421], "0x45": [367, 441], "0xc7": [367, 387, 404], "0x4c": [367, 421, 441], "o": [367, 382, 402, 436, 440, 643, 650, 659], "0x9c": 367, "0xd2": [367, 421], "0x9d": 367, "0x9e": [367, 472], "0x64": [367, 387, 441], "0x8a": [367, 385, 402, 421], "0x9f": 367, "0x06": [367, 383, 385, 386, 402, 404, 407], "window": [367, 645, 646, 662], "0xff": [367, 382, 383, 385, 402, 417, 430, 441, 448, 460, 470, 651], "altern": [367, 430, 645, 652, 663], "enumer": [367, 460], "microsoft": [367, 647], "subset": 367, "header": [367, 441, 448, 460, 461, 462], "8": [367, 375, 381, 382, 383, 384, 385, 386, 387, 390, 391, 395, 396, 400, 402, 404, 407, 411, 417, 420, 421, 425, 427, 436, 440, 442, 443, 444, 448, 452, 455, 457, 460, 470], "160": [367, 400], "tabl": [367, 381, 390, 391, 392, 417, 439, 460, 643], "13": [367, 382, 396, 400, 402, 420, 427, 443, 455, 470], "wlength": 367, "ms_os_20_feature_compatible_id": 367, "w": [367, 386, 402, 427, 435, 450], "b": [367, 369, 382, 384, 386, 387, 389, 390, 395, 398, 402, 411, 412, 414, 420, 434, 439, 440, 441, 443, 448, 449, 452, 455, 652], "132": [367, 400, 420], "7": [367, 375, 379, 382, 391, 396, 400, 402, 407, 420, 427, 432, 457, 460, 467, 470, 659], "42": [367, 400, 420, 650, 659], "v": [367, 378, 382, 402, 405, 407, 412, 415, 424, 427, 435, 436, 441, 448, 449, 450, 455, 643], "80": [367, 394, 400, 407, 449], "0x0a": [367, 385, 387, 402, 407, 461, 470], "0x06030000": 367, "interfaceinfo": [367, 383, 384, 385, 386, 407], "codaldummyifaceinfo": 367, "numendpoint": [367, 383, 384, 385, 386, 407], "subclass": [367, 383, 384, 385, 386, 407], "protocol": [367, 383, 384, 385, 386, 407, 443, 444, 445, 446, 643, 652], "alt": [367, 407], "codaldummyusbinterfac": 367, "getinterfaceinfo": [367, 383, 384, 385, 386, 407], "endpointsus": 367, "ctrl": [367, 383, 384, 385, 386, 402, 407], "ctrlout": 367, "numstringdescriptor": 367, "stringdescriptor": 367, "startdelaycount": 367, "maxpow": 367, "50": [367, 392, 400, 420], "100ma": 367, "500ma": 367, "io": [367, 387, 402, 443, 448, 467, 657, 659, 661], "codalusbinterfac": [367, 383, 407], "fillinterfaceinfo": [367, 383, 384, 385, 386], "interfacedescriptor": [367, 383, 384, 385, 386], "descp": 367, "info": [367, 407, 460, 465, 470, 643, 659], "desc": [367, 383, 384, 385, 386, 461], "interfaceidx": 367, "ifac": [367, 407], "interfaceclass": 367, "interfacesubclass": 367, "iinterfacestr": 367, "sendconfig": 367, "numinterfac": 367, "clen": 367, "endpointdescriptor": 367, "supplementaldescriptors": 367, "add_desc": 367, "supplementaldescriptor": 367, "epdescin": 367, "0x80": [367, 387, 390, 391, 392, 394, 396, 402, 407, 421], "epin": 367, "attr": [367, 382], "usb_max_pkt_s": 367, "interv": [367, 387, 457, 460], "epdescout": 367, "usb_assert": [367, 407], "languageid": 367, "unit": [367, 374, 381, 394, 411, 412, 436, 441, 460], "string0": 367, "senddescriptor": 367, "usbsetup": [367, 383, 384, 385, 386, 407], "setup": [367, 378, 383, 384, 385, 386, 407, 460, 645], "wvalueh": [367, 383, 384, 385, 386], "usb_configuration_descriptor_typ": 367, "usb_device_descriptor_typ": 367, "usb_bos_descriptor_typ": 367, "usb_string_descriptor_typ": 367, "bound": [367, 424, 449, 643], "wvaluel": 367, "str": [367, 375, 426], "host": 367, "ask": [367, 380, 401, 420, 422, 439, 456, 645, 659], "interfacerequest": 367, "getinst": [367, 460, 465], "epsconsum": 367, "allocateendpoint": 367, "device_usb_endpoint": 367, "web": 367, "enablewebusb": 367, "isinitialis": 367, "isclass": 367, "ifaceidx": 367, "epidx": 367, "bmrequesttyp": 367, "usb_req_destin": 367, "usb_req_interfac": 367, "windex": 367, "usb_req_endpoint": 367, "0x7f": [367, 384, 386], "req": [367, 460, 461], "classrequest": [367, 383, 407], "stdrequest": [367, 383, 384, 385, 386], "sendzlp": 367, "stall": [367, 407, 419, 454], "setuprequest": 367, "idx": [367, 382, 461], "brequest": [367, 383, 384, 385, 386, 407], "transactionstatu": 367, "standard": [367, 397, 407, 457, 472, 655, 658, 664], "wvalu": 367, "request_typ": 367, "wstatu": 367, "usb_req_typ": 367, "usb_req_standard": 367, "usb_req_get_statu": 367, "sta": 367, "usb_req_devicetohost": 367, "usb_req_devic": 367, "usb_req_clear_featur": 367, "clr": 367, "fea": 367, "usb_req_hosttodevic": 367, "usb_device_remote_wakeup": 367, "usb_feature_remote_wakeup_en": 367, "clearstal": 367, "usb_req_set_featur": 367, "usb_req_set_address": 367, "usb_set_address_pr": 367, "usb_set_address": 367, "usb_req_get_descriptor": [367, 383, 384, 385, 386], "usb_req_set_descriptor": 367, "usb_req_get_configur": 367, "conf": 367, "usb_req_set_configur": 367, "usb_req_vendor": 367, "ever": [367, 449], "device_not_impl": [367, 371, 372, 373], "respons": [367, 407, 443, 448, 467, 470, 653], "clear": [367, 378, 389, 394, 395, 396, 397, 406, 424, 430, 434, 436, 441, 449, 450, 452, 460, 461, 470, 651, 659], "interrupthandl": 367, "endpointrequest": [367, 407], "initendpoint": 367, "endpointcount": 367, "ifacecount": 367, "usbendpointin": [367, 383, 384, 385, 386, 407], "usb_ep_type_control": 367, "usbendpointout": 367, "numep": 367, "usb_pan": 367, "linenumb": 367, "fail": [367, 385, 404, 407, 439, 443, 448, 460, 470], "device_usb_error": [367, 382], "calibr": [368, 405, 433, 434, 447, 469, 661, 663, 664], "centr": [368, 434, 651], "scale": [368, 381, 390, 391, 392, 394, 395, 396, 402, 434, 450, 454, 455], "init": [368, 387, 391, 392, 396, 402, 419, 424, 425, 429, 439, 441, 449, 453, 460, 643, 661, 663], "accel": 368, "inform": [368, 394, 441, 443, 447, 448, 470, 643, 648, 658, 659], "compass_status_calibr": 368, "device_calibration_in_progress": 368, "tiltcompensatedbear": [368, 658], "basicbear": [368, 658], "getfieldstrength": [368, 433, 658], "sqrt": [368, 434], "iscalibr": [368, 433, 469, 658], "clearcalibr": [368, 433, 658], "registr": 368, "alogrithm": 368, "visialis": 368, "compass_evt_calibr": 368, "finish": [368, 375, 434, 643, 659], "couldn": 368, "succesfulli": 368, "device_calibration_requir": 368, "setcalibr": [368, 433, 434, 447, 664], "compasscalibr": [368, 433, 434], "getcalibr": [368, 433, 447], "setacceleromet": [368, 431, 433], "raw": [368, 394, 396, 422, 434, 645, 652, 657, 658], "appli": [368, 417, 422, 434, 448, 450, 454, 455], "placement": 368, "compass_evt_data_upd": 368, "precomput": 368, "tilt": [368, 434, 655], "compens": [368, 392], "improv": [368, 434, 439, 663], "readabl": 368, "phi": 368, "theta": 368, "north_east_down": [368, 422], "angl": 368, "littl": [368, 381, 391, 392, 394, 405, 424, 443, 651, 653, 662], "sinphi": 368, "cosphi": 368, "sintheta": 368, "costheta": 368, "bear": 368, "convert": [368, 412, 448, 449, 650], "90": [368, 400], "offset": [368, 378, 388, 425, 430, 438, 439, 440, 447, 449, 450, 454, 457, 459, 461, 470, 664], "caus": [368, 432, 455, 460], "359": 368, "0f": [368, 393, 399, 412, 420, 427, 450, 452, 454, 455, 456, 457], "simple_cartesian": [368, 422, 431], "180": [368, 400, 457], "width": [369, 389, 402, 424, 427, 436, 452, 478, 479, 651], "height": [369, 389, 402, 424, 427, 436, 452, 478, 479, 651], "bright": [369, 387, 389, 434, 452, 460, 651, 653, 659], "getwidth": [369, 378, 424, 659], "getheight": [369, 424, 659], "setbright": [369, 389, 434, 452, 460, 653, 659], "sanitis": [369, 378], "getbright": [369, 434, 659], "screenshot": [369, 659], "crop": [369, 424], "2018": [370, 374], "paul": [370, 374], "adam": [370, 374], "europ": 370, "gyroscope_imu_data_valid": 370, "gyroscope_evt_data_upd": 370, "sda": [371, 475], "scl": [371, 475], "redirect": [371, 373, 375, 476], "setfrequ": [371, 420], "frequenc": [371, 374, 381, 390, 391, 392, 394, 395, 402, 420, 444, 454, 455, 456, 457], "stop": [371, 380, 385, 397, 418, 434, 444, 452, 454, 455, 460, 650, 651, 652], "read": [371, 374, 375, 381, 382, 388, 390, 391, 392, 393, 394, 395, 396, 399, 405, 407, 417, 428, 430, 438, 439, 441, 443, 444, 447, 448, 451, 452, 458, 461, 466, 467, 468, 469, 471, 472, 647, 651, 652, 655, 659, 661, 662, 664], "acknowledgetyp": 371, "ack": [371, 443], "address": [371, 381, 388, 390, 391, 392, 394, 395, 396, 407, 430, 439, 440, 441, 442, 444, 448, 451, 460, 470], "repeat": [371, 376, 436, 444, 470], "slave": 371, "bodi": 371, "writeregist": [371, 381, 390, 391, 392, 394, 395, 396], "reg": [371, 379, 386], "command": [371, 404, 407, 448, 470, 645, 647], "nack": 371, "readregist": [371, 381, 390, 391, 392, 394, 395, 396], "2022": [372, 449], "releasepin": [372, 380, 401], "ispinlock": 372, "pinlock": 372, "setpinlock": [372, 380, 405], "reassignpin": [372, 375], "newpin": 372, "reelas": 372, "peripher": [372, 443, 448, 661], "attach": [372, 406, 407, 432, 643], "disconnect": [372, 380, 401, 408, 409, 410, 415, 416, 418, 419, 450, 460], "mosi": 373, "miso": 373, "sclk": 373, "transfer": [373, 390, 403, 404, 407, 414, 444], "txbuffer": [373, 403, 472], "txsize": [373, 403], "rxbuffer": [373, 472], "rxsize": 373, "device_spi_error": [373, 404], "starttransf": [373, 402, 403], "pvoidcallback": [373, 402, 403], "donehandl": [373, 403], "import": [373, 397, 645], "doesn": [373, 385, 397, 428, 431, 439, 460, 465, 645], "recursiev": 373, "sinc": [373, 441], "lead": [373, 397, 441, 650], "overflow": [373, 376, 397, 441], "inidinn": 374, "sensit": [374, 393, 399, 658], "setsensit": 374, "hz": [374, 387, 392, 394, 449, 659], "sensor_update_need": 374, "onsampleev": [374, 406], "updatesampl": [374, 377, 393, 399, 447, 655, 658, 664], "instantan": [374, 411, 412], "si": [374, 381, 394, 411, 412], "getvalu": [374, 405, 411, 412, 653], "sensorvalu": [374, 393, 399], "readvalu": [374, 377, 393, 399], "baselin": [374, 393, 399, 405], "averag": [374, 393, 399, 417], "smooth": [374, 393, 399, 653], "sensor_initialis": 374, "1023": [374, 399, 420, 449, 450, 454, 455, 467], "checkthreshold": [374, 393, 399], "sensor_high_threshold_en": 374, "sensor_high_threshold_pass": 374, "highthreshold": [374, 411, 412], "sensor_threshold_high": 374, "sensor_low_threshold_pass": 374, "sensor_low_threshold_en": 374, "lowthreshold": [374, 411, 412], "sensor_threshold_low": 374, "sensor_default_sample_period": 374, "system_timer_event_everi": [374, 376], "setlowthreshold": [374, 411, 412], "protect": [374, 406, 407, 411, 412, 439, 444, 457, 460], "against": [374, 406, 411, 412, 439], "repeatedli": [374, 411, 412], "exisit": [374, 411, 412, 439], "sethighthreshold": [374, 411, 412], "getlowthreshold": [374, 411, 412], "gethighthreshold": [374, 411, 412], "datareceiv": 375, "codal_serial_status_rx_buff_init": 375, "delimeteroffset": [375, 472], "delimlength": [375, 472], "delimet": [375, 472], "charat": [375, 378, 426, 448, 460, 472, 650], "codal_serial_evt_delim_match": 375, "newhead": [375, 472], "rxbuffhead": 375, "rxbuffsiz": 375, "ahead": 375, "collid": 375, "rxbufftail": 375, "rxbuff": 375, "specif": [375, 406, 407, 408, 443, 455, 643, 644, 645, 647, 648], "rxbuffheadmatch": [375, 472], "codal_serial_evt_head_match": 375, "codal_serial_status_rxd": 375, "codal_serial_evt_rx_ful": 375, "datatransmit": 375, "codal_serial_status_tx_buff_init": 375, "putc": [375, 472], "txbuff": 375, "txbufftail": 375, "transmiss": [375, 444, 662], "nexttail": 375, "txbuffsiz": 375, "txbuffhead": 375, "codal_serial_evt_tx_empti": 375, "disableinterrupt": [375, 376], "txinterrupt": 375, "settxinterrupt": 375, "serialmod": 375, "copiedbyt": 375, "nexthead": [375, 472], "enableinterrupt": [375, 376], "sync_sleep": [375, 472, 662], "sync_spinwait": [375, 472, 662], "txbuffereds": [375, 472], "async": [375, 408, 472, 643, 659, 662], "tx": [375, 472, 476], "codal_serial_evt_data_receiv": 375, "lockrx": 375, "codal_serial_status_rx_in_us": 375, "locktx": 375, "codal_serial_status_tx_in_us": 375, "unlockrx": 375, "unlocktx": 375, "initialiserx": 375, "rxinterrupt": 375, "initialisetx": 375, "circularcopi": [375, 472], "circularbuff": [375, 472], "circularbuffs": [375, 472], "linearbuff": [375, 472], "tailposit": [375, 472], "headposit": [375, 472], "tobuffindex": [375, 472], "rx": [375, 448, 472, 476], "rxbuffers": [375, 472, 476], "txbuffers": [375, 472, 476], "usabl": [375, 439], "sendchar": 375, "tochararrai": [375, 385, 388, 400, 426, 438, 441, 445, 448, 455, 460, 465, 472, 650], "bufferlen": 375, "txinus": 375, "device_serial_in_us": 375, "lazi": [375, 380, 401, 441, 456], "byteswritten": [375, 420, 448, 472], "codal_provide_printf": 375, "printf": [375, 662], "isr": [375, 444], "buffptr": 375, "firstdigitfound": 375, "lowercas": 375, "fall": [375, 457, 655], "digit": [375, 424, 436, 441, 443, 455, 467, 643, 659], "39": [375, 400], "rxinus": 375, "getchar": 375, "isread": [375, 407, 472], "device_no_data": [375, 388, 448], "eventaft": [375, 376, 472], "memclr": [375, 376, 424, 441, 459, 468, 470, 472], "returneds": 375, "bufferindex": 375, "temp": [375, 396, 422, 447, 648], "rxbuffereds": [375, 472], "readuntil": [375, 472], "localtail": [375, 472], "preservedtail": [375, 472], "foundindex": [375, 472], "modif": [375, 472], "delimeteriter": [375, 472], "eventon": [375, 401, 472], "local": [375, 394, 395, 444, 450, 460, 468, 472, 643], "localbuffs": [375, 472], "localbuff": [375, 472], "plu": [375, 424, 472], "setbaud": 375, "baudrat": 375, "setbaudr": 375, "v1": [375, 387, 449, 456], "behaviour": [375, 443, 448, 456, 460, 643, 659], "setpul": [375, 380, 431], "pullmod": [375, 380, 405, 431, 452, 474], "configurepin": 375, "port": [375, 441, 643, 662], "deschedul": 375, "iswrit": 375, "setrxbuffers": 375, "settxbuffers": 375, "getrxbuffers": 375, "gettxbuffers": 375, "clearrxbuff": 375, "cleartxbuff": 375, "system_tim": 376, "chan": [376, 443], "ccperiodchannel": 376, "trigger": [376, 380, 443, 470], "triggerin": 376, "codal_timestamp": [376, 423, 441, 443, 450], "codal_timer_minimum_period": 376, "setcompar": [376, 443, 452], "cceventchannel": 376, "capturecount": [376, 443], "timerev": 376, "gettimerev": 376, "slot": [376, 385, 439], "eventlists": 376, "timereventlist": 376, "todo": [376, 378, 381, 402, 406, 441, 452, 460, 461, 656, 660], "try": [376, 425, 439, 443, 454, 643, 645, 659], "releasetimerev": 376, "nexttimerev": 376, "lowleveltim": [376, 642], "defualt": 376, "most": [376, 420, 444, 447, 460, 643, 650, 651, 658, 659, 661], "recent": [376, 430], "win": 376, "codal_timer_default_event_list_s": 376, "clock": [376, 387, 444], "currenttim": 376, "currenttimeu": [376, 423], "setirq": [376, 443], "10000000": 376, "delta": [376, 449, 455, 457], "enableirq": [376, 407, 443, 452], "system_timer_calibrate_cycl": 376, "gettim": 376, "sync": [376, 396, 643], "gettimeu": 376, "disableirq": [376, 407, 443, 452], "setev": 376, "cancel": 376, "recomputenexttimerev": 376, "eventafteru": 376, "eventeveri": 376, "eventeveryu": 376, "exampl": [376, 643, 650, 651, 652, 653, 655, 659, 661], "elaps": 376, "codal_timer_32bit": [376, 443], "least": [376, 382, 412, 430, 431, 433, 443], "counter": [376, 380, 407, 430, 443], "advanc": [376, 643], "main": [376, 380, 402, 643, 645, 651, 653, 661, 663], "64": [376, 383, 390, 395, 400, 402, 407, 412, 420, 448, 455, 460], "divis": [376, 387], "150": [376, 400, 402, 411, 432], "everi": [376, 406, 424, 434, 460, 643, 659], "few": [376, 408, 439, 647, 659], "quit": [376, 432, 439, 643, 651, 659], "possibli": [376, 443], "often": [376, 643, 650, 652, 659, 661], "were": [376, 655], "past": [376, 378, 424, 434, 651, 659], "isfallback": 376, "eventsfir": 376, "walk": [376, 397, 439, 441, 444, 466], "immedi": [376, 397, 439, 653, 659, 662], "differ": [376, 434, 444, 470, 472, 645, 647, 652, 657, 659, 662], "rollov": 376, "codal_timer_event_flags_wakeup": [376, 443], "100000": [376, 390, 391, 392, 394], "power_evt_cancel_deepsleep": [376, 443], "recomput": [376, 450], "deepsleepwakeupev": 376, "wakeupev": 376, "enext": 376, "deepsleepbegin": 376, "deepsleepend": 376, "On": [376, 387, 643, 662], "milli": [376, 381, 394, 655], "bring": [376, 394, 395, 397, 439, 444, 460], "present": [376, 387, 430, 432, 440, 441, 451, 460, 643, 645, 652, 653, 655, 658, 664], "deep": [376, 443], "onc": [376, 439, 470, 643, 645, 650, 651, 652, 659, 661], "obvious": 376, "late": 376, "mean": [376, 422, 643, 645, 650, 651, 652, 653, 655, 659, 663], "drop": [376, 388, 397, 419, 467, 645], "counternow": 376, "deepsleepwakeuptim": 376, "conveni": [376, 436], "api": [376, 460, 467, 643, 648, 650, 651, 653, 659], "wrap": [376, 439, 449, 643], "system_timer_current_time_u": [376, 401, 423, 432, 443, 450], "system_timer_event_after_u": [376, 389], "system_timer_event_aft": [376, 443], "system_timer_cancel_ev": [376, 443], "system_timer_wait_cycl": 376, "10000": [376, 381, 390, 391, 392, 395, 401, 455], "force_ram_func": 376, "__asm__": 376, "__volatile__": 376, "syntax": [376, 643, 645], "unifi": 376, "sub": [376, 450], "subtract": [376, 449], "bne": 376, "1b": 376, "jump": [376, 457, 460], "rw": 376, "constraint": 376, "input": [376, 383, 384, 385, 386, 396, 406, 409, 414, 417, 422, 432, 434, 443, 450, 454, 455, 467, 648, 661], "clobber": 376, "system_timer_deepsleep_begin": [376, 443], "system_timer_deepsleep_end": [376, 443], "system_timer_deepsleep_wakeup_tim": [376, 443], "getanalogvalu": [377, 456, 467], "_displai": [378, 434, 468], "font": [378, 421, 424, 436, 659], "printingtext": 378, "scrollingimag": 378, "animationmod": 378, "animation_mode_non": 378, "animationdelai": 378, "animationtick": 378, "scrollingchar": 378, "scrollingposit": 378, "printingchar": 378, "scrollingimageposit": 378, "scrollingimagestrid": 378, "scrollingimagerend": 378, "animationupd": 378, "ongo": [378, 444], "anim": [378, 434, 460, 468, 651, 659], "animation_mode_scroll_text": 378, "updatescrolltext": 378, "animation_mode_print_text": 378, "updateprinttext": 378, "animation_mode_scroll_imag": 378, "updatescrollimag": 378, "animation_mode_animate_imag": 378, "animation_mode_animate_image_with_clear": 378, "updateanimateimag": 378, "animation_mode_print_charact": 378, "sendanimationcompleteev": 378, "signal": [378, 417, 419, 443, 444, 652], "display_evt_animation_complet": 378, "display_evt_fre": 378, "shiftleft": [378, 424], "bitmap_font_width": [378, 421, 424, 436], "scrollingtext": 378, "mask": [378, 389, 417, 450, 452, 454], "bitmap_font_height": [378, 421, 424], "setpixelvalu": [378, 424, 434, 460, 468, 651, 659], "display_spac": 378, "render": [378, 389, 452, 454], "give": [378, 420, 439, 643, 653, 664], "stopanim": [378, 434, 460, 468, 659], "aall": 378, "waitforfreedisplai": 378, "turn": [378, 389, 402, 412, 434, 436, 440, 444, 448, 451, 452, 467, 659], "animation_mode_stop": 378, "fiberwait": 378, "device_id_displai": [378, 402], "printcharasync": [378, 659], "device_busi": [378, 402, 420], "printasync": [378, 434, 659], "alpha": [378, 424], "printchar": [378, 659], "someon": 378, "device_cancel": [378, 401], "scrollasync": [378, 434, 468, 643, 659], "stride": [378, 424], "scroll": [378, 387, 426, 434, 460, 468, 643, 650, 651, 652, 653, 661, 663], "animateasync": 378, "startingposit": 378, "autoclear": 378, "scrollstr": 378, "display_animate_default_po": 378, "tight": 378, "keymap_key_down": 379, "key_backspac": 379, "key_tab": 379, "key_ent": 379, "key_spac": 379, "keymap_modifier_kei": 379, "key_mod_lshift": 379, "key_1": 379, "key_3": 379, "key_4": 379, "key_5": 379, "key_7": 379, "key_apostroph": 379, "key_9": 379, "key_0": 379, "key_8": 379, "key_equ": 379, "key_comma": 379, "key_minu": 379, "key_dot": 379, "key_slash": 379, "key_2": 379, "key_6": 379, "key_semicolon": 379, "key_a": 379, "key_b": 379, "key_c": 379, "key_d": 379, "key_": 379, "key_f": 379, "key_g": 379, "key_h": 379, "key_i": 379, "key_j": 379, "key_k": 379, "key_l": 379, "key_m": 379, "key_n": 379, "key_o": 379, "key_p": 379, "key_q": 379, "key_r": 379, "key_t": 379, "key_u": 379, "key_v": 379, "key_w": 379, "key_x": 379, "key_z": 379, "key_leftbrac": 379, "key_backslash": 379, "key_rightbrac": 379, "key_grav": 379, "keysequ": [379, 385], "keymap": [379, 385, 642], "keymap_regist": 379, "33": [379, 400, 420, 431, 433], "34": [379, 396, 400, 420, 455], "35": [379, 400, 420], "buttoneventconfigur": [380, 398, 474], "eventconfigur": [380, 398, 474], "buttonpolar": [380, 474], "polar": [380, 422, 452, 474], "_pin": [380, 405, 406], "downstarttim": 380, "setpolar": 380, "active_high": 380, "seteventconfigur": [380, 398], "config": [380, 396, 398, 436, 440, 441, 448, 449, 451, 452, 643], "buttonact": [380, 405], "getdigitalvalu": [380, 389, 390, 394, 395, 396, 405, 431, 443, 452, 467], "touch": [380, 648, 661], "increment": [380, 388, 420, 441], "culum": 380, "decrement": 380, "essenti": [380, 647, 663], "build": [380, 426, 442, 472, 645, 647, 650, 653], "debounc": [380, 657], "desensit": 380, "particularli": [380, 658], "environ": [380, 646], "nois": [380, 420, 449], "device_button_sigma_max": 380, "device_button_sigma_min": 380, "device_button_sigma_thresh_hi": 380, "device_button_st": 380, "device_button_evt_down": [380, 398], "press": [380, 385, 443, 643, 645, 657], "device_button_sigma_thresh_lo": 380, "device_button_state_hold_trigg": 380, "device_button_evt_up": [380, 398], "device_button_all_ev": [380, 398, 405], "click": [380, 643, 645, 647, 653], "device_button_long_click_tim": 380, "device_button_evt_long_click": [380, 398], "device_button_evt_click": [380, 398], "greater": [380, 467], "device_button_hold_tim": 380, "device_button_evt_hold": [380, 398], "callback": [380, 397, 406, 443, 444, 447, 456, 460, 470, 643], "deleteonreleas": [380, 401], "iswakeonact": 380, "map": [381, 389, 390, 391, 392, 420, 436, 437, 442, 444, 449, 452, 470, 643, 651], "xyz_data_cfg": [381, 395], "microsecond": [381, 390, 391, 392], "ctrl_reg1": [381, 391, 394, 395], "select": [381, 387, 390, 391, 392, 394, 395, 417, 424, 441, 454, 460, 467, 645, 662], "2500": [381, 390, 391, 395, 420], "5000": [381, 390, 391, 395, 420, 460], "20000": [381, 390, 391, 392, 395], "80000": [381, 395], "0x20": [381, 387, 390, 391, 394, 395, 402, 404, 441, 448], "160000": [381, 395], "0x28": [381, 382, 387, 395, 402, 441], "320000": 381, "0x30": [381, 384, 386, 387, 390, 391, 395, 396, 402, 436, 441], "1280000": 381, "2000": [381, 396, 420, 460], "accordingli": [381, 390, 391, 395, 441], "firstli": [381, 385, 390, 397, 422, 434, 439, 444, 645], "modul": [381, 444, 447, 449], "fxos8700_ctrl_reg1": 381, "device_i2c_error": [381, 390, 391, 392, 394, 395, 396, 448], "hybrid": 381, "interleav": 381, "magnetomet": [381, 391, 392, 394, 655, 658], "oversampl": [381, 394], "accuraci": [381, 447, 452], "tradeoff": 381, "0x1f": [381, 384, 407, 421], "fxos8700_m_ctrl_reg1": 381, "auto": [381, 402, 407, 415, 432, 449, 452], "increm": 381, "contigu": [381, 406], "both": [381, 407, 443, 444, 643, 645, 652, 653, 662], "acceleromt": 381, "despit": [381, 408], "contguou": 381, "funki": 381, "fxos8700_m_ctrl_reg2": 381, "opendrain": 381, "configu": 381, "share": [381, 391, 392, 444, 462, 643, 659, 662], "pushpul": 381, "device_i2c_irq_shar": [381, 391, 392], "fxos8700_ctrl_reg3": 381, "readi": [381, 391, 392, 410, 417, 440, 441, 443, 444, 448, 451, 643, 645, 659], "fxos8700_ctrl_reg4": 381, "rout": [381, 395, 659], "int1": [381, 390, 391, 392, 394, 395, 396], "fxos8700_ctrl_reg5": 381, "fxos8700_xyz_data_cfg": 381, "_i2c": [381, 390, 391, 392, 394, 395, 396], "_int1": [381, 390, 391, 392, 396], "aid": [381, 460], "cid": 381, "isdetect": [381, 391, 392, 431], "fxos8700_who_am_i": 381, "fxos8700_whoami_v": 381, "poll": [381, 390, 391, 392, 394, 395, 657], "isact": [381, 391, 392, 443, 448], "12": [381, 382, 387, 396, 400, 402, 407, 420, 426, 427, 448, 449, 455, 457, 460, 470, 659], "fxosrawsampl": 381, "msb": [381, 390, 394, 395], "status_reg": [381, 391, 392], "fxos8700_status_reg": 381, "fxos8700_status_data_readi": 381, "fxos8700_out_x_msb": 381, "translat": [381, 394], "endian": [381, 391, 392, 394], "14": [381, 394, 396, 400, 420, 427, 434, 441, 455, 470], "pack": [381, 394, 450], "enu": [381, 390, 391, 392, 394, 422], "ai": 381, "ax": [381, 391, 422], "az": 381, "normalis": 381, "nano": 381, "tesla": 381, "fxos8700_normalize_sampl": 381, "cy": [381, 424], "cx": [381, 424], "cz": 381, "uf2_define_handov": 382, "uf2format": 382, "num_fat_block": 382, "65000": 382, "sectors_per_fat": 382, "fat_sectors_per_fat": 382, "start_fat0": 382, "fat_start_fat0": 382, "start_fat1": 382, "fat_start_fat1": 382, "start_rootdir": 382, "fat_start_rootdir": 382, "start_clust": 382, "fat_start_clust": 382, "fat_bootblock": 382, "bootblock": 382, "0xeb": 382, "0x3c": [382, 431, 441], "0x90": [382, 391, 394, 421], "jumpinstruct": 382, "oeminfo": 382, "512": [382, 407, 415, 420, 449, 450, 454, 456], "sectors": 382, "sectorsperclust": 382, "fat_reserved_sector": 382, "reservedsector": 382, "fatcopi": 382, "fat_root_dir_sector": 382, "rootdirectoryentri": 382, "totalsectors16": 382, "0xf8": [382, 394, 444], "mediadescriptor": 382, "sectorsperfat": 382, "sectorspertrack": 382, "hiddensector": 382, "totalsectors32": 382, "physicaldrivenum": 382, "0x29": [382, 384, 385, 386, 387, 402, 441], "extendedbootsig": 382, "0x00420042": 382, "volumeserialnumb": 382, "volumelabel": 382, "filesystemidentifi": 382, "getcapac": [382, 407], "numclust": 382, "gfatentri": 382, "cluster": 382, "numdirentri": 382, "filenam": [382, 438, 439, 441, 448], "fatchecksum": 382, "sum": [382, 415], "11": [382, 387, 396, 397, 400, 402, 420, 427, 436, 441, 455, 457, 470, 617, 647], "unalign": 382, "copyvfatnam": 382, "dest": [382, 448, 451], "strchr": 382, "_": [382, 448], "filechar": 382, "copyfschar": 382, "src": [382, 390, 402, 425], "readdirdata": 382, "blkno": 382, "dirid": 382, "direntri": 382, "fatnam": 382, "dot": [382, 402, 407, 448], "idlen": 382, "st": [382, 402, 655, 658], "dir": [382, 439], "startclust": 382, "timetofat": 382, "mtime": 382, "updated": 382, "updatetim": 382, "ctime": 382, "created": 382, "createtim": 382, "vfatentri": 382, "seq": [382, 385], "seqno": 382, "thei": [382, 397, 429, 441, 444, 456, 460, 643, 645, 650, 653, 659, 663], "checksum": [382, 444], "name0": 382, "name1": 382, "name2": 382, "write_": 382, "256": [382, 400, 402, 412, 420, 449, 452, 478, 651, 659, 663], "cl": 382, "buildblock": 382, "block_no": 382, "sectionidx": 382, "bb": 382, "510": 382, "0x55": [382, 387, 441], "511": [382, 415, 420, 449], "0xaa": [382, 465, 470], "logval": 382, "sidx": 382, "0xfff0": 382, "userdata": 382, "readblock": [382, 407], "blockaddr": [382, 407], "numblock": 382, "finalizefil": 382, "writebulk": [382, 407], "finishreadwrit": [382, 407], "writeblock": [382, 407], "ifdef": [382, 402, 405, 420, 430, 436, 440, 447, 451, 460], "bootloader_start_addr": 382, "handoversupport": 382, "p0": 382, "uf2_info": 382, "readbulk": [382, 407], "is_uf2_block": 382, "uf2_block": 382, "uf2_flag_noflash": 382, "check_uf2_handov": 382, "cbwtag": [382, 407], "filesfin": 382, "regfil": 382, "addfil": 382, "gfatreadcallback": 382, "strcpy": [382, 439], "readstr": 382, "ent": 382, "addstringfil": 382, "adddirectori": 382, "dirnam": 382, "readcurrentuf2": 382, "th": [382, 460], "internalflashs": 382, "bl": 382, "magicstart0": 382, "uf2_magic_start0": 382, "magicstart1": 382, "uf2_magic_start1": 382, "magicend": 382, "uf2_magic_end": 382, "blockno": 382, "targetaddr": 382, "payloads": 382, "readdmesg": 382, "info_uf2": 382, "txt": 382, "uf2": 382, "hiddescriptor": 383, "0xa1": [383, 384, 385, 386], "collect": [383, 384, 385, 386, 424, 659], "logic": [383, 385, 386, 436, 439, 643, 659], "0x26": [383, 385, 387, 421, 441], "0x75": [383, 384, 385, 386, 421, 441], "report": [383, 384, 385, 386, 419, 448, 467, 471], "0x95": [383, 384, 385, 386], "0x81": [383, 384, 385, 386, 387], "absolut": [383, 385], "0x91": [383, 385], "0xb1": [383, 385, 387, 402, 421], "featur": [383, 385, 643, 645, 653, 659, 661], "0xc0": [383, 384, 385, 386, 387, 402, 421], "hidreportdescriptor": [383, 384, 385, 386], "reportdesc": [383, 384, 385, 386], "0x21": [383, 384, 385, 386, 387, 402, 441], "0x100": 383, "hidbcd": [383, 384, 385, 386], "00": [383, 407, 443, 448, 455], "countri": [383, 384, 385, 386], "0x22": [383, 384, 385, 386, 421, 441, 461, 470], "ifaceinfo": [383, 384, 385, 386, 407], "usb_ep_type_interrupt": [383, 384, 385, 386], "usbhid": [383, 384, 386], "hid_request_get_protocol": 383, "hid_request_get_idl": 383, "hid_request_get_report": 383, "hid_request_set_idl": 383, "hid_request_set_report": 383, "hid_request_set_protocol": 383, "hidjoystickdescriptor": 384, "usage_pag": 384, "desktop": [384, 385, 386, 647], "game": 384, "pad": [384, 385, 442, 454, 455], "simul": 384, "control": [384, 385, 386, 387, 388, 402, 420, 434, 443, 452, 467, 468, 470, 643, 653, 659], "0xbb": [384, 421], "throttl": 384, "logical_minimum": 384, "0x25": [384, 385, 386, 402, 461, 470], "logical_maximum": 384, "report_s": 384, "report_count": 384, "var": [384, 385], "0xb0": [384, 394], "rudder": 384, "physic": [384, 386, 436, 439, 441, 645], "0x31": [384, 386, 387, 421, 441], "0x32": [384, 402, 421, 431, 441], "0x35": [384, 421, 441], "rz": 384, "127": [384, 386, 387, 400, 449], "0x19": [384, 385, 386, 396, 421, 461, 470], "usage_minimum": 384, "usage_maximum": 384, "end_collect": 384, "0x101": [384, 385, 386], "01": [384, 385, 386], "none": [384, 405, 425, 441, 452, 474, 645, 647, 651, 659], "isn": [384, 402, 447, 449, 470, 662], "gamepad": 384, "joystick": 384, "hidjoystickst": 384, "joystickst": 384, "usbhidjoystick": 384, "buttondown": [384, 386], "btn": 384, "1ul": 384, "sendreport": [384, 386], "buttonup": [384, 386], "int8_t": [384, 386, 390, 395, 411, 417, 449, 460, 465], "x0": 384, "y0": 384, "x1": [384, 424], "y1": [384, 424], "setthrottl": 384, "throttle0": 384, "throttle1": 384, "device_invalid_st": [384, 385, 386, 441, 443], "hid_keyboard_key_off": 385, "hidkeyboarddescriptor": 385, "keyboard": 385, "0x85": [385, 387], "hid_keyboard_report_gener": 385, "0x07": [385, 387, 390, 391, 402], "0xe0": [385, 387, 402, 472], "minimum": [385, 386, 450], "224": [385, 400, 402, 420], "0xe7": 385, "231": [385, 400], "constant": [385, 386, 436, 450, 460, 651, 659, 663], "led": [385, 436, 443, 452, 643, 650, 651, 653, 659], "101": [385, 400, 402], "arrai": [385, 419, 424, 434, 436, 441, 650, 651, 652], "0x0c": [385, 387, 392], "consum": [385, 395, 408, 414, 439, 448], "hid_keyboard_report_consum": 385, "0xe2": [385, 421], "mute": 385, "0xe9": [385, 461, 470], "volum": [385, 415, 420, 432, 450, 454, 455, 456, 457], "0xea": [385, 387, 421], "0xcd": 385, "plai": [385, 414, 418, 420, 450, 454, 455], "paus": [385, 434, 645], "0xb7": 385, "0xb5": [385, 472], "mail": 385, "0x92": [385, 421], "0x23": [385, 387, 441], "home": 385, "0x0b": [385, 387], "0x2a": [385, 387, 402, 421, 441], "favorit": 385, "0x27": [385, 387], "refresh": [385, 387, 439, 441, 452], "0x0d": [385, 387], "0x0e": [385, 387, 402, 436, 472, 614], "0x24": [385, 472], "0x62": [385, 441, 461, 470], "nprf": 385, "boot": [385, 386, 460, 470, 663], "currentmap": 385, "usbhidkeyboard": 385, "initreport": 385, "reportid": 385, "keystat": 385, "keystategener": 385, "reports": 385, "hid_keyboard_keystate_size_gener": 385, "keypressedcount": 385, "keystateconsum": 385, "hid_keyboard_keystate_size_consum": 385, "setkeymap": 385, "updatereport": 385, "hidkeyboardreport": 385, "reportbuf": 385, "mediakeypress": 385, "k": [385, 441], "keyactiontyp": 385, "currentmodifi": 385, "releasekei": 385, "revert": 385, "modifierkeypress": 385, "standardkeypress": 385, "presskei": 385, "existingindex": 385, "firstspareslot": 385, "hid_keyboard_modifier_offset": 385, "spare": 385, "correct": [385, 387, 389, 394, 395, 397, 417, 439, 645], "keyup": 385, "ismodifi": 385, "ismedia": 385, "hid_keyboard_delay_default": 385, "keydown": 385, "mediakei": 385, "getmediakei": 385, "functionkei": 385, "getfunctionkei": 385, "mapcharact": 385, "realli": [385, 397, 450, 651], "matter": 385, "flush": [385, 438, 439, 460], "keystrok": 385, "allkeysup": 385, "iskeydown": 385, "implicit": 385, "hidmousedescriptor": 386, "mous": 386, "wheel": 386, "hidmousest": 386, "mousest": 386, "usbhidmous": 386, "usbhidmousebutton": 386, "xmovement": 386, "ymovement": 386, "movewheel": 386, "wheelmov": 386, "movement": 386, "0x11": [387, 402, 421, 436, 614], "0x13": [387, 402, 421], "0x2b": [387, 402, 441], "0x2c": [387, 402, 441], "0x2e": [387, 402, 421, 441], "0x36": [387, 402, 441], "0x37": [387, 396, 402, 441], "0x3a": [387, 402, 441], "0xb2": [387, 402], "0xb3": [387, 402, 421], "0xb4": [387, 402], "0xc1": [387, 402, 421], "0xc2": [387, 402, 421], "0xc3": [387, 402], "0xc4": [387, 402, 421], "0xc5": [387, 402], "0xda": [387, 402], "0xdb": [387, 402], "0xdc": [387, 402, 472], "0xe1": [387, 402], "ili9341_pwctr6": 387, "0xfc": [387, 402, 444], "clang": [387, 402], "github": [387, 431, 433, 449, 467, 644, 647, 648], "juj": 387, "fbcp": 387, "appear": [387, 407, 659], "sheet": 387, "2011": 387, "06": 387, "older": [387, 646], "02": 387, "2010": 387, "0xcb": 387, "reg_vd": 387, "6v": [387, 402], "vbc": 387, "0xcf": 387, "drv_ena": 387, "pceq": 387, "dc_ena": 387, "Not": [387, 428], "v0": 387, "03": [387, 455], "appar": 387, "0xe8": 387, "0x78": [387, 441], "0xed": 387, "vrh": 387, "60v": 387, "gvdd": 387, "vcom": 387, "grayscal": 387, "voltag": [387, 452, 659], "avcc": 387, "vcix2": 387, "vgh": [387, 402], "vcix7": 387, "vgl": 387, "vcix4": 387, "factor": 387, "step": [387, 419, 442, 454, 455, 457, 643, 645, 647], "circuit": 387, "consumpt": [387, 447], "smaller": 387, "0x3e": [387, 421, 441], "vcomh": 387, "250v": 387, "vcoml": 387, "500v": 387, "adjust": 387, "0x86": [387, 421], "vmh": 387, "58": [387, 400, 420], "vml": 387, "madctl": [387, 402], "0x48": [387, 441], "invers": [387, 402, 422], "colmod": 387, "pixel": [387, 424, 434, 436, 452, 651, 653, 659], "dpi": 387, "16bit": [387, 444], "dbi": 387, "accord": 387, "spec": 387, "frame": [387, 389, 402, 443, 444, 455], "wire": [387, 652], "comput": [387, 426, 450, 643, 645, 662], "formula": 387, "framer": 387, "615000": 387, "pow": 387, "diva": 387, "320": 387, "vfp": 387, "vbp": 387, "rtna": 387, "ratio": 387, "horizont": [387, 655, 658], "scanlin": 387, "vertic": [387, 655, 658], "front": [387, 397, 441], "porch": 387, "maxframer": 387, "118": [387, 400, 420], "63": [387, 394, 400, 420], "60fp": 387, "minframer": 387, "61": [387, 400, 420], "23": [387, 389, 400, 420], "seem": [387, 460], "hfp": 387, "bfp": 387, "color": [387, 402], "fosc": [387, 402], "ptg": 387, "pt": 387, "v63": 387, "0x82": [387, 421], "rev": 387, "white": [387, 452], "isc": 387, "lcd": 387, "0xf2": 387, "3g": 387, "gamma": 387, "curv": [387, 457], "g2": 387, "0x4e": [387, 421], "0xf1": 387, "0x14": [387, 421], "120": [387, 400, 402, 420], "adafruit": 387, "adafruit_ili9341": 387, "0xf7": 387, "sap": 387, "bt": 387, "vcm": 387, "control2": 387, "3gamma": 387, "dc": [387, 402, 449], "double16": [387, 402], "endc": [387, 402], "setdata": [387, 402], "sendcmdseq": [387, 402], "2016": [388, 394, 395, 432, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "british": [388, 394, 395, 432, 434, 435, 437, 438, 439, 440, 442, 444, 445, 446, 447, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "broadcast": [388, 394, 395, 432, 434, 435, 437, 438, 439, 440, 442, 444, 445, 446, 447, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "corpor": [388, 394, 395, 432, 434, 435, 437, 438, 439, 440, 442, 444, 445, 446, 447, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "arrang": [388, 394, 395, 432, 434, 435, 437, 438, 439, 440, 442, 444, 445, 446, 447, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "bbc": [388, 394, 395, 432, 434, 435, 437, 438, 439, 440, 442, 444, 445, 446, 447, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "nvmcontrol": [388, 430, 642], "pagenumb": 388, "scratch": [388, 439, 440], "logiv": [388, 448], "storag": [388, 407, 424, 430, 434, 441, 448, 460, 470, 643, 648, 661], "flashpageptr": 388, "getflashend": [388, 430, 441, 448, 451], "getpages": [388, 441, 448, 451], "getflashstart": [388, 430, 441, 448, 451], "datas": [388, 407], "keyvaluepair": [388, 434, 460, 470, 663], "pair": [388, 441, 460, 467, 470, 663], "keysiz": 388, "currentvalu": 388, "uptod": 388, "flashpoint": [388, 470], "stores": 388, "keyvaluestor": 388, "scratchptr": 388, "storedpair": 388, "scratchreset": 388, "flash": [388, 402, 428, 430, 434, 439, 440, 441, 442, 443, 448, 451, 460, 470, 643, 645, 649, 661], "strcmp": [388, 426, 439], "scratchkeyvaluestor": 388, "key_value_storage_mag": 388, "scratchkeyvaluepair": 388, "haven": [388, 439, 645], "key_value_storage_max_pair": 388, "eras": [388, 418, 430, 439, 440, 441, 448, 451, 470, 643], "key_value_storage_scratch_word_s": 388, "flashptr": 388, "clean": [388, 441], "scratchpoint": 388, "later": [388, 397, 418, 434, 439, 443, 448, 467, 645], "unless": [388, 441, 454, 460, 645], "patch": 388, "magic": [388, 402, 439, 442, 460], "wipe": 388, "scratchoffset": 388, "led_matrix_greyscale_bit_depth": 389, "70": [389, 400], "163": [389, 400, 420], "351": [389, 420], "726": 389, "1476": 389, "2976": 389, "matrixmap": [389, 437, 452, 661], "rotat": [389, 422, 425, 452, 655], "matrix_display_rotation_0": [389, 452], "greyscalebitmsk": 389, "timingcount": 389, "led_matrix_default_bright": 389, "display_mode_black_and_whit": [389, 452, 659], "stroberow": [389, 452], "led_matrix_evt_frame_timeout": 389, "ontimeoutev": 389, "display_mode_black_and_white_light_sens": [389, 452, 659], "renderwithlightsens": 389, "display_mode_greyscal": [389, 437, 452, 659], "rendergreyscal": 389, "renderfinish": 389, "rowpin": [389, 436, 452, 479], "setdigitalvalu": [389, 404, 405, 406, 432, 452, 467], "simpl": [389, 420, 443, 444, 460, 643, 645, 650, 651, 652, 659, 662, 663, 664], "bitpattern": 389, "column": [389, 424, 436, 441, 452, 479, 659], "matrix_display_rotation_90": [389, 452], "matrix_display_rotation_180": [389, 452], "matrix_display_rotation_270": [389, 452], "getbitmap": [389, 424, 452], "columnpin": [389, 436, 452, 479], "resolut": [389, 659], "53": [389, 400, 420], "pragma": [389, 440], "push": [389, 439, 440, 467], "wtype": 389, "led_matrix_maximum_bright": 389, "led_matrix_minimum_bright": 389, "frametimeout": 389, "pop": [389, 440], "around": [389, 419, 439, 441, 651], "23u": 389, "hit": [389, 645], "led_matrix_evt_light_sens": 389, "row_data": 389, "rowstart": 389, "col_data": 389, "invert": [389, 402, 427], "sink": [389, 408, 409, 410, 414, 415, 416, 418, 419, 436, 449, 450, 454, 659], "columnstart": 389, "col_mask": 389, "pattern": 389, "codal_display_greyscale_bit_depth": 389, "wait_u": 389, "rendertim": 389, "attach_u": 389, "setdisplaymod": [389, 452, 659], "displaymod": [389, 437, 452], "getdisplaymod": [389, 452], "rotateto": [389, 452, 659], "displayrot": [389, 452], "seten": 389, "enabledisplai": 389, "live": 389, "precalcul": [389, 450], "1024": [389, 390, 395, 415, 420, 434, 450, 454, 456, 470, 663], "lis3dh_ctrl_reg4": 390, "lis3dh_ctrl_reg1": 390, "0x70": [390, 391, 407, 441], "0x50": [390, 391], "40000": [390, 391, 436], "1000000": [390, 391, 456], "precis": 390, "xyz": 390, "lis3dh_ctrl_reg3": 390, "latch": [390, 396], "lis3dh_ctrl_reg5": 390, "whoami": [390, 394, 395, 396], "lis3dh_whoami": 390, "multibyt": 390, "why": 390, "who": 390, "lis3dh_out_x_l": 390, "acknowledg": 390, "lis3dh_int1_src": 390, "use_accel_lsb": [390, 395], "millig": [390, 391, 395], "approx": [390, 391, 395, 443], "sleepmod": [390, 395, 396, 402], "ctrl_reg4": 391, "617": [391, 420], "744": [391, 420], "support": [391, 397, 407, 427, 440, 444, 447, 451, 458, 460, 471, 645, 659, 662], "lsm303_ctrl_reg1_a": 391, "lsm303_a_status_en": 391, "lsm303": [391, 392, 431, 655, 658], "drdy1": 391, "lsm303_ctrl_reg3_a": 391, "self": [391, 407], "lsm303_ctrl_reg4_a": 391, "awaitsampl": [391, 392], "applicaiton": [391, 392], "functionl": [391, 392], "demand": [391, 392, 411, 412, 432, 454, 653], "accur": [391, 392, 447, 657, 658], "int16_t": [391, 392, 394, 396, 411, 412, 415, 417, 424, 426, 434], "lsm303_status_reg_a": 391, "lsm303_a_status_data_readi": 391, "lsm303_out_x_l_a": 391, "lsm303_a_status_sleep": 391, "lsm303_who_am_i_a": 391, "lsm303_a_whoami_v": 391, "lsm303_cfg_reg_a_m": 392, "100": [392, 394, 400, 402, 405, 420, 432, 434, 436, 441, 442, 444, 448, 449, 455, 460, 659], "50000": [392, 394], "temperatur": [392, 447, 664], "lsm303_m_status_en": 392, "avoid": [392, 397, 424, 439, 441, 442, 444, 452, 454, 643, 658], "lsm303_cfg_reg_c_m": 392, "lsm303_status_reg_m": 392, "lsm303_m_status_data_readi": 392, "lsm303_outx_l_reg_m": 392, "lsm303_m_normalize_sampl": 392, "lsm303_m_status_sleep": 392, "lsm303_who_am_i_m": 392, "lsm303_m_whoami_v": 392, "inputfloor": 393, "inputceil": 393, "outputfloor": 393, "outputceil": 393, "conversionfactor": 393, "sensorread": [393, 399], "analog_sensor_initialis": [393, 399], "_acceleromet": [394, 434, 458], "10hz": 394, "mag_whoami": 394, "mag_out_x_msb": 394, "mag3110_normalize_sampl": 394, "higher": [394, 411, 419, 444, 650], "mag3110samplerateconfig": 394, "actualsampler": [394, 395], "offlin": 394, "mag_ctrl_reg1": 394, "standbi": [394, 395], "commun": [394, 444, 643, 648, 652, 662], "mag_sysmod": 394, "good": [394, 418, 643], "carri": [394, 643], "mag3110_sample_r": 394, "sample_period": [394, 395], "automat": [394, 397, 444, 645, 650, 651, 652, 653, 658, 659, 661], "mag_ctrl_reg2": 394, "onlin": [394, 395], "12500": 394, "25000": 394, "40": [394, 400, 402, 420, 434, 444, 449, 455, 460], "200000": 394, "400000": 394, "800000": 394, "25": [394, 400, 420, 434, 436, 659], "1600000": 394, "3200000": 394, "0xd0": [394, 421], "6400000": 394, "0xf0": [394, 421, 444], "12800000": 394, "08": 394, "mma8653samplerangeconfig": 395, "actualsamplerang": 395, "mma8653samplerateconfig": 395, "mma8653_sample_r": 395, "mma8653_sample_rang": 395, "sample_rang": 395, "mma8653_ctrl_reg1": 395, "precisiosn": 395, "184": [395, 400, 420], "ua": 395, "mma8653_ctrl_reg2": 395, "mma8653_ctrl_reg4": 395, "data_readi": 395, "mma8653_ctrl_reg5": 395, "mma8653_xyz_data_cfg": 395, "10bit": 395, "mma8653_whoami": 395, "lo": [395, 431, 443, 450, 455, 456], "mma8653_out_x_msb": 395, "1250": [395, 420], "640000": 395, "af": 396, "20m": [396, 443], "0x6b": [396, 441], "pwr_mgmt_1": 396, "temp_di": 396, "clksel": 396, "pll": 396, "gyro": 396, "0x1a": 396, "ext_sync_set": 396, "dlpf_cfg": 396, "acc": 396, "bandwidth": 396, "260hz": 396, "256hz": 396, "0x1b": [396, 421, 436, 614], "gyro_config": 396, "fs_sel": 396, "deg": 396, "sec": 396, "0x68": [396, 441], "mpu6050_whoami": 396, "0x3f": [396, 402, 441], "i2cdata": 396, "0x3b": [396, 421, 441], "3653": 396, "device_notify_user_event_bas": 397, "evt_queue_head": 397, "evt_queue_tail": 397, "queuelength": 397, "behav": [397, 659], "within": [397, 418, 420, 430, 439, 440, 449, 643, 645], "cours": [397, 651], "message_bus_listener_busi": 397, "message_bus_listener_drop_if_busi": 397, "message_bus_listener_queue_if_busi": 397, "convent": 397, "bad": [397, 449], "especi": [397, 650], "arm": [397, 440, 447, 451, 643, 645, 647], "compil": [397, 440, 447, 451, 460, 643, 645, 647, 653], "go": [397, 415, 418, 419, 424, 432, 439, 441, 443, 447, 455, 468, 643, 659], "plain": [397, 460], "item": 397, "preven": 397, "onto": [397, 434, 439, 441, 460, 651], "queueevent": 397, "processingcomplet": 397, "prev": [397, 439], "regsit": 397, "urgent": 397, "These": [397, 405, 407, 429, 467, 643, 645, 647, 648, 657, 659], "pre": [397, 444, 460, 643], "empt": 397, "servic": [397, 420, 443, 458, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472], "No": [397, 402, 407, 436, 439, 441, 460], "nothg": 397, "strang": 397, "lockup": 397, "await": [397, 443], "arriv": 397, "dequeueev": 397, "deletemarkedlisten": 397, "message_bus_listener_delet": 397, "help": [397, 424], "minimis": [397, 406], "therefor": [397, 643, 645, 658, 659, 663, 664], "footprint": 397, "hidden": 397, "kid": [397, 460], "queu": [397, 443, 444], "causal": [397, 444, 445], "fact": [397, 408, 643, 650], "listenerurg": 397, "under": [397, 404, 440, 447, 451, 643, 648, 658], "threading_mod": 397, "metadata": [397, 430, 439, 441], "hander": [397, 407], "regisit": 397, "trust": [397, 444], "needlessli": 397, "cool": 397, "huh": 397, "message_bus_listener_nonblock": 397, "println": 397, "ucsr0a": 397, "_bv": 397, "txc0": 397, "newlisten": 397, "methodcallback": 397, "treat": [397, 441, 448, 467, 659], "idempot": 397, "captur": [397, 443, 452], "silent": [397, 424, 450, 647], "perfect": 397, "resurrect": 397, "wai": [397, 419, 460, 467, 643, 645, 650, 651, 652, 653, 659, 662, 663], "begin": [397, 406, 424, 441, 655], "device_id_message_bus_listen": 397, "chain": [397, 439], "held": [397, 443], "stictli": 397, "second": [397, 424, 439, 441, 454, 460], "rare": 397, "occur": [397, 443, 643, 647, 655], "notif": [397, 467, 470, 662], "listener_deletion_callback": 397, "elementat": [397, 466], "button1": 398, "button2": 398, "device_button_simple_ev": 398, "onbuttonev": 398, "othersubbutton": 398, "issubbuttonpress": 398, "multi_button_state_1": 398, "multi_button_state_2": 398, "issubbuttonheld": 398, "multi_button_hold_triggered_1": 398, "multi_button_hold_triggered_2": 398, "issubbuttonsupress": 398, "multi_button_supressed_1": 398, "multi_button_supressed_2": 398, "setbuttonst": 398, "setholdst": 398, "setsupressedst": 398, "otherbutton": 398, "nominalvalu": 399, "nominalread": 399, "beta": [399, 413], "seriesresistor": 399, "zerooffset": [399, 417], "251": [400, 420], "175": [400, 420], "119": 400, "215": 400, "81": [400, 420], "79": [400, 420], "191": [400, 420], "103": 400, "49": [400, 420], "181": [400, 467], "143": [400, 420], "186": 400, "157": 400, "232": [400, 420], "55": [400, 659], "60": [400, 420, 449, 455], "152": [400, 420], "17": [400, 420, 455, 470], "237": [400, 420], "174": 400, "144": 400, "220": 400, "57": [400, 420], "223": 400, "59": 400, "140": 400, "111": 400, "166": 400, "203": 400, "196": [400, 420], "134": [400, 420], "243": [400, 420], "124": [400, 420], "95": [400, 420, 457], "222": [400, 420], "179": [400, 420], "197": 400, "65": [400, 432], "48": [400, 436, 449, 455], "36": [400, 420, 455], "107": 400, "46": [400, 420], "233": 400, "130": [400, 420], "165": [400, 420], "30": [400, 420, 436, 455, 460, 617], "123": 400, "161": [400, 420], "209": [400, 420], "97": 400, "91": [400, 420], "219": [400, 420], "210": 400, "109": 400, "250": [400, 420], "22": [400, 420, 436, 455, 612], "138": [400, 420], "29": [400, 420], "108": [400, 420], "244": 400, "67": 400, "207": 400, "178": 400, "204": [400, 420], "74": [400, 420], "98": [400, 420], "126": [400, 420, 439], "249": 400, "167": [400, 420], "116": [400, 420], "77": [400, 420], "193": 400, "200": [400, 434, 460], "121": 400, "113": 400, "71": [400, 420], "182": [400, 420], "94": 400, "226": [400, 420], "227": [400, 420], "199": [400, 420], "75": [400, 432], "27": [400, 420], "41": [400, 420], "245": [400, 420], "230": 400, "43": [400, 420], "225": 400, "177": [400, 420], "26": [400, 420, 455], "155": [400, 434], "212": 400, "142": 400, "218": 400, "115": 400, "241": 400, "73": 400, "88": 400, "105": 400, "114": [400, 420], "62": 400, "192": 400, "201": [400, 420], "145": [400, 420], "214": [400, 420], "168": 400, "158": [400, 420], "221": 400, "148": 400, "154": [400, 420], "122": [400, 420], "84": [400, 420], "82": [400, 420], "44": [400, 449, 455], "139": 400, "228": 400, "236": 400, "205": 400, "242": 400, "217": 400, "187": [400, 420], "146": 400, "159": 400, "86": [400, 420], "239": 400, "195": 400, "106": [400, 420], "198": 400, "112": [400, 420], "172": [400, 420], "87": [400, 420], "173": 400, "117": 400, "176": 400, "229": [400, 420], "247": 400, "253": [400, 420], "137": 400, "185": 400, "99": 400, "164": 400, "102": [400, 420], "147": [400, 420], "45": [400, 420], "66": [400, 420, 659], "52": [400, 455], "141": [400, 420], "211": [400, 420], "194": [400, 420], "206": [400, 420], "246": 400, "238": 400, "56": [400, 420, 455], "110": [400, 420], "78": 400, "248": [400, 420, 470], "240": [400, 420], "189": [400, 420], "93": [400, 420], "92": 400, "51": [400, 420], "183": 400, "19": [400, 420, 436, 470, 612], "171": 400, "72": [400, 420, 455], "104": [400, 420], "69": [400, 420, 449], "252": 400, "83": 400, "76": [400, 420], "135": 400, "85": [400, 432, 653], "54": [400, 420], "202": 400, "125": 400, "188": 400, "213": 400, "96": [400, 420], "235": [400, 420], "136": [400, 420], "208": 400, "162": 400, "129": [400, 449], "190": 400, "156": [400, 420], "38": [400, 420], "47": [400, 420], "254": 400, "24": [400, 402, 407, 420, 436, 448, 470, 612], "216": [400, 420], "131": 400, "89": [400, 420], "133": 400, "37": [400, 420, 436, 617], "153": 400, "149": [400, 420], "170": [400, 420], "68": [400, 420, 455], "169": 400, "234": 400, "151": 400, "ref": 400, "en": [400, 655, 658, 662], "wikipedia": 400, "org": [400, 407, 460, 465, 653, 655, 658, 662], "wiki": 400, "pearson_hash": 400, "hash": [400, 442, 470], "hashn": 400, "bytecount": 400, "hash8": 400, "hash16": 400, "hash32": 400, "2020": [401, 414, 441, 448, 451, 457, 474, 475, 476], "timeoutgeneratorstart": 401, "lastperiod": 401, "lastedg": 401, "awaitpuls": 401, "timeout": [401, 443, 448, 642], "suppli": [401, 419, 422, 440, 663], "puls": [401, 449], "device_pin_event_on_puls": 401, "getpolar": [401, 443], "device_pin_evt_pulse_hi": 401, "device_pin_evt_pulse_lo": 401, "onpuls": 401, "device_id_pulse_in": 401, "device_evt_pulse_in_timeout": 401, "ontimeout": 401, "As": [401, 408, 422, 644, 650, 651, 655, 659, 661], "device_pin_event_non": 401, "cond": [402, 404], "909": [402, 404], "insleepmod": 402, "500": [402, 420, 460, 478, 659], "0x2d": [402, 441], "1x2": 402, "2c": 402, "2d": [402, 424], "partial": [402, 439, 448, 454, 460, 470], "0xa2": 402, "0x84": [402, 421], "vgh25": 402, "4c": 402, "vgsel": 402, "avdd": 402, "opamp": 402, "boost": 402, "bclk": 402, "medium": [402, 441], "0xee": 402, "unicorn": 402, "dust": 402, "sparkl": 402, "rainbow": 402, "0x1d": [402, 461, 470], "screen": [402, 434, 659], "nordic": [402, 440, 444, 447, 451, 472], "nrf52_seri": 402, "databuf": [402, 478], "srcptr": [402, 441, 478], "palettet": [402, 478], "srcleft": [402, 478], "inprogress": [402, 478], "exppalett": [402, 478], "sendbyt": 402, "sendword": 402, "numbyt": 402, "numword": 402, "tbl": 402, "sendcolorsstep": 402, "palett": [402, 645], "startramwr": 402, "pxt": [402, 442], "startsend": [402, 403], "cmd": [402, 404, 407, 448], "cmdbuf": [402, 404], "sendcmd": 402, "beginc": 402, "senddon": 402, "outsid": [402, 407], "waitforsenddon": 402, "sendindexedimag": 402, "0x1011": 402, "0x110100": 402, "care": [402, 456, 643], "hint": 402, "setcommand": [402, 404], "setaddrwindow": 402, "x2": 402, "y2": 402, "cmd0": 402, "cmd1": 402, "frmctr1": 402, "0xffffff": 402, "handlerarg": 403, "ssel": 404, "numpag": 404, "_numpag": 404, "sendcommand": 404, "resp": [404, 407], "respsiz": 404, "writeen": 404, "waitbusi": 404, "waitm": 404, "readbyt": [404, 425], "spiflash_page_s": 404, "writebyt": [404, 425], "goto": [404, 407], "1m": 404, "erasecor": 404, "erasesmallrow": 404, "spiflash_small_row_s": 404, "erasebigrow": 404, "spiflash_big_row_s": 404, "erasechip": 404, "active_low": [405, 474], "addtouchbutton": [405, 406], "calibraiton": 405, "touch_button_calibr": 405, "phase": [405, 449, 645], "progress": [405, 443, 454, 457], "touch_button_calibration_period": 405, "setthreshold": 405, "getthreshold": 405, "getpinvalu": [405, 406], "setpinvalu": 405, "setvalu": [405, 406], "estim": [405, 434, 652], "highest": 405, "touch_button_decay_averag": 405, "touch_button_sensit": 405, "touch_button_calibration_linear_offset": 405, "otherewis": 405, "removetouchbutton": [405, 406], "drivepin": 406, "numberofbutton": 406, "drive": [406, 436, 441, 452, 643, 655, 658, 659, 664], "drain": 406, "residu": 406, "touch_sensor_max_button": 406, "touch_sensor_update_need": 406, "touch_sensor_sample_period": 406, "duplic": [406, 418, 472], "replac": [406, 430, 439, 444, 643], "remain": [406, 443, 444, 470, 650], "activesensor": 406, "devicepin": 406, "drainpin": 406, "touch_sense_sample_max": 406, "lufa": 407, "dean": 407, "camera": 407, "fourwalledcubicl": 407, "lib": [407, 424], "fee": 407, "disclaim": 407, "advertis": [407, 460, 472], "public": [407, 478, 479], "pertain": 407, "written": [407, 441, 470, 643], "prior": 407, "regard": 407, "indirect": 407, "consequenti": 407, "whatsoev": 407, "loss": 407, "profit": 407, "neglig": 407, "tortiou": 407, "device_msc_evt_start_read": 407, "device_msc_evt_start_writ": 407, "usbmassstorageclass": [407, 642], "cpu_to_le32": 407, "le32_to_cpu": 407, "scsi_set_sens": 407, "acod": 407, "aqual": 407, "sensedata": 407, "sensekei": 407, "additionalsensecod": 407, "additionalsensequalifi": 407, "cpu_to_be32": 407, "0xff00": 407, "0xff0000": 407, "read16": 407, "read32": 407, "mscstate": 407, "ms_commandblockwrapper_t": 407, "commandblock": 407, "ms_commandstatuswrapper_t": 407, "commandstatu": 407, "scsi_request_sense_response_t": 407, "supplement": 407, "ditto": 407, "mass": [407, 434], "scsi": 407, "bulk": [407, 439], "transport": 407, "usb_ep_type_bulk": 407, "ms_req_massstoragereset": 407, "msc": 407, "ms_req_getmaxlun": 407, "lun": 407, "totallun": 407, "signatur": [407, 439], "ms_cbw_signatur": 407, "scsicommandlength": 407, "cmdlen": 407, "handescsicommand": 407, "responsecod": 407, "additionallength": 407, "sendrespons": 407, "scsi_sense_key_good": 407, "scsi_asense_no_additional_inform": 407, "scsi_asenseq_no_qualifi": 407, "sens": [407, 452, 657, 659], "ms_scsi_command_pass": 407, "ms_scsi_command_fail": 407, "ms_csw_signatur": 407, "tag": 407, "datatransferresidu": 407, "datatransferlength": 407, "ms_command_dir_data_in": 407, "writepad": 407, "scsicommanddata": 407, "scsi_cmd_inquiri": 407, "cmdinquiri": 407, "scsi_cmd_request_sens": 407, "cmdrequest_sens": 407, "scsi_cmd_read_capacity_10": 407, "cmdread_capacity_10": 407, "scsi_cmd_send_diagnost": 407, "cmdsend_diagnost": 407, "scsi_cmd_write_10": 407, "cmdreadwrite_10": 407, "scsi_cmd_read_10": 407, "scsi_cmd_mode_sense_6": 407, "cmdmodesens": 407, "scsi_cmd_mode_sense_10": 407, "scsi_cmd_read_format_capac": 407, "cmdreadformatcapac": 407, "scsi_cmd_start_stop_unit": 407, "scsi_cmd_test_unit_readi": 407, "scsi_cmd_prevent_allow_medium_remov": 407, "scsi_cmd_verify_10": 407, "succe": 407, "scsi_sense_key_illegal_request": 407, "scsi_asense_invalid_command": 407, "usb_ep_flag_no_auto_zlp": 407, "zlp": 407, "allocs": 407, "scsi_inquiry_response_t": 407, "inquirydata": 407, "responsedataformat": 407, "vendorid": 407, "productid": 407, "dataflash": 407, "disk": [407, 643, 645], "revisionid": 407, "inquiri": 407, "unsupport": [407, 450], "scsi_asense_invalid_field_in_cdb": 407, "ic": 407, "storageok": 407, "scsi_sense_key_hardware_error": 407, "isreadonli": [407, 408, 424, 428], "scsi_sense_key_data_protect": 407, "scsi_asense_write_protect": 407, "blockcount": [407, 448], "scsi_asense_logical_block_address_out_of_rang": 407, "device_id_msc": 407, "readhandl": 407, "writehandl": 407, "is10": 407, "ro": [407, 439], "cap": 407, "media": 407, "currlun": 407, "datasourc": [408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 450, 642], "datasink": [408, 409, 410, 414, 415, 416, 418, 419, 449, 450, 454, 642], "getformat": [408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 449, 450, 454, 456], "datastream_format_unknown": [408, 412, 417, 450], "setformat": [408, 409, 410, 414, 416, 417, 418, 419, 450], "getsampler": [408, 409, 417, 419, 420, 450, 454], "datastream_sample_rate_unknown": [408, 419], "requestsampler": [408, 409, 417, 419], "sampler": [408, 409, 417, 418, 419, 420, 450, 454], "_have_": 408, "honour": 408, "pullrequest": [408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 449, 450, 454, 456], "upstream": [408, 409, 410, 411, 412, 416, 417, 418, 419, 450], "buffercount": [408, 410, 418], "bufferlength": [408, 410, 418], "preferredbuffers": 408, "pullrequesteventcod": 408, "spaceavailableeventcod": 408, "isblock": 408, "writer": 408, "downstream": [408, 409, 410, 414, 415, 416, 417, 418, 419, 450, 454], "getbyt": [408, 409, 413, 425, 426, 445, 453, 456, 652], "setbyt": [408, 425, 453], "getpreferredbuffers": 408, "setpreferredbuffers": 408, "setblock": 408, "ondeferredpullrequest": 408, "simplist": 408, "fifo": [408, 410], "cost": [408, 659], "pretti": 408, "manag": [408, 424, 443, 460, 470, 643, 650, 651, 652], "canpul": [408, 410, 418, 420], "datastream_maximum_buff": 408, "multipl": [408, 430, 439, 444, 467, 657, 662], "yield": 408, "sever": [408, 659], "behind": 408, "becom": [408, 643], "deepcopi": [409, 413], "applyeffect": [409, 413], "setdeepcopi": 409, "inputbuff": [409, 413, 417], "outputbuff": [409, 413, 456], "allowinput": 410, "allowoutput": 410, "fifo_maximum_buff": 410, "isful": [410, 418, 441], "dumpstat": [410, 418], "tapedeck": [410, 418], "db": [410, 412], "inbuff": 410, "setinputen": 410, "setoutputen": 410, "awar": 410, "connectimmedi": [411, 412], "windowposit": 411, "windows": [411, 412], "level_detector_default_window_s": 411, "level_detector_initialis": 411, "datastream_format_8bit_sign": [411, 432, 450], "multipli": [411, 412, 420, 427, 434, 457], "upscal": 411, "roughli": [411, 432], "level_detector_high_threshold_pass": 411, "level_threshold_high": [411, 412], "level_detector_low_threshold_pass": 411, "level_threshold_low": [411, 412], "ld": [411, 436, 460], "setwindows": [411, 412], "gain": [412, 417, 432, 449, 450, 454], "minvalu": 412, "level_detector_spl_default_window_s": 412, "level_detector_spl_initialis": 412, "level_detector_spl_db": 412, "datastream_format_16bit_sign": [412, 450], "datastream_format_32bit_sign": [412, 417], "65536": 412, "pref": 412, "00002": 412, "maxval": 412, "minval": 412, "32766": 412, "int32_t": [412, 417, 447, 449], "readsampl": [412, 413, 417, 419, 450], "spl": [412, 432], "conv": 412, "log10": [412, 457], "isfinit": 412, "level_detector_spl_high_threshold_pass": 412, "level_detector_spl_low_threshold_pass": 412, "spltounit": 412, "detector": [412, 432], "unittospl": 412, "setgain": [412, 417, 432], "setunit": 412, "level_detector_spl_8bit": 412, "level_detector_spl_8bit_000_point": 412, "level_detector_spl_8bit_convers": 412, "setbeta": 413, "bytespersampl": [413, 419, 450], "datastream_format_bytes_per_sampl": [413, 417, 418, 419, 450], "samplecount": 413, "lpf_valu": 413, "lpf_beta": 413, "writesampl": [413, 417, 419, 450], "datastream_format_8bit_unsign": [414, 450, 456], "setbuffers": [414, 420, 454], "memory_source_default_max_buff": 414, "outputformat": [414, 417, 450], "getbuffers": 414, "outputbuffers": 414, "amount": [414, 441], "bytestosend": 414, "reload": 414, "playback": [414, 420], "blockingbehaviour": 414, "blockingplayout": 414, "playasync": [414, 455], "_plai": 414, "mixerchannel": [415, 450], "addchannel": [415, 432, 450, 456], "issign": [415, 420], "ch": [415, 450, 452], "vol": 415, "newsum": 415, "writebuff": [415, 425, 439], "eventhandl": 416, "nop": [416, 419, 443, 448], "setdatahandl": 416, "trigger_pul": 416, "trigger_request": 416, "optims": 417, "samplereadfn": 417, "samplewritefn": 417, "stabilis": 417, "setnorm": 417, "setormask": [417, 432, 450, 454], "zerooffsetvalid": 417, "outputen": 417, "encpasul": 417, "insid": [417, 645, 652], "inputformat": [417, 450], "bytespersamplein": 417, "bytespersampleout": [417, 450], "zo": 417, "previous": [417, 434, 439, 456], "deterin": [417, 434], "acquir": 417, "doutput": 417, "ormask": [417, 450, 454], "calculatedzerooffset": 417, "truncat": [417, 420, 425, 443, 448], "getnorm": 417, "getgain": 417, "lastbuff": [418, 419], "readwritehead": 418, "rec_state_plai": 418, "grab": [418, 653], "ping": 418, "durat": [418, 449, 454, 455, 460], "rec_max_buff": 418, "rwhead": 418, "rec_state_record": 418, "probabl": [418, 449, 659], "retain": [418, 450], "safeti": 418, "edit": 418, "rec_state_stop": 418, "kickstart": 418, "snap": [418, 653], "isplai": [418, 432], "isrecord": 418, "isstop": [418, 449], "2021": [419, 430], "splitterchannel": 419, "pullattempt": 419, "shortcut": 419, "getbuff": 419, "extra": [419, 643, 653, 659], "inrat": 419, "indata": 419, "infmt": 419, "insampl": 419, "outdata": 419, "inptr": 419, "outptr": 419, "numberactivechannel": [419, 432], "splitter_channel_connect": [419, 432], "splitter_channel_disconnect": [419, 432], "own": [419, 643, 655, 659], "alter": [419, 643], "numberchannel": 419, "config_max_channel": 419, "outputchannel": 419, "exist": [419, 439, 441, 470, 643, 645, 658], "unfortun": [419, 645], "pipelin": [419, 432, 454, 456, 643], "createchannel": [419, 432], "splitter": [419, 432], "serv": [419, 661], "splitter_activate_channel": 419, "adc": [419, 432, 661], "destroychannel": 419, "splitter_deactivate_channel": 419, "refus": 419, "getchannel": [419, 432], "iso": 420, "2003": 420, "amplitud": 420, "loudnesscompens": 420, "5621": 420, "315": 420, "4063": 420, "400": [420, 460], "3012": 420, "2412": 420, "630": 420, "1981": 420, "800": [420, 460], "1709": 420, "1699": 420, "2093": 420, "1600": 420, "2266": 420, "1553": 420, "1136": 420, "3150": 420, "4000": 420, "1154": 420, "6300": 420, "3321": 420, "8000": 420, "6604": 420, "259": 420, "262": 420, "264": 420, "267": 420, "270": 420, "273": 420, "275": 420, "278": 420, "281": 420, "284": 420, "287": 420, "289": 420, "292": 420, "295": 420, "298": 420, "301": 420, "304": 420, "307": 420, "309": 420, "312": 420, "318": 420, "321": 420, "324": 420, "327": 420, "330": 420, "333": 420, "336": 420, "339": 420, "342": 420, "345": 420, "348": 420, "354": 420, "357": 420, "363": 420, "366": 420, "369": 420, "372": 420, "375": 420, "378": 420, "381": 420, "384": 420, "387": 420, "390": 420, "393": 420, "396": 420, "399": 420, "402": 420, "405": 420, "408": 420, "411": 420, "414": 420, "417": 420, "420": 420, "424": 420, "427": 420, "430": 420, "433": 420, "436": 420, "439": 420, "442": 420, "445": 420, "448": 420, "452": 420, "455": 420, "458": 420, "461": 420, "464": 420, "467": 420, "470": 420, "473": 420, "477": 420, "480": 420, "483": 420, "486": 420, "489": 420, "492": 420, "495": 420, "498": 420, "502": 420, "505": 420, "508": 420, "514": 420, "517": 420, "520": 420, "524": 420, "527": 420, "530": 420, "533": 420, "536": 420, "539": 420, "542": 420, "545": 420, "549": 420, "552": 420, "555": 420, "558": 420, "561": 420, "564": 420, "567": 420, "570": 420, "574": 420, "577": 420, "580": 420, "583": 420, "586": 420, "589": 420, "592": 420, "595": 420, "598": 420, "602": 420, "605": 420, "608": 420, "611": 420, "614": 420, "620": 420, "623": 420, "626": 420, "629": 420, "632": 420, "635": 420, "638": 420, "641": 420, "644": 420, "647": 420, "650": 420, "653": 420, "656": 420, "659": 420, "662": 420, "665": 420, "668": 420, "671": 420, "674": 420, "677": 420, "680": [420, 434], "683": 420, "686": 420, "689": 420, "692": 420, "695": 420, "698": 420, "701": 420, "704": 420, "707": 420, "710": 420, "713": 420, "715": 420, "718": 420, "721": 420, "724": 420, "727": 420, "730": 420, "733": 420, "735": 420, "738": 420, "741": 420, "747": 420, "749": 420, "752": 420, "755": 420, "758": 420, "760": 420, "763": 420, "766": 420, "769": 420, "771": 420, "774": 420, "777": 420, "779": 420, "782": 420, "785": 420, "787": 420, "790": 420, "793": 420, "795": 420, "798": 420, "803": 420, "806": 420, "808": 420, "811": 420, "813": 420, "816": 420, "818": 420, "821": 420, "823": 420, "826": 420, "828": 420, "831": 420, "833": 420, "835": 420, "838": 420, "840": 420, "843": 420, "845": 420, "847": 420, "850": 420, "852": 420, "855": 420, "857": 420, "859": 420, "861": 420, "864": 420, "866": 420, "868": 420, "870": 420, "873": 420, "875": 420, "877": 420, "879": 420, "881": 420, "884": 420, "886": 420, "888": 420, "890": 420, "892": 420, "894": 420, "896": 420, "898": 420, "900": 420, "902": 420, "904": 420, "906": 420, "908": 420, "910": 420, "912": 420, "914": 420, "916": 420, "918": 420, "920": 420, "922": 420, "924": 420, "926": 420, "927": 420, "929": 420, "931": 420, "933": 420, "935": 420, "936": 420, "938": 420, "940": 420, "941": 420, "943": 420, "945": 420, "946": 420, "948": 420, "950": 420, "951": 420, "953": 420, "954": 420, "956": 420, "958": 420, "959": 420, "961": 420, "962": 420, "964": 420, "965": 420, "966": 420, "968": 420, "969": 420, "971": 420, "972": 420, "973": 420, "975": 420, "976": 420, "977": 420, "979": 420, "980": 420, "981": 420, "982": 420, "984": 420, "985": 420, "986": 420, "987": 420, "988": 420, "989": 420, "990": 420, "992": 420, "993": 420, "994": 420, "995": 420, "996": 420, "997": 420, "998": 420, "999": 420, "1001": 420, "1002": 420, "1003": 420, "1004": 420, "1005": 420, "1006": 420, "1007": 420, "1008": 420, "1009": 420, "1010": 420, "1011": 420, "1012": 420, "1013": 420, "1014": 420, "1015": 420, "1016": 420, "1017": 420, "1018": 420, "1019": 420, "1020": 420, "1021": 420, "1022": 420, "tone_width": 420, "sawtoothton": [420, 455], "triangleton": [420, 455], "noiseton": [420, 455], "determinist": 420, "semi": 420, "mult": 420, "7919": 420, "squarewaveton": [420, 455, 456], "squarewavetoneext": 420, "duti": [420, 456], "customton": 420, "helper": 420, "funtion": 420, "givien": 420, "sampleperiodn": 420, "1000000000": [420, 441], "setvolum": [420, 432, 450], "synchron": [420, 440, 451, 655, 658, 661, 662, 664], "setton": 420, "envelopestart": 420, "envelopeend": 420, "intend": [420, 643, 644], "newperiodn": 420, "tone": [420, 454, 455], "background": [420, 447, 643, 647, 655, 658, 661, 664], "playout": [420, 454], "creation": [420, 454, 651, 652], "playouttimeu": 420, "periodn": 420, "tonedelta": 420, "tonesigma": 420, "fraction": [420, 441], "toner": 420, "playoutsampl": 420, "determinesamplecount": [420, 454], "localamplitud": 420, "localamplitudedelta": 420, "toneprint": [420, 454, 455, 456], "toneprintarg": 420, "synthesizer_sigma_reset": 420, "There": [420, 467, 650, 651, 652, 655, 658, 662], "asynchron": [420, 440, 443, 451, 460, 661], "setsampler": [420, 450, 454], "synthesizergetsampl": 420, "475": 421, "0x0": [421, 436, 614], "0x8": 421, "0xa": 421, "0x4a": 421, "0x5f": [421, 441], "0xe": 421, "0xd9": 421, "0xd3": 421, "0x6e": [421, 441, 472], "0x44": [421, 441], "0x33": [421, 441], "0xc": 421, "0x4d": [421, 441], "0x4": 421, "0x8e": 421, "0x1": 421, "0x52": [421, 441], "0x8c": 421, "0x1e": 421, "0x6": 421, "0xca": [421, 472], "0x2": 421, "0xd1": 421, "0x6c": [421, 441], "0x5e": [421, 441], "0x5c": [421, 441], "0x71": [421, 441], "0x42": [421, 441], "0x54": [421, 441], "0x98": 421, "0x51": 421, "0xe4": 421, "0xc8": 421, "0x4f": [421, 441], "0x7": 421, "0x83": 421, "defaultfont": [421, 436], "systemfont": 421, "bitmap_font_ascii_end": 421, "asciiend": [421, 424], "setsystemfont": 421, "getsystemfont": [421, 424], "bitmap_font_ascii_start": [421, 424, 436], "upsidedown": 422, "coordinate_space_rotated_90": 422, "coordinate_space_rotated_180": 422, "coordinate_space_rotated_270": 422, "east_north_up": 422, "eventlaunchmod": 423, "create_onli": 423, "ref_tag_imag": 424, "imagedata": [424, 460, 651], "emptydata": [424, 425, 426], "ref_counted_def_empti": [424, 425, 426], "emptyimag": 424, "init_empti": 424, "incr": [424, 425, 426, 428, 453], "parsebuf": 424, "parsereadptr": 424, "parsewriteptr": 424, "bitmapptr": 424, "geometri": [424, 439, 448], "principl": 424, "unecessari": [424, 439, 441, 454], "load": [424, 430, 434, 439, 441, 448], "strtok": 424, "isdigit": [424, 467], "atoi": 424, "leakdata": [424, 425, 426], "bitmap": [424, 651, 659], "decr": [424, 425, 426, 428, 453], "you": [424, 643, 645, 647, 648, 650, 651, 652, 653, 655, 658, 659, 663, 664], "ref_counted_init": [424, 425, 426], "repres": [424, 439, 458, 464, 469, 471, 472, 650, 651, 659, 664], "jag": 424, "experiment": 424, "show": [424, 434, 643, 661], "had": [424, 645], "fragment": 424, "printimag": 424, "getsiz": 424, "getpixelvalu": [424, 468], "pout": 424, "pixelstocopyx": 424, "pixelstocopyi": 424, "calcualt": 424, "sane": [424, 426], "pxwritten": 424, "overlap": 424, "clearli": 424, "scope": 424, "earli": [424, 443], "primit": 424, "transpareci": 424, "instead": [424, 441, 643, 650, 653, 659], "ord": 424, "blank": [424, 436, 442, 651], "fill": [424, 425, 434, 441, 445, 448, 454, 456], "rightmost": 424, "shiftright": 424, "leftmost": 424, "memmov": [424, 425], "shiftup": 424, "shiftdown": 424, "tostr": 424, "comman": 424, "stringsiz": 424, "parsebuff": 424, "parseindex": 424, "widthcount": 424, "startx": 424, "starti": 424, "cropwidth": 424, "cropheight": 424, "newwidth": 424, "newheight": 424, "copypoint": 424, "pastepoint": 424, "clone": 424, "ref_tag_buff": 425, "bufferdata": 425, "initempti": [425, 426], "bufferiniti": 425, "payload": [425, 443, 445, 446, 453], "slice": [425, 448], "int_min": 425, "n_first": 425, "dstoffset": 425, "srcoffset": 425, "swapbyt": 425, "abcd": 426, "efgh": 426, "abcdefgh": 426, "ref_tag_str": 426, "stringdata": 426, "initstr": 426, "emptystr": [426, 441], "distast": 426, "s1": [426, 444], "s2": 426, "xxx": [426, 455], "substr": [426, 650], "illeg": [426, 430], "matrix": [427, 436, 643, 659], "transpos": 427, "squar": [427, 652], "matric": 427, "det": 427, "__sync_fetch_and_add": 428, "separ": [429, 441, 455, 651], "overriden": 429, "lowest": [429, 447, 460], "nvm": 430, "caches": 430, "cacheentri": 430, "polici": [430, 448], "operationcount": 430, "getcacheentri": 430, "lastus": 430, "bytescopi": [430, 439], "span": 430, "boundari": [430, 439, 440, 441, 448, 470], "cachepag": 430, "codal_fs_cache_valid": 430, "b1": 430, "b2": 430, "fs_cach": 430, "operaiton": 430, "alignedstart": 430, "0xfffffffc": [430, 440], "alignedend": 430, "fscache_flag_pin": 430, "unpin": 430, "lru": 430, "prefer": [430, 439], "soft": [430, 442, 458, 464, 469, 471, 472], "debug": [430, 460, 643, 646, 647, 661], "verbos": 430, "linelength": 430, "autodetect": [431, 433], "autodetectcomplet": 431, "coordinate_space_rotated_0": 431, "irq1": [431, 443, 448], "id_pin_irq1": 431, "p0_25": 431, "pin_capability_ad": 431, "essenc": [431, 433], "lsm": [431, 433], "4m": [431, 433], "foundat": [431, 433, 643], "pullup": [431, 474], "resisitor": 431, "setactivelo": 431, "probe": 431, "repli": [431, 461], "microbitpan": [431, 433], "accelerometer_error": 431, "speaker": [432, 450], "nrf52adc": [432, 661], "microphon": 432, "runmic": 432, "speakeren": 432, "pinen": 432, "synth": [432, 455, 457], "device_id_sound_emoji_synthesizer_0": 432, "soundexpressionchannel": 432, "pwm": [432, 467, 643], "virtualoutputpin": 432, "allowemptybuff": [432, 454], "mic": [432, 460], "setsampleperiod": 432, "1e6": 432, "22000": 432, "senit": 432, "startup": [432, 643, 653], "schema": 432, "stage": [432, 645, 653], "initialialis": 432, "micfilt": 432, "1f": [432, 449], "initilis": 432, "rawsplitt": 432, "08f": 432, "onsplitterev": 432, "device_id_splitt": 432, "device_id_system_level_detector": 432, "levelspl": 432, "device_id_microphon": 432, "activatem": 432, "henc": 432, "deactivatem": 432, "sethighdr": 432, "activatechannel": 432, "gone": 432, "forev": [432, 653], "releasechannel": 432, "deactivatelevelspl": 432, "setmicrophonegain": 432, "nrf_pwm1": 432, "44100": [432, 449], "setdecodermod": 432, "pwm_decoder_load_common": 432, "setsamplerang": [432, 450, 454], "getsamplerang": [432, 450, 454], "0x8000": 432, "setspeakeren": 432, "setpinen": 432, "requestactiv": [432, 454, 456, 653], "getvolum": [432, 450], "connectpin": 432, "disconnectpin": 432, "isspeakeren": 432, "setpin": 432, "wasen": [432, 452, 460], "ispinen": 432, "microbit_audio_status_deepsleep": 432, "nvic_disableirq": [432, 444, 460], "pwm1_irqn": 432, "getsilencestarttim": [432, 450], "getsilenceendtim": [432, 450], "config_audio_mixer_output_latency_u": 432, "reli": [433, 447, 663], "magnetomt": 433, "compass_error": 433, "_compass": [434, 469], "microbit_id_compass": [434, 469], "microbit_compass_evt_calibr": 434, "calibrateux": 434, "datafor": 434, "calibrationdata": 434, "compassc": 434, "cal": 434, "measurescor": 434, "mind": 434, "maxd": 434, "dsquar": 434, "approximatecentr": 434, "spherifi": 434, "radiu": 434, "enclos": 434, "sphere": 434, "though": [434, 643, 647, 650, 659], "scalex": 434, "scalei": 434, "scalez": 434, "weightx": 434, "weighti": 434, "weightz": 434, "scalar": 434, "vector": 434, "between": [434, 436, 443, 450, 460, 643, 652, 659, 662], "surfac": [434, 664], "distanc": [434, 652], "dx": 434, "dy": 434, "dz": 434, "fabsf": [434, 449], "wmag": 434, "inter": 434, "approxim": [434, 456], "hill": 434, "descent": 434, "upon": [434, 470, 655, 663], "resid": [434, 439], "contain": [434, 444, 470, 645, 663], "score": 434, "calclul": 434, "climb": 434, "furthest": 434, "perimeter_point": 434, "pixel1_threshold": 434, "pixel2_threshold": 434, "redisplay_msg_timeout_m": 434, "30000": [434, 460], "samples_end_msg_count": 434, "time_step": 434, "msg_time": 434, "perimet": 434, "cursor": 434, "microbitimag": [434, 460, 642, 648, 649, 659], "img": [434, 651], "smilei": [434, 659], "n0": [434, 460, 651, 659], "n255": [434, 460, 651, 659], "visit": 434, "cursor_on": 434, "samples_this_period": 434, "remaining_scroll_tim": 434, "dim": [434, 436], "displaybright": 434, "1500": [434, 452], "retor": 434, "fiber_add_idle_compon": [435, 460, 466, 467], "htonl": [435, 448], "hton": [435, 448], "uk": 436, "softdevice_pres": [436, 440, 447, 451], "nrf_sdm": [436, 447, 451, 460, 470], "microbit_name_length": 436, "pure": [436, 643], "scheduleridl": 436, "seedrandom": 436, "0xbbc5eed": 436, "hope": 436, "nrf_rng": 436, "tasks_start": [436, 444, 447, 452], "valrdi": 436, "events_valrdi": 436, "ot": [436, 450], "tasks_stop": [436, 447, 452], "nrf_ficr": [436, 460], "deviceid": [436, 460], "codebook": 436, "microbit_name_code_lett": 436, "sd_softdevice_is_en": [436, 451], "nvic_systemreset": 436, "typedef": [436, 484], "maprctox": [436, 479], "maprctoi": [436, 479], "ifndef": [436, 440, 460], "pinmap": 436, "nrf_gpio_pin_set": 436, "nrf_gpio_pin_clear": 436, "nrf_gpio_pin_writ": 436, "nrf_gpio_cfg_output": 436, "face": [436, 657], "divisor": 436, "burn": 436, "microbit_font_width": [436, 614], "mm": 436, "chr": 436, "nrf_gpiot": [436, 452], "msgidx": 436, "div": 436, "fontbyt": 436, "rowoncycl": 436, "repetit": 436, "nrf_gpio_pin_out_read": 436, "overrid": 436, "target": [436, 643, 644, 645], "__wrap_atexit": 436, "nrf_timer4": 437, "timer4_irqn": 437, "defaultfilesystem": [438, 439], "filehandl": 438, "open": [438, 439, 441, 644, 645, 647, 653, 657], "setposit": 438, "microbit_not_support": [438, 439, 472], "microbit_invalid_paramet": [438, 439, 440, 442, 448, 465, 472], "seek": [438, 439], "mb_seek_set": [438, 439], "getposit": 438, "mb_seek_cur": [438, 439], "microbit_no_data": [438, 439, 472], "close": [438, 439, 657], "append": [438, 439, 444], "mb_seek_end": [438, 439], "isvalid": 438, "gethandl": 438, "microbit_no_resourc": [438, 439, 442], "microbit_default_scratch_pag": [439, 440, 442], "getfreeblock": 439, "filesystem": 439, "deletedblock": 439, "lastblockalloc": 439, "filesystems": 439, "filesystemt": 439, "mbfs_unus": 439, "mbfs_delet": 439, "filet": 439, "better": [439, 449, 659], "rather": [439, 441, 452, 460, 643, 653, 659, 664], "basi": [439, 659], "recyclefilet": 439, "balanc": 439, "getfreepag": 439, "blocksperpag": 439, "microbit_codepages": [439, 440, 442, 470], "mbfs_block_siz": 439, "currentpag": 439, "getblocknumb": 439, "getpag": 439, "recyclablepag": 439, "getnextfileblock": 439, "getblock": 439, "un": 439, "abl": [439, 643, 645], "erase_pag": [439, 440, 470], "flashstart": 439, "flashpag": 439, "tp": 439, "accident": 439, "mbfs_status_initialis": 439, "mbed": [439, 460, 467, 662], "armcc": [439, 440, 447, 451], "definit": [439, 460, 484], "rootdirectori": 439, "openfil": 439, "rom": 439, "__etext": 439, "flash_program_end": [439, 442], "microbit_app_region_end": [439, 442], "alai": 439, "locat": [439, 440, 658], "microbit_ok": [439, 440, 442, 443, 448, 460, 465, 469, 472], "fresh": 439, "freshli": 439, "filesystemtables": 439, "calculatefiletables": 439, "rootoffset": 439, "mbf": 439, "root": [439, 457, 647], "mbfs_eof": 439, "directoryentri": 439, "file_nam": 439, "mbfs_magic": 439, "themselv": [439, 643], "flash_writ": [439, 440], "first_block": 439, "mbfs_directory_entry_valid": 439, "getdirectoryentri": 439, "dirent": 439, "potenti": [439, 441], "fulli": 439, "filetablewrit": 439, "getdirectoryof": 439, "diretori": 439, "mbfs_filename_length": 439, "recycleblock": 439, "individu": [439, 645, 650, 651, 653, 659], "mbfs_block_type_directori": 439, "direntin": 439, "direntout": 439, "tablein": 439, "tableout": 439, "pagerecycl": 439, "upcycl": 439, "createdirectoryentri": 439, "mbfs_directory_entry_fre": 439, "opreat": 439, "ideal": 439, "hand": [439, 643, 659], "freed": [439, 650, 651, 652], "extend": [439, 452], "newblock": 439, "lastblock": 439, "createfil": 439, "isdirectori": 439, "popul": [439, 441, 663], "minim": [439, 643, 662], "mbfs_directory_entry_directori": 439, "unwritten": 439, "regular": 439, "forthcom": 439, "mbfs_directory_entry_new": 439, "0xffffffff": [439, 470], "filedescriptor": 439, "getfiledescriptor": 439, "fd": [439, 460], "createdirectori": 439, "direcoti": 439, "reject": 439, "isvalidfilenam": 439, "caller": [439, 443], "assovi": 439, "detemrin": 439, "mb_creat": 439, "mb_append": 439, "cachelength": 439, "writeback": 439, "newdir": 439, "readpoint": 439, "writepoint": 439, "segmentlength": [439, 448], "filelength": 439, "sequenti": [439, 643], "segments": 439, "via": [439, 440, 441, 451, 467, 643, 644, 647], "direct": [439, 441, 652], "mbfs_cache_s": 439, "mb_read": 439, "nextblock": 439, "imposs": 439, "mbfs_directory_entry_delet": 439, "nrf_sdh_soc": [440, 451, 460], "underli": [440, 447, 451], "cleanli": [440, 447, 451], "stringent": [440, 447, 451], "emploi": [440, 447, 451], "suppress": [440, 441, 447, 451], "warn": [440, 447, 451], "rest": [440, 447, 451, 643], "dal": [440, 442, 447, 451, 472], "cc": [440, 443, 447, 451, 452], "toler": [440, 447, 451], "__gnuc__": [440, 447, 451], "__arm": 440, "wunus": [440, 460], "func": [440, 451], "predefin": [440, 450], "softdevic": [440, 451, 460], "observ": [440, 451], "deliv": [440, 451, 452, 643], "nrf_sdh": [440, 451, 460], "nrf_sdh_dispatch_model": [440, 451], "nvmc_event_handl": [440, 451], "sys_evt": [440, 451], "nrf_evt_flash_operation_success": [440, 451], "nrf_sdh_soc_observ": [440, 451], "microbitflash_soc_observ": 440, "need_eras": 440, "flash_addr": 440, "pg_addr": 440, "sd_flash_page_eras": [440, 451], "nrf_success": [440, 451, 459, 460, 463], "diabl": [440, 451], "nvmc": [440, 451], "nrf_nvmc": [440, 451], "nvmc_config_wen_een": [440, 451], "nvmc_ready_ready_busi": [440, 451], "erasepag": [440, 451], "nvmc_config_wen_ren": [440, 451], "nvmc_config_wen_po": [440, 451], "flash_burn": [440, 470], "sd": [440, 442, 451, 470], "sd_flash_writ": [440, 451], "nvmc_config_wen_wen": [440, 451], "from_buff": 440, "scratch_addr": 440, "pgaddr": 440, "writefrom": 440, "writeword": 440, "byteoffset": 440, "nrf52serial": [441, 476, 661], "config_microbit_log_cache_block_s": 441, "journalpag": 441, "journalhead": 441, "startaddress": [441, 442, 451, 470], "journalstart": 441, "datastart": 441, "headingstart": 441, "headinglength": 441, "headingcount": 441, "logend": 441, "headingschang": 441, "timestampchang": 441, "rowdata": 441, "timestampformat": 441, "microbit_log_status_initi": 441, "_ispres": 441, "journalentri": 441, "dataend": 441, "journal": 441, "journalentryaddress": 441, "microbit_log_journal_entry_s": 441, "follw": 441, "containsonli": 441, "strtoul": 441, "microbitlogmetadata": 441, "comma": [441, 455, 651], "columnentri": 441, "reformat": 441, "_clear": 441, "visibl": [441, 448], "_setvis": 441, "setvis": 441, "mutex": 441, "microbitusbflashconfig": [441, 448], "currentconfig": 441, "my_data": 441, "htm": 441, "files": [441, 448], "getconfigur": [441, 448], "remount": [441, 448], "view": [441, 645, 652], "date": [441, 647], "setconfigur": [441, 448], "fulleras": 441, "config_microbit_log_journal_s": 441, "config_microbit_log_metadata_s": 441, "microbit_log_status_serial_mirror": 441, "pag": 441, "eeras": 441, "wear": 441, "0x00000000": 441, "meta": 441, "serialis": 441, "preheat": 441, "microbit_log_vers": 441, "daplinkvers": 441, "0000": [441, 455], "microbitvers": [441, 443, 448], "getvers": [441, 443, 448], "verstr": 441, "daplink": [441, 443, 448, 662], "9999": [441, 455], "je": 441, "inject": 441, "_settimestamp": 441, "settimestamp": 441, "minut": 441, "hour": 441, "dai": 441, "timestamphead": 441, "rewrit": [441, 653], "promot": 441, "simplic": 441, "setserialmirror": 441, "beginrow": 441, "_beginrow": 441, "transact": [441, 443, 448], "implic": 441, "endrow": 441, "proceed": 441, "microbit_log_status_row_start": 441, "_endrow": 441, "logdata": 441, "_logdata": 441, "instati": 441, "explicitli": [441, 448, 468, 650, 651, 652, 659], "implicitli": 441, "cleanbuff": 441, "cumul": 441, "addhead": 441, "pointless": 441, "validdata": 441, "insert": [441, 443], "billion": 441, "decim": [441, 455], "sep": 441, "_logstr": 441, "csv": 441, "microbit_log_status_ful": 441, "removesepar": 441, "config_microbit_log_invalid_char_valu": 441, "logstr": 441, "olddataend": 441, "ful": 441, "microbit_id_log": 441, "microbit_log_evt_log_ful": 441, "spaceonpag": 441, "space_on_pag": 441, "lengthtowrit": 441, "overspil": 441, "nextpag": 441, "oldjournalhead": 441, "wraparound": 441, "no_resourc": 441, "ran": [441, 645], "newrowdata": 441, "columnshift": 441, "newcolumn": 441, "_invalid": 441, "config_microbit_log_full_erase_by_default": 441, "logf": 441, "trail": 441, "ispres": 441, "useless": 441, "basic": [441, 647, 652, 653], "thing": [441, 643], "intention": 441, "log_vers": 441, "_preamble_": 441, "aka": 441, "ubit_log_fs_v_": 441, "bug": [441, 455, 650], "correctli": [441, 645, 658], "_exactly_": 441, "getdatalength": 441, "dataformat": 441, "hdr": 441, "mtr": 441, "htmlheader": 441, "readdata": 441, "_readdata": 441, "datamax": 441, "datalen": 441, "po": 441, "_readsourc": 441, "srcindex": 441, "srcaddress": 441, "srclen": 441, "2048": 441, "0x6d": 441, "0x74": 441, "0x61": 441, "0x63": 441, "0x72": 441, "0x73": 441, "0x3d": 441, "0x66": 441, "0x79": 441, "0x7b": 441, "0x69": 441, "0x7d": [441, 470], "0x67": 441, "0x6f": 441, "0x77": 441, "0x2f": 441, "0x6a": 441, "0x5b": 441, "0x5d": [441, 461], "0x53": 441, "0x46": 441, "0x49": 441, "0x56": 441, "0x43": 441, "0x7c": 441, "findhash": 442, "pushregion": 442, "regioncount": 442, "number_of_region": 442, "memorymapstor": [442, 470], "memorymap": [442, 470], "endaddress": [442, 470], "regionid": [442, 470], "updateregion": 442, "fetch": [442, 662], "rem": 442, "page_s": 442, "nxt": 442, "magicaddress": 442, "m1": 442, "0x6dc4718f": 442, "0x41a815c6": 442, "0xc96698c4": 442, "0x9751ee75": 442, "region_sd": 442, "microbit_app_region_start": [442, 470], "region_cod": 442, "abstract": 442, "layer": [442, 444, 642, 643], "region_makecod": 442, "python": [442, 643, 645, 647], "0x597f30fe": 442, "0xc1b1d79d": 442, "upi": 442, "upy_mag": 442, "nregion": 442, "processrecord": 442, "microbit_invalid_param": 442, "great": [442, 655], "micropythonlayoutrecord": 442, "reg_pag": 442, "reg_len": 442, "layout": [442, 444], "ht": 442, "hash_data": 442, "hash_type_point": 442, "crc32_comput": [442, 470], "develop": [443, 472, 643, 645, 648, 653, 662], "longer": [443, 448], "microbit_uipm_max_buffer_s": 443, "microbit_uipm_property_board_revis": 443, "microbit_uipm_property_i2c_vers": 443, "microbit_uipm_property_daplink_vers": 443, "microbit_uipm_property_power_sourc": 443, "microbit_uipm_property_power_consumpt": 443, "microbit_uipm_property_usb_st": 443, "microbit_uipm_property_kl27_power_mod": 443, "microbit_uipm_property_kl27_power_led_st": 443, "iopin": [443, 448], "systemtim": [443, 661], "i2cbu": [443, 448], "systim": 443, "powerdowndisablecount": 443, "poweruptim": 443, "eventvalu": 443, "powerdata": 443, "pessimist": [443, 448], "chip": [443, 448, 644, 647, 664], "microbit_usb_interface_always_nop": 443, "microbitpowersourc": 443, "getpowersourc": 443, "readproperti": 443, "powersourc": 443, "microbit_usb_interface_version_load": 443, "board": [443, 448, 643, 644, 653, 661], "revis": [443, 448], "microbit_usb_interface_busy_flag_support": 443, "kl27": [443, 448, 643], "0x9904": 443, "microbitusbstatu": 443, "getusbstatu": 443, "usbstatu": 443, "getpowerconsumpt": 443, "getpowerdata": 443, "proxi": 443, "estimatedpowerconsumpt": 443, "microbitpowerdata": 443, "batterymicrovolt": 443, "vinmicrovolt": 443, "throw": [443, 655], "awai": [443, 460, 643, 653], "microbit_uipm_i2c_address": 443, "senduipmpacket": 443, "packet": [443, 444, 445, 470, 643, 652], "recvuipmpacket": 443, "awaituipmpacket": 443, "awaitingpacket": [443, 448], "retri": 443, "microbit_uipm_max_retri": 443, "incomplet": [443, 644], "microbit_uipm_command_error_respons": 443, "busi": [443, 448, 460], "microbit_uipm_busi": 443, "microbit_uipm_incomplete_cmd": 443, "sanit": 443, "meet": 443, "microbit_uipm_command_write_respons": 443, "uipm": 443, "microbit_uipm_write_fail": 443, "writeproperti": 443, "properti": [443, 460], "microbit_uipm_command_read_request": 443, "setpowerl": 443, "instruct": [443, 645, 646], "sleepcommand": 443, "microbit_uipm_command_write_request": 443, "microbit_usb_interface_power_mode_vlls0": 443, "react": 443, "transit": [443, 444, 657], "nrf52": [443, 448], "setdetect": 443, "gpio_pin_cnf_sense_low": 443, "nrf_power": [443, 460], "systemoff": 443, "activecount": 443, "microbit_usb_interface_awaiting_respons": 443, "liklei": 443, "microbit_usb_interface_irq_threshold": 443, "beyond": 443, "readinterfacerequest": 443, "microbit_uipm_command_read_respons": 443, "microbit_uipm_property_kl27_user_ev": 443, "microbit_uipm_event_wake_reset": 443, "microbit_uipm_event_wake_usb_insert": 443, "microbit_uipm_event_reset_long_press": 443, "unknown": [443, 444, 460], "unknwon": 443, "deepsleep": 443, "simpledeepsleep": 443, "deepsleepwait": 443, "config_minimum_deep_sleep_tim": 443, "timeentri": 443, "wakeuptim": 443, "wakeontim": 443, "wakeupsourc": 443, "wakeuppin": 443, "awak": 443, "powerdowndis": 443, "powerdownen": 443, "deepsleepasync": 443, "eventtim": 443, "candeepsleep": 443, "preparedeepsleep": 443, "powerdownisen": 443, "waitingfordeepsleep": 443, "readyfordeepsleep": 443, "config_minimum_power_on_tim": 443, "startdeepsleep": 443, "deepsleeplock": 443, "canceldeepsleep": 443, "timer_irq_channel": 443, "deepsleeptimerirq": 443, "tickstart": 443, "timestart": 443, "savecompar": 443, "saveintenset": 443, "intenset": [443, 444], "intenclr": 443, "systimerirq": 443, "channel_bitmsk": 443, "timer_point": [443, 452], "uspertick": 443, "ticksperm": 443, "ticksmax": 443, "0xfffffffful": 443, "71min": 443, "gpio_pin_cnf_sense_high": 443, "wakeup": 443, "nvic_enableirq": [443, 444, 460], "gpiote_irqn": 443, "tick0": 443, "tick1": 443, "uint64_t": [443, 460], "totaltick": 443, "__wfi": 443, "latenc": 443, "sleeptick": 443, "remain64": 443, "tick": [443, 460], "gpio_pin_cnf_sense_dis": 443, "incorrect": 443, "0xec": 444, "0xf4": 444, "nrf_radio": 444, "events_readi": 444, "events_end": 444, "crcstatu": 444, "rssisampl": 444, "rssi": [444, 445, 453], "dma": [444, 454], "setrssi": [444, 453], "queuerxbuf": 444, "packetptr": 444, "getrxbuf": 444, "datagram": [444, 652], "band": 444, "microbit_radio_default_frequ": 444, "microbit_radio_default_tx_pow": 444, "group": [444, 445, 446, 643], "microbit_radio_default_group": 444, "rxqueue": [444, 445], "rxbuf": 444, "settransmitpow": [444, 460], "txpower": 444, "setfrequencyband": 444, "microbit_radio_status_initialis": 444, "restart": [444, 456, 460, 645], "radio": [444, 445, 446, 460, 642, 643, 652, 661], "radio_irqn": 444, "events_dis": 444, "tasks_dis": 444, "reenabl": 444, "tasks_rxen": 444, "nvic_clearpendingirq": 444, "framebuff": [444, 445, 446], "microbit_radio_maximum_rx_buff": [444, 445], "getrssi": [444, 453, 652], "newrxbuf": 444, "app": [444, 470, 643, 645, 654], "requisit": 444, "nrf_clock": 444, "events_hfclkstart": 444, "tasks_hfclkstart": 444, "proprietari": 444, "1mbp": 444, "throughput": 444, "sound": [444, 454, 455, 456, 650, 651, 653], "excess": 444, "chanc": [444, 454], "collis": 444, "radio_mode_mode_nrf_1mbit": 444, "anonym": 444, "ascii": [444, 448], "ubit": [444, 643, 648, 650, 651, 652, 653, 657], "statist": 444, "assur": 444, "similar": [444, 650], "4ghz": [444, 643], "vicin": 444, "prefix": [444, 465], "base0": 444, "microbit_radio_base_address": 444, "join": [444, 650], "setgroup": 444, "txaddress": 444, "rxaddress": 444, "nrf51822": [444, 664], "highli": [444, 653], "flexibl": 444, "addit": [444, 448, 662], "recept": [444, 662], "s0": 444, "crc": [444, 470], "pcnf0": 444, "0x00000008": 444, "pcnf1": 444, "0x02040000": 444, "microbit_radio_max_packet_s": [444, 445], "mathemat": 444, "taken": 444, "sent": [444, 643], "sender": 444, "compar": [444, 460, 649, 650, 653], "corrupt": 444, "aha": 444, "crccnf": 444, "radio_crccnf_len_two": 444, "crcinit": 444, "crcpoli": 444, "0x11021": 444, "whiten": 444, "datawhiteiv": 444, "whenev": [444, 643, 651, 655, 658, 661, 664], "radio_shorts_address_rssistart_msk": 444, "alreayd": 444, "deregist": 444, "prefix0": 444, "microbit_radio_protocol_datagram": [444, 445], "packetreceiv": [444, 445, 446], "microbit_radio_protocol_eventbu": [444, 446], "device_id_radio_data_readi": 444, "recv": [444, 445, 446, 652], "datareadi": 444, "microbit_radio_header_s": [444, 445, 446], "trasmiss": 444, "transceiv": 444, "transmitt": 444, "tasks_txen": 444, "microbit_radio_status_deepsleep_init": 444, "nvic_getenableirq": [444, 460], "microbit_radio_status_deepsleep_irq": 444, "emptypacket": [445, 453], "device_id_radio": 445, "microbit_radio_evt_datagram": 445, "suppressforward": 446, "eventbu": 446, "eventreceiv": 446, "nrf_soc": 447, "microbit_thermometer_period": 447, "sampletim": 447, "gettemperatur": [447, 471, 664], "issampleneed": 447, "processortemperatur": 447, "senesor": 447, "cooler": 447, "trim": 447, "manufactur": 447, "sd_temp_get": 447, "othwerwis": 447, "nrf_temp": 447, "events_datardi": 447, "microbit_thermometer_evt_upd": [447, 471], "microbit_usb_flash_filename_cmd": 448, "microbit_usb_flash_filesize_cmd": 448, "microbit_usb_flash_visibility_cmd": 448, "microbit_usb_flash_write_config_cmd": 448, "microbit_usb_flash_erase_config_cmd": 448, "microbit_usb_flash_disk_size_cmd": 448, "microbit_usb_flash_sector_size_cmd": 448, "microbit_usb_flash_remount_cmd": 448, "powermanag": 448, "maxwritelength": 448, "Be": 448, "microbit_usb_flash_single_page_erase_onli": 448, "microbit_usb_flash_use_null_transact": 448, "microbit_usb_flash_config_load": 448, "isnt": 448, "microbit_usb_flash_max_flash_storag": 448, "isvalidchar": 448, "fname": 448, "fsize": 448, "fvisibl": 448, "invalidchar": 448, "getgeometri": 448, "proce": 448, "fix": [448, 452, 457, 460, 643, 663], "blimei": 448, "complex": [448, 643, 650, 651], "extens": [448, 645, 648], "justifi": 448, "microbitusbflashgeometri": 448, "microbit_usb_flash_geometry_load": 448, "workaround": [448, 460], "nrf528xx": 448, "rev1": 448, "rev2": 448, "microbit_usb_flash_busy_flag_support": 448, "100m": [448, 460], "flash_eras": 448, "0x9905": 448, "0x9906": 448, "microbit_usb_flash_100ms_after_eras": 448, "eraseconfig": 448, "microbit_usb_flash_read_cmd": 448, "repsons": 448, "strip": 448, "microbit_usb_flash_write_cmd": 448, "restorebuffer1": 448, "restorebuffer2": 448, "calculc": 448, "he": 448, "inclus": 448, "erasestart": 448, "eraseend": 448, "undertak": [448, 651], "restorelength1": 448, "restorelength2": 448, "microbit_usb_flash_erase_cmd": 448, "getflashs": [448, 451], "responselength": 448, "nop_request": 448, "_transact": 448, "tx_attempt": 448, "rx_attempt": 448, "microbit_usb_flash_max_tx_retri": 448, "microbit_usb_flash_i2c_address": 448, "microbit_usb_flash_max_rx_retri": 448, "usb_flash": 448, "thom": 449, "johansen": 449, "codal_polysynth": 449, "cstring": 449, "synthtabl": 449, "inited_": 449, "notetab_": 449, "singleton": [449, 460], "powf": [449, 457], "notetoscal": 449, "ind": 449, "static_cast": 449, "frac": 449, "statevariablefilt": 449, "tan": 449, "somewhat": 449, "below": [449, 647, 650, 651, 659], "mutipli": 449, "mutabl": 449, "instrument": 449, "pichenett": 449, "stmlib": 449, "blob": 449, "master": [449, 645], "dsp": 449, "khz": 449, "well": [449, 645, 650, 653, 655], "pi_two": 449, "_pi": 449, "pi_thre": 449, "pi_fiv": 449, "260e": 449, "01f": 449, "823e": 449, "f2": 449, "cutoff": 449, "clip": [449, 452], "g_": 449, "g1_": 449, "d_": 449, "filtertyp": 449, "hp": 449, "s1_": 449, "s2_": 449, "bp": 449, "lp": 449, "lpf": 449, "bpf": 449, "hpf": 449, "adsrenv": 449, "state_": 449, "phase_": 449, "yeah": 449, "mayb": [449, 643], "enum": [449, 460], "choic": [449, 455, 645, 661], "next_stat": 449, "start_val_": 449, "levels_": 449, "phase_inc_": 449, "inc_": 449, "cur_": 449, "gate": 449, "r_sr": 449, "synthsamplerate_f": 449, "oscil": 449, "acc_": 449, "delta_": 449, "proper": 449, "wave_": 449, "osctyp": 449, "saw": 449, "pw_": 449, "triangl": 449, "processpm": 449, "due": [449, 454, 645, 659], "setfreq": 449, "settyp": 449, "setpw": 449, "pw": 449, "voic": 449, "apply_preset": 449, "synthpreset": 449, "preset_": 449, "filter_": 449, "osc_": 449, "osc1pw": 449, "osc2pw": 449, "osc1shap": 449, "osc2shap": 449, "lfo_": 449, "lfoshap": 449, "lfofreq": 449, "synthblocks": 449, "env_": 449, "enva": 449, "envd": 449, "env": 449, "envr": 449, "filtercutoff": 449, "filterreso": 449, "set_not": 449, "440": 449, "tune": 449, "osc2transpos": 449, "3f": 449, "2f": 449, "viblfo_": 449, "osc1": 449, "stopping_": 449, "smoothedgate_": 449, "005f": 449, "amp_env": 449, "ampgat": 449, "osc": 449, "osc1vol": 449, "fmamount": 449, "osc2vol": 449, "noise_": 449, "1664525": 449, "1013904223": 449, "numeric_limit": 449, "gain_": 449, "nullptr": 449, "lfo": 449, "vibfreq": 449, "vib": 449, "vibamount": 449, "lfo_flt": 449, "filterlfo": 449, "env_flt": 449, "filterenv": 449, "key_flt": 449, "filterkeyfollow": 449, "note_": 449, "arbitrari": 449, "sr": 449, "20k": 449, "filt_freq": 449, "700": 449, "osc1pwm": 449, "osc2pwm": 449, "amp": 449, "envelop": [449, 455], "gatelength_": 449, "detrig": 449, "di": 449, "deactiv": 449, "1e": 449, "trig": 449, "veloc": 449, "preset": [449, 465], "getnot": 449, "polysynth": 449, "findvoic": 449, "numvoices_": 449, "voice_": 449, "steal": 449, "num_voic": 449, "noteon": 449, "noteoff": 449, "process_noclip": 449, "mix": [449, 450, 456, 643], "mixbuf_": 449, "dither": 449, "shape": [449, 455], "polysynthsourc": 449, "synth_": 449, "init_": 449, "downstream_": 449, "datastream_format_16bit_unsign": [449, 450, 454], "reinterpret_cast": 449, "silencelevel": 450, "silencestarttim": 450, "silenceendtim": 450, "configurechannel": 450, "config_mixer_internal_rang": 450, "outputr": 450, "5f": [450, 454, 457], "removechannel": 450, "pice": 450, "audio": [450, 454, 456, 643, 648, 653, 661], "pulltim": 450, "config_mixer_buffer_s": 450, "silenc": [450, 454, 456], "discov": 450, "outlen": 450, "inlen": 450, "device_id_mix": 450, "device_mixer_evt_sil": 450, "device_mixer_evt_sound": 450, "outputrang": 450, "nice": [450, 460, 643, 653], "compress": 450, "super": 450, "setsilencelevel": 450, "issil": 450, "nrf52flash_soc_observ": 451, "pagecount": 451, "pages": 451, "sd_enabl": 451, "displaytim": 452, "lightlevel": 452, "nrf52_led_matrix_maximum_column": 452, "setmod": 452, "timermod": 452, "timermodetim": 452, "setclockspe": 452, "nrf52_led_matrix_clock_frequ": 452, "gpiot": 452, "ppi": 452, "global": [452, 661], "nrf52_ledmatrix_status_reset": 452, "nrf52_ledmatrix_gpiote_channel_bas": 452, "nrf52_ledmatrix_ppi_channel_bas": 452, "0x00010003": 452, "nrf_ppi": 452, "eep": 452, "events_compar": 452, "tep": 452, "tasks_set": 452, "chenset": 452, "timeslot": 452, "display_mode_greyscale_light_sens": 452, "timerperiod": 452, "nrf52_led_matrix_frequ": 452, "quantum": 452, "tasks_clear": 452, "resistor": 452, "imped": 452, "nrf52_ledmatrix_status_lightreadi": 452, "screenbuff": 452, "strobe": 452, "light": [452, 643, 648, 654, 659], "nrf52_led_matrix_lightsense_strob": 452, "common": [452, 472, 643, 647], "matrixpoint": 452, "black": [452, 460], "0x00100000": 452, "tricki": [452, 645], "reconfigur": [452, 469], "rise": [452, 457], "0x00010001": 452, "events_in": 452, "tasks_captur": 452, "readlightlevel": [452, 659], "packetdata": 453, "emoji_synthesizer_buffer_s": 454, "emptybuff": 454, "partialbuff": 454, "playbackcompletein": 454, "buffer2": 454, "samplestowrit": 454, "sampleswritten": 454, "soundeffect": [454, 455], "effectbuff": 454, "nextsoundeffect": 454, "activi": 454, "compoennt": 454, "emoji_synthesizer_status_act": 454, "emoji_synthesizer_status_stop": 454, "hadeffect": 454, "emoji_synthesizer_tone_effect": 454, "samplesperstep": 454, "filloutputbuff": 454, "driven": [454, 643], "defer": 454, "device_sound_emoji_synthesizer_evt_playback_complet": 454, "natur": [454, 643, 663], "glitch": 454, "bufferend": [454, 456], "rendercomplet": 454, "config_emoji_synthesizer_output_buffer_depth": 454, "device_sound_emoji_synthesizer_evt_don": 454, "generta": 454, "emoji_synthesizer_status_output_silence_as_empti": 454, "middl": [454, 659], "eof": 454, "emoji_synthesizer_tone_width_f": [454, 456], "effectstepend": 454, "stependposit": 454, "errorcod": 454, "playouttim": 454, "lookupbuiltin": 455, "soundlen": 455, "soundchar": 455, "charspereffect": 455, "effectcount": 455, "expectedlength": 455, "fx": 455, "parsesoundexpress": 455, "parsedigit": 455, "applyrandom": 455, "worth": [455, 653], "reconsid": 455, "adsr": 455, "perhap": 455, "wave": 455, "effectvolum": 455, "known": [455, 643, 650, 659, 663], "startfrequ": 455, "endfrequ": 455, "xxxx": 455, "endvolum": 455, "fxchoic": 455, "fxparam": 455, "fxnstep": 455, "detail": [455, 645, 647, 648, 651, 653, 659], "fxparamrandom": 455, "fxnstepsrandom": 455, "volumescalefactor": 455, "nointerpol": [455, 457], "linearinterpol": [455, 457], "curveinterpol": [455, 457], "exponentialrisinginterpol": [455, 457], "exponentialfallinginterpol": [455, 457], "variou": [455, 644], "ascend": 455, "appregrioascend": [455, 457], "descend": 455, "appregriodescend": [455, 457], "logarithmicinterpol": [455, 457], "parameter_p": [455, 457], "musicalprogress": [455, 457], "majorscal": [455, 457], "minorscal": [455, 457], "diminish": [455, 457], "chromat": [455, 457], "wholeton": [455, 457], "effectvolumefloat": 455, "endvolumefloat": 455, "volumerampeffect": [455, 457], "vibrato": [455, 457], "spread": 455, "evenli": 455, "normalizedfxnstep": 455, "frequencyvibratoeffect": [455, 457], "volumevibratoeffect": [455, 457], "warbleinterpol": [455, 457], "010230988019008440044008881023001601003300240000000000000000000000000000": 455, "010231992066911440044008880262002800001800020500000000000000010000000000": 455, "310230673019702440118708881023012800000000240000000000000000000000000000": 455, "400002390033100440240408880477000400022400110400000000000000008000000000": 455, "310232226070801440162408881023012800000100240000000000000000000000000000": 455, "105202325022302440240408881023012801020000110400000000000000010000000000": 455, "210234009530905440599908881023002202000400020250000000000000020000000000": 455, "306590037116312440058708880807003400000000240000000000000000050000000000": 455, "200002281133202440150008881023012801024100240400030000000000010000000000": 455, "pin_capability_analog": 456, "sound_output_pin_buffer_s": 456, "periodu": 456, "timeoflastupd": 456, "bufferwritepo": 456, "setanalogvalu": [456, 467], "headphon": 456, "edg": [456, 643, 648, 661], "connector": [456, 643, 648, 661], "setanalogperiodu": [456, 467], "setanalogperiod": 456, "getanalogperiodu": 456, "getanalogperiod": 456, "curent": 456, "updateoutputbuff": 456, "produc": 456, "sound_output_pin_status_en": 456, "sound_output_pin_sample_r": 456, "endposit": 456, "timeoflastpul": 456, "_periodu": 456, "flight": 456, "_valu": 456, "sound_output_pin_status_act": 456, "config_sound_output_pin_silence_g": 456, "just_scal": 457, "musicalinterv": 457, "chromaticinterv": 457, "000000f": 457, "059463f": 457, "122462f": 457, "189207f": 457, "259921f": 457, "334840f": 457, "414214f": 457, "498307f": 457, "587401f": 457, "681793f": 457, "781797f": 457, "887749f": 457, "0417f": 457, "1250f": 457, "2000f": 457, "2500f": 457, "3333f": 457, "4063f": 457, "5000f": 457, "6000f": 457, "6667f": 457, "8000f": 457, "8750f": 457, "majorscaleinterv": 457, "minorscaleinterv": 457, "pentatonicscaleinterv": 457, "majortriadinterv": 457, "minortriadinterv": 457, "diminishedinterv": 457, "wholetoneinterv": 457, "export": 457, "pentaton": 457, "majortriad": 457, "minortriad": 457, "octav": 457, "toneeffect": 457, "interpol": 457, "gen": 457, "john": 457, "hack": 457, "extrem": [457, 643], "math": 457, "properli": 457, "12159f": 457, "cosin": 457, "slowvibratointerpol": 457, "warbl": 457, "vibratointerpol": 457, "exponenti": 457, "01745329f": 457, "argeppio": 457, "adsrvolumeeffect": 457, "halfstep": 457, "device_bl": [458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "serviceuuid": [458, 461, 464, 466, 467, 468, 469, 470, 471, 472], "0x0753": 458, "charuuid": [458, 464, 466, 467, 468, 469, 470, 471, 472], "mbbs_cidxcount": [458, 464, 466, 467, 468, 469, 470, 471, 472], "0xca4b": 458, "0xfb24": 458, "bledevic": [458, 464, 466, 467, 468, 469, 470, 471, 472], "_ble": [458, 464, 466, 467, 468, 469, 470, 471, 472], "characterist": [458, 464, 466, 467, 468, 469, 470, 471, 472], "accelerometerdatacharacteristicbuff": 458, "accelerometerperiodcharacteristicbuff": 458, "uuid": [458, 460, 461, 464, 466, 467, 468, 469, 470, 471, 472], "registerbaseuuid": [458, 461, 464, 466, 467, 468, 469, 470, 471, 472], "bs_base_uuid": [458, 461, 464, 466, 467, 468, 469, 471], "createservic": [458, 461, 464, 466, 467, 468, 469, 470, 471, 472], "structur": [458, 464, 469, 471, 472, 643, 645, 653], "createcharacterist": [458, 461, 464, 466, 467, 468, 469, 470, 471, 472], "mbbs_cidxdata": [458, 467, 469, 471], "microbit_propread": [458, 461, 464, 466, 467, 468, 469, 471], "microbit_propnotifi": [458, 461, 464, 466, 467, 469, 470, 471], "mbbs_cidxperiod": [458, 469, 471], "microbit_propwrit": [458, 461, 466, 467, 468, 469, 471, 472], "getconnect": [458, 460, 461, 464, 466, 467, 469, 471, 472], "readxyz": 458, "ye": [458, 464, 469, 471], "microbit_id_acceleromet": 458, "microbit_accelerometer_evt_data_upd": 458, "accelerometerupd": 458, "onconnect": [458, 461, 464, 469, 471], "microbit_ble_evt_t": [458, 461, 464, 469, 471, 472], "p_ble_evt": [458, 460, 461, 462, 464, 469, 471, 472], "ondisconnect": [458, 460, 461, 464, 469, 471, 472], "ondatawritten": [458, 461, 466, 467, 468, 469, 470, 471, 472], "microbit_ble_evt_write_t": [458, 461, 466, 467, 468, 469, 470, 471, 472], "valuehandl": [458, 466, 467, 468, 469, 470, 471, 472], "setchrvalu": [458, 459, 467, 469, 471], "notifychrvalu": [458, 459, 464, 466, 467, 469, 470, 471], "ble_srv_common": [459, 460, 461], "ble_conn_st": [459, 460, 461], "cccd": [459, 461], "microbit_gaphandle_t": [459, 460, 461], "ble_gatts_value_t": 459, "p_valu": [459, 460], "const_cast": 459, "microbit_ble_echk": [459, 460, 461], "sd_ble_gatts_value_set": 459, "ble_conn_handle_invalid": [459, 460, 461], "microbit_debug_dmesgf": [459, 460, 470], "cccdnotifi": 459, "ble_gatts_hvx_params_t": 459, "hvx_param": 459, "ble_gatt_hvx_notif": 459, "p_len": 459, "p_data": [459, 460, 461], "sd_ble_gatts_hvx": 459, "indicatechrvalu": [459, 472], "cccdindic": 459, "ble_gatt_hvx_ind": 459, "writechrvalu": 459, "nordic_common": 460, "app_error": 460, "ble_hci": 460, "ble_di": 460, "ble_advdata": 460, "ble_conn_param": 460, "nrf_sdh_ble": [460, 462], "app_tim": 460, "peer_manag": [460, 461], "peer_manager_handl": 460, "peer_data_storag": 460, "ble_dfu": 460, "nrf_ble_gatt": 460, "nrf_pwr_mgmt": 460, "nrf_bootloader_info": 460, "nrf_log": 460, "nrf_log_ctrl": [460, 463], "nrf_log_backend_rtt_en": 460, "nrf_log_backend_uart_en": 460, "nrf_log_default_backend": 460, "microbitsystemtim": [460, 642], "nrf_log_backend_dmesg": 460, "microbit_pairing_fade_spe": 460, "secur": 460, "comparison": 460, "__security_mode_encryption_open_link": 460, "__security_mode_encryption_no_mitm": 460, "__security_mode_encryption_with_mitm": 460, "__cat": 460, "__va_args__": 460, "security_mod": 460, "__": 460, "security_mode_i": 460, "microbit_ble_security_level": 460, "microbit_ble_disconnect_after_pairing_delai": 460, "microbit_ble_pairing_event_delai": 460, "shutdown": 460, "microbit_ble_shutdown_delai": 460, "microbit_ble_manufactur": 460, "microbit_ble_model": 460, "microbit_ble_hardware_vers": 460, "microbit_ble_firmware_vers": 460, "microbit_dal_vers": 460, "microbit_ble_software_vers": 460, "microbit_ble_power_level": 460, "mani": [460, 643, 659, 661, 662, 663], "modular": [460, 653], "member": [460, 478, 479, 664], "microbit_ble_observer_prio": 460, "microbit_ble_conn_cfg_tag": 460, "m_power": 460, "microbit_ble_default_tx_pow": 460, "m_adv_handl": 460, "ble_gap_adv_set_handle_not_set": 460, "m_enc_advdata": 460, "ble_gap_adv_set_data_size_max": 460, "m_pend": 460, "nrf_ble_gatt_def": 460, "m_gatt": 460, "const_ascii_to_utf8": 460, "ble_srv_utf8_str_t": 460, "p_utf8": 460, "p_ascii": 460, "microbit_ble_for_each_connected_disconnect": 460, "conn_handl": [460, 461], "p_context": [460, 462], "microbit_ble_for_each_connected_tx_power_set": 460, "bleconnectioncallback": 460, "passkeydisplaycallback": 460, "passkei": 460, "microbit_ble_evt_handl": 460, "ble_evt_t": [460, 462], "microbit_ble_pm_evt_handl": 460, "pm_evt_t": 460, "p_evt": 460, "microbit_dfu_init": 460, "microbit_ble_configureadvertis": 460, "discover": 460, "whitelist": 460, "interval_m": 460, "timeout_second": 460, "microbit_ble_eddystone_url": [460, 465], "microbit_ble_eddystone_uid": [460, 465], "framedata": 460, "frames": 460, "_storag": [460, 470], "pairingstatu": 460, "microbit_ble_dfu_servic": 460, "buttonless": 460, "svci": 460, "bootload": [460, 470], "ble_dfu_buttonless_async_svci_init": 460, "devicenam": 460, "enablebond": 460, "microbit_debug_dmesg": [460, 461, 462, 463, 469, 470], "nrf_sdh_ble_vs_uuid_count": 460, "nrf_sdh_ble_gatts_attr_tab_s": 460, "pairingtim": 460, "shutdowntim": 460, "nrf_log_en": 460, "nrf_log_init": 460, "nrf_log_default_backends_init": 460, "nrf_log_backend_dmesg_en": 460, "nrf_log_backend_dmesg_init": 460, "app_timer_init": 460, "nrf_sdh_soc_init": 460, "ram_start": 460, "nrf_pwr_mgmt_init": 460, "nrf_sdh_enable_request": 460, "nrf_sdh_ble_default_cfg_set": 460, "gap": 460, "gapnam": 460, "microbit_ble_whitelist": 460, "nameprefix": 460, "namepostfix": 460, "ble_cfg_t": 460, "ble_cfg": 460, "ble_gap_conn_sec_mode_set_no_access": 460, "gap_cfg": 460, "device_name_cfg": 460, "write_perm": 460, "vloc": 460, "ble_gatts_vloc_us": 460, "current_len": 460, "max_len": [460, 461], "sd_ble_cfg_set": 460, "ble_gap_cfg_device_nam": 460, "nrf_sdh_ble_en": 460, "nrf_sdh_ble_observ": [460, 462], "microbit_ble_observ": 460, "sd_ble_gap_appearance_set": 460, "ble_appearance_unknown": 460, "microbit_v1_mbed_ble_patch": 460, "critic": 460, "classic": [460, 653], "__disable_irq": 460, "failur": 460, "ble_common_opt_radio_cpu_mutex_t": 460, "opt": 460, "sd_ble_opt_set": 460, "ble_common_opt_radio_cpu_mutex": 460, "ble_opt_t": 460, "microbit_ble_private_address": 460, "privat": 460, "easili": [460, 650, 659], "setaddress": 460, "bleprotocol": 460, "addresstyp": 460, "random_private_resolv": 460, "bluetooth_mdw": 460, "mitm": 460, "ble_gap_sec_params_t": 460, "sec_param": 460, "microbit_ble_security_mod": [460, 461], "security_mode_encryption_with_mitm": 460, "elif": 460, "security_mode_encryption_no_mitm": 460, "security_mode_encryption_open_link": 460, "bond": [460, 663], "lesc": 460, "keypress": 460, "io_cap": 460, "ble_gap_io_caps_non": 460, "oob": 460, "min_key_s": 460, "max_key_s": 460, "kdist_own": 460, "enc": 460, "kdist_peer": 460, "ble_gap_io_caps_display_onli": 460, "pm_init": 460, "pm_sec_params_set": 460, "pm_regist": 460, "speed": [460, 468, 659], "ble_gap_conn_params_t": 460, "gap_conn_param": 460, "min_conn_interv": 460, "max_conn_interv": 460, "slave_lat": 460, "conn_sup_timeout": 460, "sd_ble_gap_ppcp_set": 460, "gatt": 460, "nrf_ble_gatt_init": 460, "review": 460, "rank": 460, "getbondcount": 460, "microbit_ble_maximum_bond": 460, "peer": 460, "pm_peer_id_t": 460, "highest_ranked_p": 460, "highest_rank": 460, "lowest_ranked_p": 460, "lowest_rank": 460, "pm_peer_ranks_get": 460, "pm_peer_delet": 460, "requetss": 460, "unbond": 460, "denial": 460, "attack": 460, "setscanningpolicymod": 460, "scan_policy_ignore_whitelist": 460, "setadvertisingpolicymod": 460, "adv_policy_filter_conn_req": 460, "peer_list": 460, "list_siz": 460, "pm_peer_id_list": 460, "pm_peer_id_invalid": 460, "pm_peer_id_list_all_id": 460, "pm_whitelist_set": 460, "pm_device_identities_list_set": 460, "dfu_servic": 460, "microbit_ble_partial_flash": 460, "partial_flash": 460, "microbit_ble_device_information_servic": 460, "device_information_servic": 460, "modelvers": 460, "disnam": 460, "ble_dis_init_t": 460, "disi": 460, "dis_char_rd_sec": 460, "sec_open": 460, "manufact_name_str": 460, "model_num_str": 460, "serial_num_str": 460, "hw_rev_str": 460, "fw_rev_str": 460, "sw_rev_str": 460, "ble_dis_sys_id_t": 460, "p_sys_id": 460, "ble_dis_reg_cert_data_list_t": 460, "p_reg_cert_data_list": 460, "ieee": 460, "11073": 460, "20601": 460, "regulatori": 460, "certif": 460, "ble_dis_pnp_id_t": 460, "p_pnp_id": 460, "pnp": 460, "ble_dis_init": 460, "microbit_ble_event_servic": 460, "event_servic": 460, "serviceschang": 460, "microbit_ble_advertising_interv": 460, "microbit_ble_advertising_timeout": 460, "ble_conn_params_init_t": 460, "cp_init": 460, "p_conn_param": 460, "first_conn_params_update_delai": 460, "app_timer_tick": 460, "next_conn_params_update_delai": 460, "max_conn_params_update_count": 460, "start_on_notify_cccd_handl": 460, "ble_gatt_handle_invalid": 460, "disconnect_on_fail": 460, "ble_conn_params_init": 460, "setadvertiseondisconnect": 460, "bind": 460, "privaci": 460, "unreach": 460, "whiltelist": 460, "ble_conn_state_for_each_connect": 460, "ble_gap_tx_power_role_adv": 460, "sd_ble_gap_tx_power_set": 460, "pm_peer_count": 460, "pairingrequest": 460, "microbit_ble_pair_request": 460, "microbit_ble_pair_failur": 460, "microbit_ble_pair_success": 460, "microbit_ble_pair_auth": 460, "microbit_ble_pair_upd": 460, "microbit_ble_pair_check": 460, "pairingcomplet": 460, "currentmod": 460, "microbit_mode_pair": [460, 470], "microbit_ble_pair_complet": 460, "microbit_ble_status_disconnect": 460, "auth": [460, 461], "microbit_ble_status_shutdown": 460, "nrf_pwr_mgmt_shutdown": 460, "nrf_pwr_mgmt_shutdown_continu": 460, "sd_ble_gap_adv_start": 460, "stopadvertis": 460, "sd_ble_gap_adv_stop": 460, "microbit_id_bl": 460, "microbit_ble_evt_disconnect": 460, "advertiseondisconnect": 460, "ble_conn_state_peripheral_conn_count": [460, 461], "advertiseeddystoneurl": 460, "url": [460, 465], "calibratedpow": [460, 465], "framesizeurl": [460, 465], "geturl": [460, 465], "advertiseeddystoneuid": 460, "uid_namespac": [460, 465], "uid_inst": [460, 465], "framesizeuid": [460, 465], "getuid": [460, 465], "pairingmod": 460, "authorisationbutton": 460, "timeinpairingmod": 460, "fadedirect": 460, "showmanagementmodeanim": 460, "visualis": 460, "histogram": 460, "identif": 460, "shownamehistogram": 460, "arrow": [460, 645], "microbit_ble_pair_passcod": 460, "15000": 460, "microbit_ble_pairing_timeout": 460, "reliabl": [460, 652], "c2": 460, "c3": 460, "c4": 460, "makecod": 460, "93264": 460, "81126": 460, "90471": 460, "58367": 460, "mgmt_anim": 460, "mgmt": 460, "bt_icon_raw": 460, "bt_icon": 460, "visual": [460, 646, 647, 651, 653, 659], "microbit_dfu_histogram_width": 460, "microbit_dfu_histogram_height": 460, "restartinblemod": [460, 470], "rebootmod": 460, "rebootmodevalu": 460, "getcurrentmod": [460, 470], "prepareforshutdown": 460, "shutdownok": 460, "ble_conn_state_conn_count": 460, "app_timer_paus": 460, "nrf_sdh_is_suspend": 460, "rtc1_irqn": 460, "mwu_irqn": 460, "swi5_egu5_irqn": 460, "power_clock_irqn": 460, "rtc0_irqn": 460, "nrf_sdh_suspend": 460, "nrf_sdh_resum": 460, "app_timer_resum": 460, "dfu": 460, "intact": 460, "pm_local_database_has_chang": 460, "service_changed_pend": 460, "peer_id": 460, "ret_code_t": 460, "err_cod": 460, "service_changed_st": 460, "pm_peer_data_flash_t": 460, "peer_data": 460, "p_service_changed_pend": 460, "pds_next_peer_id_get": 460, "pdb_peer_data_ptr_get": 460, "pm_peer_data_id_service_changed_pend": 460, "err": [460, 463], "hasn": 460, "problem": 460, "pm_evt_peer_data_update_succeed": 460, "dm": 460, "ble_advdata_t": 460, "p_advdata": 460, "configureadvertis": 460, "ble_gap_adv_params_t": 460, "gap_adv_param": 460, "ble_gap_adv_type_connectable_scannable_undirect": 460, "ble_gap_adv_type_nonconnectable_scannable_undirect": 460, "625": 460, "ble_gap_adv_interval_min": 460, "ble_gap_adv_interval_max": 460, "filter_polici": 460, "ble_gap_adv_fp_filter_both": 460, "ble_gap_adv_fp_ani": 460, "primary_phi": 460, "ble_gap_phy_1mbp": 460, "ble_gap_adv_data_t": 460, "gap_adv_data": 460, "adv_data": 460, "ble_advdata_encod": 460, "nrf_log_hexdump_info": 460, "sd_ble_gap_adv_set_configur": 460, "advdata": 460, "name_typ": 460, "ble_advdata_full_nam": 460, "ble_gap_adv_flag_br_edr_not_support": 460, "ble_gap_adv_flag_le_general_disc_mod": 460, "ble_uuid_t": [460, 461], "esuuid": 460, "0xfeaa": 460, "ble_uuid_type_bl": 460, "ble_advdata_service_data_t": 460, "service_data": 460, "service_uuid": 460, "ble_advdata_no_nam": 460, "ble_gap_adv_flags_le_only_general_disc_mod": 460, "uuids_complet": 460, "uuid_cnt": 460, "p_uuid": 460, "service_data_count": 460, "p_service_data_arrai": 460, "ble_gap_tx_power_role_conn": 460, "microbit_ble_evt_connect": 460, "sd_evt_irqhandl": 460, "consid": [460, 658], "dispatch": 460, "evt_id": [460, 461, 462], "ble_gap_evt_disconnect": [460, 461], "ble_gap_evt_connect": [460, 461], "gap_evt": 460, "ble_gap_evt_phy_update_request": 460, "ble_gap_phys_t": 460, "phy": 460, "tx_phy": 460, "ble_gap_phy_auto": 460, "rx_phy": 460, "sd_ble_gap_phy_upd": 460, "ble_gap_evt_passkey_displai": 460, "passkey_displai": 460, "ble_gap_passkey_len": 460, "ble_gattc_evt_timeout": 460, "sd_ble_gap_disconnect": 460, "gattc_evt": 460, "ble_hci_remote_user_terminated_connect": 460, "ble_gatts_evt_timeout": 460, "gatts_evt": [460, 461], "ble_gap_evt_auth_statu": 460, "auth_statu": 460, "ble_gap_sec_status_success": 460, "pm_handler_on_pm_evt": 460, "pm_handler_flash_clean": 460, "pm_evt_bonded_peer_connect": 460, "pm_evt_conn_sec_start": 460, "pm_evt_conn_sec_config_req": 460, "pm_conn_sec_config_t": 460, "conn_sec_config": 460, "allow_repair": 460, "pm_conn_sec_config_repli": 460, "pm_evt_conn_sec_params_req": 460, "pm_conn_sec_params_repli": 460, "By": [460, 643, 651, 659, 662], "pm_evt_conn_sec_succeed": 460, "pm_evt_conn_sec_fail": 460, "peer_data_update_succeed": 460, "data_id": 460, "pm_evt_peer_data_update_fail": 460, "peer_data_update_fail": 460, "fds_err_not_found": 460, "ble_srv_ascii_to_utf8": 460, "cast": 460, "temporari": 460, "p_str": 460, "microbit_ble_shutdown_handl": 460, "nrf_pwr_mgmt_evt_t": 460, "nrf_pwr_mgmt_evt_prepare_reset": 460, "nrf_pwr_mgmt_evt_prepare_dfu": 460, "sd_softdevice_dis": 460, "hang": 460, "nrf_sdh_request_observ": 460, "fstorag": 460, "nrf_sdh_disable_request": 460, "nrf_sdh_is_en": 460, "nrf_pwr_mgmt_evt_prepare_wakeup": 460, "nrf_pwr_mgmt_evt_prepare_sysoff": 460, "lint": 460, "esym": 460, "528": 460, "m_ble_dfu_shutdown_handl": 460, "nrf_pwr_mgmt_handler_regist": 460, "microbit_ble_sdh_req_handl": 460, "nrf_sdh_req_evt_t": 460, "changeok": 460, "nrf_sdh_evt_enable_request": 460, "nrf_sdh_evt_disable_request": 460, "microbit_dfu_sdh_req_ob": 460, "microbit_dfu_evt_handl": 460, "ble_dfu_buttonless_evt_type_t": 460, "ble_dfu_buttonless_init_t": 460, "dfus_init": 460, "evt_handl": 460, "ble_dfu_buttonless_init": 460, "ble_dfu_evt_bootloader_enter_prepar": 460, "ble_dfu_evt_bootloader_ent": 460, "ble_dfu_evt_bootloader_enter_fail": 460, "device_hardware_configuration_error": 460, "ble_dfu_evt_response_send_error": 460, "microbit_panic_sd_assert": 460, "device_cpu_sdk": 460, "microbit_panic_app_memacc": 460, "microbit_panic_sdk_assert": 460, "microbit_panic_sdk_error": 460, "microbit_panic_sdk_unknown": 460, "app_error_fault_handl": 460, "pc": [460, 651], "nrf_log_final_flush": 460, "nrf_fault_id_sd_assert": 460, "nrf_fault_id_app_memacc": 460, "nrf_fault_id_sdk_assert": 460, "assert_info_t": 460, "p_info": 460, "sdk": 460, "p_file_nam": 460, "line_num": 460, "nrf_fault_id_sdk_error": 460, "error_info_t": 460, "npc": 460, "nrf_strerror_get": 460, "fault": 460, "08x": 460, "dmesgf": 460, "uncom": 460, "0xfa": [461, 470], "0xa8": [461, 470], "bs_uuid_typ": 461, "bs_service_handl": 461, "getshar": [461, 462], "addservic": [461, 462], "removeservic": [461, 462], "bytes16uuid": 461, "ble_uuid128_t": 461, "uuid128": 461, "sd_ble_uuid_vs_add": 461, "sd_ble_gatts_service_add": 461, "ble_gatts_srvc_type_primari": 461, "init_len": 461, "prop": 461, "ble_add_char_params_t": 461, "uuid_typ": 461, "p_init_valu": 461, "is_var_len": 461, "char_prop": 461, "microbit_propwrite_without": [461, 466, 470, 472], "write_wo_resp": 461, "microbit_propind": [461, 472], "microbit_propsigned_writ": 461, "auth_signed_wr": 461, "microbit_propbroadcast": 461, "ble_gatt_char_ext_props_t": 461, "char_ext_prop": 461, "microbit_propreadauth": [461, 466, 467, 468], "is_defered_read": 461, "microbit_propwriteauth": 461, "is_defered_writ": 461, "read_access": 461, "security_req_t": 461, "write_access": 461, "cccd_write_access": 461, "is_value_us": 461, "ble_add_char_user_desc_t": 461, "p_user_descr": 461, "ble_gatts_char_pf_t": 461, "p_presentation_format": 461, "characteristic_add": 461, "ble_gatts_char_handles_t": 461, "charhandl": 461, "sccd": 461, "getconnectionhandl": 461, "ble_conn_state_conn_handle_list_t": 461, "ble_conn_state_periph_handl": 461, "charhandletoidx": 461, "microbit_charattr_t": 461, "charcount": 461, "characteristiccount": 461, "microbit_charhandles_t": 461, "microbit_charattrvalu": 461, "microbit_charattrdesc": 461, "microbit_charattrcccd": 461, "microbit_charattrsccd": 461, "microbit_charattrinvalid": 461, "onbleev": [461, 462], "characteristicptr": 461, "setcccd": 461, "ble_gatts_evt_rw_authorize_request": 461, "onauthorizerequest": 461, "ble_gatts_evt_hvc": 461, "onhvc": 461, "ble_gatts_evt_writ": 461, "onwrit": 461, "ble_gatts_evt_write_t": 461, "p_evt_writ": 461, "uint16_decod": 461, "authorize_request": 461, "ble_gatts_authorize_type_invalid": 461, "ble_gatts_authorize_type_read": 461, "onauthorizeread": 461, "ble_gatts_authorize_type_writ": 461, "onauthorizewrit": 461, "ble_gatts_evt_read_t": 461, "ble_gatts_rw_authorize_reply_params_t": 461, "ble_gatts_authorize_params_t": 461, "gatt_statu": 461, "ble_gatt_status_success": 461, "sd_ble_gatts_rw_authorize_repli": 461, "microbit_ondataread_t": [461, 466, 467, 468], "ondataread": [461, 466, 467, 468], "ble_gatt_status_atterr_read_not_permit": 461, "onconfirm": [461, 472], "hvc": 461, "microbit_ble_evt_hvc_t": [461, 472], "bs_services_count": 462, "microbit_ble_services_max": 462, "bs_servic": 462, "microbit_ble_services_on_ble_evt": 462, "microbit_ble_services_ob": 462, "microbit_ble_services_observer_prio": 462, "microbit_dmesg_level": 463, "microbit_dmesg_level_debug": 463, "microbit_ble_ret_code_t": 463, "microbit_ble_on_error": 463, "nrf_log_flush": 463, "microbit_debug_dmesgn": 463, "0x9882": 464, "0xda90": 464, "0xda91": 464, "buttonadatacharacteristicbuff": 464, "buttonbdatacharacteristicbuff": 464, "mbbs_cidxa": 464, "mbbs_cidxb": 464, "crash": [464, 466], "microbit_id_button_a": [464, 643], "microbit_evt_ani": [464, 466, 469, 470], "buttonaupd": 464, "microbit_id_button_b": 464, "buttonbupd": 464, "microbit_button_evt_up": 464, "microbit_button_evt_down": 464, "microbit_button_evt_hold": 464, "_instanc": 465, "eddystone_uuid": 465, "0xfe": 465, "eddystone_url_prefix": 465, "eddystone_url_prefixes_length": 465, "eddystone_url_suffix": 465, "edu": 465, "net": 465, "biz": 465, "gov": 465, "eddystone_url_suffixes_length": 465, "eddystone_url_max_length": 465, "eddystone_url_frame_typ": 465, "eddystone_uid_namespace_max_length": 465, "eddystone_uid_instance_max_length": 465, "eddystone_uid_frame_typ": 465, "rawfram": 465, "plength": 465, "urldatalength": 465, "urldata": 465, "prefixlen": 465, "strncmp": 465, "suffix": 465, "suffixlen": 465, "catch": 465, "uiddata": 465, "uid": 465, "externalev": [466, 472, 642], "0x93af": 466, "0x9775": 466, "0xb84c": 466, "0x5404": 466, "0x23c4": 466, "clienteventbuff": 466, "microbiteventbuff": 466, "microbitrequirementsbuff": 466, "clientrequirementsbuff": 466, "messagebuslisteneroffset": 466, "mbbs_cidxmev": 466, "eventserviceev": 466, "mbbs_cidxcev": 466, "mbbs_cidxcreq": 466, "mbbs_cidxmreq": 466, "onmicrobitev": 466, "microbit_id_ani": 466, "client": [466, 470], "characterisit": [466, 467], "emtpi": 466, "microbitlisten": 466, "0x127b": 467, "0x5899": 467, "0xb9fe": 467, "0xd822": 467, "0x8d00": 467, "_io": 467, "iopinserviceadcharacteristicbuff": 467, "iopinserviceiocharacteristicbuff": 467, "iopinserviceiodata": 467, "iopinservicepwmcharacteristicbuff": 467, "analogu": 467, "mbbs_cidxadc": 467, "monitor": 467, "iopinserivedata": 467, "mbbs_cidxio": 467, "mbbs_cidxpwm": 467, "iopinservicedatacharacteristicbuff": 467, "microbitpin": [467, 657], "edgepin": 467, "microbit_io_pin_service_pincount": 467, "isanalog": 467, "isactiveinput": 467, "updatebleinput": 467, "updateal": 467, "microbit_io_pin_service_data_s": 467, "iopwmdata": 467, "pwm_data": 467, "is_valid_length": 467, "field_count": 467, "armmb": 467, "iodata": 467, "0xd91d": [468, 470], "0x7b77": 468, "0x93ee": 468, "0x0d2d": 468, "matrixvalu": 468, "textvalu": 468, "speedvalu": 468, "microbit_default_scroll_spe": 468, "mbbs_cidxmatrix": 468, "mbbs_cidxtext": 468, "mbbs_cidxspe": 468, "represent": [468, 657], "utf8": 468, "subsquent": 468, "0xf2d8": 469, "0xfb11": 469, "0x9715": 469, "0x386c": 469, "0xb358": 469, "magnetometerdatacharacteristicbuff": 469, "magnetometerbearingcharacteristicbuff": 469, "magnetometerperiodcharacteristicbuff": 469, "magnetometercalibrationcharacteristicbuff": 469, "mbbs_cidxbear": 469, "mbbs_cidxcalib": 469, "microbit_compass_evt_data_upd": 469, "compassev": 469, "microbit_compass_evt_config_need": 469, "microbit_compass_evt_calibration_need": 469, "calibratecompass": 469, "rc": 469, "compass_calibration_completed_ok": 469, "compass_calibration_completed_err": 469, "magnetometerupd": 469, "sampleperiodupdateneed": 469, "compass_calibration_request": 469, "nrf_dfu_typ": 470, "base_uuid": [470, 472], "0x3b10": 470, "micropython_fs_start": 470, "micropython_fs_end": 470, "characteristicvalu": 470, "mbbs_cidxctrl": 470, "microbit_id_partial_flash": 470, "partialflashingev": 470, "region_info": 470, "micropython": 470, "region_python": 470, "0xff000000": 470, "0x00ff0000": 470, "0x0000ff00": 470, "0x000000ff": 470, "packetcount": 470, "blockpacketcount": 470, "blocknum": 470, "flash_data": 470, "flashdata": 470, "end_of_transmiss": 470, "embed": 470, "border": 470, "microbit_statu": 470, "flashnotificationbuff": 470, "partial_flashing_vers": 470, "microbit_mode_appl": 470, "packetnum": 470, "batch": 470, "validatebootloaderset": 470, "nrf_dfu_settings_t": 470, "microbit_bootloader_set": 470, "boot_validation_app": 470, "no_valid": 470, "setdefaultbootloaderset": 470, "settings_vers": 470, "bank_0": 470, "bank_cod": 470, "nrf_dfu_bank_valid_app": 470, "validate_crc": 470, "image_s": 470, "image_crc": 470, "offsetof": 470, "init_command": 470, "boot_validation_crc": 470, "boot_validation_softdevic": 470, "boot_validation_t": 470, "settingssizeinword": 470, "pset": 470, "backup": 470, "pbackup": 470, "microbit_mbr_param": 470, "flashincomplet": 470, "flashincompletev": 470, "blockpoint": 470, "reboot": 470, "eraseuserstorag": 470, "0x6100": 471, "0x9250": 471, "0x1b25": 471, "_thermomet": 471, "thermomet": [471, 648, 661], "temperaturedatacharacteristicbuff": 471, "temperatureperiodcharacteristicbuff": 471, "microbit_id_thermomet": 471, "temperatureupd": 471, "0xa3": 472, "0xf3": 472, "0x93": 472, "0xe5": 472, "0x0001": 472, "uart": [472, 643], "nu": 472, "microbit_ble_nordic_style_uart": 472, "nordicsemi": 472, "nrf_connect_sdk": 472, "doc": [472, 662], "undefin": 472, "0x0003": 472, "0x0002": 472, "microbit_uart_s_attrs": 472, "txbufferhead": 472, "txbuffertail": 472, "rxbufferhead": 472, "rxbuffertail": 472, "txvalues": 472, "waitingforempti": 472, "mbbs_cidxrx": 472, "mbbs_cidxtx": 472, "microbit_id_notifi": 472, "microbit_uart_s_evt_tx_empti": 472, "sendnext": 472, "byteiter": 472, "microbit_id_ble_uart": 472, "microbit_uart_s_evt_delim_match": 472, "microbit_uart_s_evt_head_match": 472, "microbit_uart_s_evt_rx_ful": 472, "getc": 472, "microbitserialmod": 472, "indicatechrvalueen": 472, "attribut": 472, "txbuffernext": 472, "mbed_invok": 473, "pinmod": 474, "pulldown": 474, "pinnam": [474, 475, 476], "microbitbuttoneventconfigur": 474, "pin_capability_digit": 474, "pinnumb": [474, 475, 476], "p_number": 474, "nrf52i2c": 475, "pin_capability_al": [475, 476], "oldrx": 476, "oldtx": 476, "subdirectori": 484, "doxygenvari": [485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641], "dmasinglewireseri": 642, "singlewireseri": 642, "spiflash": 642, "mma8453": 642, "streamfilt": 642, "managedtyp": 642, "microbitutil": 642, "microbitsynth": 642, "mseevent": 642, "digitalin": 642, "digitalout": 642, "interruptpin": 642, "mbedtim": 642, "microbitcompon": 642, "pwmout": 642, "ticker": 642, "instal": [643, 645, 646, 648], "your": [643, 645, 647, 650, 651, 652, 653, 655, 659], "orient": [643, 655, 659], "friend": 643, "sit": [643, 659], "slightli": [643, 648, 652, 659], "fuzzi": 643, "tradit": 643, "compter": 643, "tablet": [643, 655], "phone": [643, 655], "isol": 643, "interact": 643, "hide": [643, 645], "sort": [643, 645], "fantasi": 643, "world": [643, 661], "whatev": 643, "realiti": 643, "except": [643, 645, 661], "contrast": 643, "abund": 643, "describ": [643, 644, 645, 653], "realis": 643, "wherebi": 643, "perspect": 643, "exception": 643, "buss": 643, "encount": 643, "lower": [643, 659], "simplifi": 643, "architectur": [643, 661], "conceptu": 643, "compos": 643, "heavi": 643, "lift": 643, "One": [643, 661], "neatli": 643, "circuitri": 643, "entir": [643, 645, 653], "inde": 643, "exot": 643, "nmea": 643, "ublox": 643, "gp": 643, "rst": 643, "devid": 643, "three": [643, 659, 662], "aspect": 643, "respond": 643, "piec": [643, 644, 650, 651, 652], "util": [643, 661], "togeth": [643, 650], "pragmat": 643, "decis": 643, "seper": 643, "pragramat": 643, "approach": 643, "diagram": [643, 659], "uncommon": [643, 651], "runtim": [643, 650, 651, 659, 662], "achiev": 643, "exact": 643, "counterpart": 643, "soon": [643, 650, 651, 652, 655, 659], "sometim": [643, 645, 659], "freefal": 643, "programm": [643, 650, 661], "feel": [643, 644], "microbit_button_evt_click": 643, "easi": [643, 650, 651, 659], "lke": 643, "microbitmessagebu": 643, "rememb": 643, "tell": [643, 645, 651, 659], "mention": 643, "topic": 643, "section": [643, 647, 650, 653, 659], "cooper": [643, 662], "multi": [643, 662], "style": [643, 650], "arduino": 643, "virtual": 643, "hood": 643, "suit": 643, "gnu": [643, 647], "make_": 643, "makefil": 643, "cmake": [643, 645, 647], "py": [643, 645], "script": [643, 645], "design": [643, 645, 651, 659], "greatli": 643, "deploy": 643, "plan": 643, "bootstrap": [643, 646, 653], "repositori": [643, 644, 647, 654], "streamlin": 643, "timelin": 643, "replic": 643, "slight": [643, 653], "workflow": 643, "migrat": 643, "custom": 643, "real": [643, 661], "pyocd": [643, 645, 647], "openocd": [643, 645, 647], "json": [643, 645], "gpio": [643, 659], "analog": 643, "disco": [643, 648, 654], "hot": 643, "potato": 643, "alien": 643, "scanner": 643, "text": [643, 650, 651, 653, 661], "ecosystem": 644, "miss": [644, 658], "clarif": 644, "pleas": [644, 645, 647], "suggest": 644, "cover": 645, "tool": [645, 646, 648], "folder": 645, "download": [645, 647], "consol": 645, "navig": 645, "At": 645, "bare": [645, 653], "bone": [645, 653], "goe": 645, "wise": 645, "idea": 645, "highlight": 645, "intellisens": 645, "life": 645, "easier": [645, 650], "prompt": [645, 647, 653], "icon": [645, 651], "f1": 645, "eabi": [645, 647], "accept": [645, 647], "spot": 645, "breakpoint": 645, "certain": 645, "resum": 645, "manual": [645, 647, 655, 658, 664], "websit": 645, "debugg": 645, "cortex": 645, "Then": 645, "githubusercont": 645, "vscode": 645, "consult": 645, "panel": 645, "box": [645, 662], "plug": 645, "green": 645, "correspond": 645, "editor": [645, 653], "varieti": 645, "reconnect": 645, "bake": 645, "mac": [646, 662], "linux": [646, 662], "studio": [646, 647, 653], "newer": 647, "git": 647, "scm": 647, "toolchain": 647, "recommend": [647, 662], "winget": 647, "preinstal": 647, "powershel": 647, "gui": 647, "gnuarmembeddedtoolchain": 647, "kitwar": 647, "visualstudiocod": 647, "ninja": 647, "successfulli": 647, "pip": 647, "nor": 647, "modern": [647, 650, 651, 655], "python3": 647, "sudo": 647, "contribut": 648, "relat": 648, "deviat": 648, "tree": 648, "zone": 648, "glossari": 648, "term": [648, 651, 661], "manipul": [649, 659], "joe": 650, "languag": 650, "commonli": 650, "liter": 650, "almost": [650, 661], "exactli": [650, 653, 659], "fantast": 650, "leak": [650, 651], "learn": 650, "java": 650, "javascript": 650, "touchdevelop": 650, "equival": [650, 659], "quot": 650, "anytim": 650, "even": [650, 659], "fine": 650, "legal": 650, "constructor": [650, 651], "thank": 650, "immut": 650, "overload": 650, "sai": 650, "alphabet": 650, "retriev": 650, "respect": 650, "pictur": 651, "graphic": 651, "shown": 651, "2x2": 651, "emoji": 651, "seri": [651, 662], "newlin": 651, "3x3": 651, "earlier": 651, "ordin": [651, 659], "somewher": 651, "worri": 651, "anymor": 651, "perfectli": 651, "dosometh": 651, "unlik": [651, 659], "gigabyt": 651, "four": 651, "thousand": 651, "million": 651, "kilobyt": 651, "commit": 651, "preciou": 651, "abil": 651, "complic": 651, "bottom": [651, 659], "corneri": 651, "heart": 651, "benefici": 652, "wireless": 652, "network": 652, "freeli": 652, "dereferenc": 652, "bracket": 652, "granular": 652, "strength": 652, "rough": 652, "crude": 652, "moder": 652, "mechan": [652, 657], "beginn": 653, "demo": 653, "rewritten": 653, "flicker": 653, "reproduc": 653, "sustain": 653, "gentli": 653, "decreas": 653, "Will": 653, "talk": 653, "skeleton": 653, "thankfulli": 653, "clever": 653, "subsystem": 653, "louder": 653, "onboard": [655, 658], "md": [655, 657, 658, 659, 663], "plane": [655, 658], "smart": 655, "deceler": 655, "airbag": 655, "vehicl": 655, "deploi": 655, "graviti": 655, "ball": 655, "air": 655, "decent": 655, "variant": [655, 658], "tech": [655, 658], "datasheet": [655, 658], "lsm303agr": [655, 658], "addition": [655, 658, 664], "side": 657, "buttona": [657, 661], "buttonb": [657, 661], "intuit": 657, "expos": [657, 662], "third": 657, "buttonab": [657, 661], "microbitmultibutton": 657, "notori": 657, "renown": 657, "perceiv": 657, "singl": [657, 659, 663], "unreli": 657, "combat": 657, "techniqu": [657, 659], "vice": 657, "versa": 657, "variat": [657, 659], "resist": 657, "electron": 658, "magnet": 658, "situat": 658, "crucial": 658, "north": 658, "alon": 658, "conjunct": 658, "inaccuraci": 658, "inaccur": 658, "far": 658, "product": [658, 662], "nxp": 658, "affect": [658, 659], "nearbi": 658, "inexpens": 659, "tend": 659, "attract": 659, "coher": 659, "scarc": 659, "nine": 659, "ground": 659, "5x5": 659, "grid": 659, "multiplex": 659, "moreov": 659, "faster": 659, "ey": 659, "illus": 659, "vision": 659, "tv": 659, "18m": 659, "15m": 659, "fun": 659, "typefac": 659, "upper": 659, "letter": 659, "symbol": 659, "watch": 659, "numer": 659, "disappear": 659, "peep": 659, "ident": 659, "understand": 659, "former": 659, "batteri": 659, "latter": 659, "setdiplaymod": 659, "ambient": [659, 664], "n32": 659, "illustr": 659, "overal": 659, "wrong": 659, "photodiod": 659, "room": 659, "lot": 659, "daunt": 659, "notabl": 661, "lack": 661, "preconfigur": 661, "periperh": 661, "obviou": 661, "adctim": 661, "captouchtim": 661, "nrf52touchsensor": 661, "ledmatrixmap": 661, "logo": 661, "exchang": 662, "circular": 662, "baud": 662, "115200": 662, "accommod": 662, "incom": 662, "outgo": 662, "inherit": 662, "rawseri": 662, "mbed_offici": 662, "252557024ec3": 662, "classmbed_1_1rawseri": 662, "incur": 662, "multithread": 662, "kl26z": 662, "prototyp": 662, "updating_your_daplink_firmwar": 662, "osx": 662, "handbook": 662, "microbit_debug": 662, "firsttim": 663, "kb": 663, "forgotten": 663, "technologi": 663, "stick": 663, "utilis": 663, "blemanag": 663, "experi": 663}, "objects": {"": [[478, 0, 1, "_CPPv4N5codal16ST7735WorkBufferE", "codal::ST7735WorkBuffer"], [478, 1, 1, "_CPPv4N5codal16ST7735WorkBuffer7dataBufE", "codal::ST7735WorkBuffer::dataBuf"], [478, 1, 1, "_CPPv4N5codal16ST7735WorkBuffer10expPaletteE", "codal::ST7735WorkBuffer::expPalette"], [478, 1, 1, "_CPPv4N5codal16ST7735WorkBuffer6heightE", "codal::ST7735WorkBuffer::height"], [478, 1, 1, "_CPPv4N5codal16ST7735WorkBuffer10inProgressE", "codal::ST7735WorkBuffer::inProgress"], [478, 1, 1, "_CPPv4N5codal16ST7735WorkBuffer12paletteTableE", "codal::ST7735WorkBuffer::paletteTable"], [478, 1, 1, "_CPPv4N5codal16ST7735WorkBuffer7srcLeftE", "codal::ST7735WorkBuffer::srcLeft"], [478, 1, 1, "_CPPv4N5codal16ST7735WorkBuffer6srcPtrE", "codal::ST7735WorkBuffer::srcPtr"], [478, 1, 1, "_CPPv4N5codal16ST7735WorkBuffer5widthE", "codal::ST7735WorkBuffer::width"], [478, 1, 1, "_CPPv4N5codal16ST7735WorkBuffer1xE", "codal::ST7735WorkBuffer::x"], [282, 2, 1, "_CPPv4N5codal19allocateNotifyEventEv", "codal::allocateNotifyEvent"], [291, 2, 1, "_CPPv4N5codal11ble_runningEv", "codal::ble_running"], [591, 1, 1, "_CPPv4N5codal12currentFiberE", "codal::currentFiber"], [595, 1, 1, "_CPPv4N5codal9fiberListE", "codal::fiberList"], [596, 1, 1, "_CPPv4N5codal9fiberPoolE", "codal::fiberPool"], [593, 1, 1, "_CPPv4N5codal11fiber_flagsE", "codal::fiber_flags"], [594, 1, 1, "_CPPv4N5codal11forkedFiberE", "codal::forkedFiber"], [590, 1, 1, "_CPPv4N5codal9idleFiberE", "codal::idleFiber"], [628, 1, 1, "_CPPv4N5codal8initCmdsE", "codal::initCmds"], [597, 1, 1, "_CPPv4N5codal10messageBusE", "codal::messageBus"], [616, 1, 1, "_CPPv4N5codal15microbit_LEDMapE", "codal::microbit_LEDMap"], [480, 3, 1, "_CPPv4N5codal23microbit_LEDMapFnRCtoXYE", "codal::microbit_LEDMapFnRCtoXY"], [482, 3, 1, "_CPPv4N5codal24microbit_LEDMapPinNumberE", "codal::microbit_LEDMapPinNumber"], [479, 0, 1, "_CPPv4N5codal18microbit_LEDMapStrE", "codal::microbit_LEDMapStr"], [481, 3, 1, "_CPPv4N5codal18microbit_LEDMapStrE", "codal::microbit_LEDMapStr"], [479, 1, 1, "_CPPv4N5codal18microbit_LEDMapStr10columnPinsE", "codal::microbit_LEDMapStr::columnPins"], [479, 1, 1, "_CPPv4N5codal18microbit_LEDMapStr7columnsE", "codal::microbit_LEDMapStr::columns"], [479, 1, 1, "_CPPv4N5codal18microbit_LEDMapStr6heightE", "codal::microbit_LEDMapStr::height"], [479, 1, 1, "_CPPv4N5codal18microbit_LEDMapStr8mapRCtoXE", "codal::microbit_LEDMapStr::mapRCtoX"], [479, 1, 1, "_CPPv4N5codal18microbit_LEDMapStr8mapRCtoYE", "codal::microbit_LEDMapStr::mapRCtoY"], [479, 1, 1, "_CPPv4N5codal18microbit_LEDMapStr7rowPinsE", "codal::microbit_LEDMapStr::rowPins"], [479, 1, 1, "_CPPv4N5codal18microbit_LEDMapStr4rowsE", "codal::microbit_LEDMapStr::rows"], [479, 1, 1, "_CPPv4N5codal18microbit_LEDMapStr5widthE", "codal::microbit_LEDMapStr::width"], [287, 2, 1, "_CPPv4N5codal21microbit_LEDMap_RCtoXEii", "codal::microbit_LEDMap_RCtoX"], [287, 4, 1, "_CPPv4N5codal21microbit_LEDMap_RCtoXEii", "codal::microbit_LEDMap_RCtoX::col"], [287, 4, 1, "_CPPv4N5codal21microbit_LEDMap_RCtoXEii", "codal::microbit_LEDMap_RCtoX::row"], [289, 2, 1, "_CPPv4N5codal21microbit_LEDMap_RCtoYEii", "codal::microbit_LEDMap_RCtoY"], [289, 4, 1, "_CPPv4N5codal21microbit_LEDMap_RCtoYEii", "codal::microbit_LEDMap_RCtoY::col"], [289, 4, 1, "_CPPv4N5codal21microbit_LEDMap_RCtoYEii", "codal::microbit_LEDMap_RCtoY::row"], [298, 2, 1, "_CPPv4N5codal25microbit_LEDMap_columnOffEi", "codal::microbit_LEDMap_columnOff"], [298, 4, 1, "_CPPv4N5codal25microbit_LEDMap_columnOffEi", "codal::microbit_LEDMap_columnOff::col"], [297, 2, 1, "_CPPv4N5codal24microbit_LEDMap_columnOnEib", "codal::microbit_LEDMap_columnOn"], [297, 4, 1, "_CPPv4N5codal24microbit_LEDMap_columnOnEib", "codal::microbit_LEDMap_columnOn::col"], [297, 4, 1, "_CPPv4N5codal24microbit_LEDMap_columnOnEib", "codal::microbit_LEDMap_columnOn::on"], [617, 1, 1, "_CPPv4N5codal26microbit_LEDMap_columnPinsE", "codal::microbit_LEDMap_columnPins"], [286, 2, 1, "_CPPv4N5codal25microbit_LEDMap_configureEv", "codal::microbit_LEDMap_configure"], [285, 2, 1, "_CPPv4N5codal25microbit_LEDMap_pinOutputE7uint8_t", "codal::microbit_LEDMap_pinOutput"], [285, 4, 1, "_CPPv4N5codal25microbit_LEDMap_pinOutputE7uint8_t", "codal::microbit_LEDMap_pinOutput::pin"], [288, 2, 1, "_CPPv4N5codal22microbit_LEDMap_rowOffEi", "codal::microbit_LEDMap_rowOff"], [288, 4, 1, "_CPPv4N5codal22microbit_LEDMap_rowOffEi", "codal::microbit_LEDMap_rowOff::row"], [301, 2, 1, "_CPPv4N5codal21microbit_LEDMap_rowOnEi", "codal::microbit_LEDMap_rowOn"], [301, 4, 1, "_CPPv4N5codal21microbit_LEDMap_rowOnEi", "codal::microbit_LEDMap_rowOn::row"], [612, 1, 1, "_CPPv4N5codal23microbit_LEDMap_rowPinsE", "codal::microbit_LEDMap_rowPins"], [294, 2, 1, "_CPPv4N5codal22microbit_friendly_nameEv", "codal::microbit_friendly_name"], [296, 2, 1, "_CPPv4N5codal14microbit_panicEi", "codal::microbit_panic"], [296, 4, 1, "_CPPv4N5codal14microbit_panicEi", "codal::microbit_panic::statusCode"], [299, 2, 1, "_CPPv4N5codal22microbit_panic_timeoutEi", "codal::microbit_panic_timeout"], [299, 4, 1, "_CPPv4N5codal22microbit_panic_timeoutEi", "codal::microbit_panic_timeout::iterations"], [290, 2, 1, "_CPPv4N5codal15microbit_randomEi", "codal::microbit_random"], [290, 4, 1, "_CPPv4N5codal15microbit_randomEi", "codal::microbit_random::max"], [302, 2, 1, "_CPPv4N5codal14microbit_resetEv", "codal::microbit_reset"], [292, 2, 1, "_CPPv4N5codal20microbit_seed_randomE8uint32_t", "codal::microbit_seed_random"], [300, 2, 1, "_CPPv4N5codal20microbit_seed_randomEv", "codal::microbit_seed_random"], [292, 4, 1, "_CPPv4N5codal20microbit_seed_randomE8uint32_t", "codal::microbit_seed_random::seed"], [295, 2, 1, "_CPPv4N5codal22microbit_serial_numberEv", "codal::microbit_serial_number"], [614, 1, 1, "_CPPv4N5codal10panic_faceE", "codal::panic_face"], [613, 1, 1, "_CPPv4N5codal13panic_timeoutE", "codal::panic_timeout"], [589, 1, 1, "_CPPv4N5codal8runQueueE", "codal::runQueue"], [592, 1, 1, "_CPPv4N5codal10sleepQueueE", "codal::sleepQueue"], [588, 1, 1, "_CPPv4N5codal9waitQueueE", "codal::waitQueue"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:type", "4": "cpp:functionParam"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "type", "C++ type"], "4": ["cpp", "functionParam", "C++ function parameter"]}, "titleterms": {"class": [0, 191, 225, 352, 477, 483], "hierarchi": [0, 266, 477], "defin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 148, 157, 176, 191, 193, 213, 214, 215, 223, 225, 229, 230, 231, 244, 262, 477, 483], "has_thread_user_data": 1, "document": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 648], "initial_stack_depth": 2, "calibrated_sampl": 3, "ili9341_swreset": 4, "ili9341_caset": 5, "ili9341_frmctr1": 6, "ili9341_ramrd": 7, "ili9341_frmctr2": 8, "ili9341_rdid2": 9, "ili9341_frmctr3": 10, "ili9341_slpout": 11, "ili9341_pwctr1": 12, "ili9341_dispon": 13, "ili9341_rdid4": 14, "ili9341_invon": 15, "ili9341_rdid3": 16, "ili9341_madctl": 17, "ili9341_gammaset": 18, "ili9341_vmctr1": 19, "ili9341_pwctr4": 20, "ili9341_rdimgfmt": 21, "ili9341_nop": 22, "ili9341_gmctrp1": 23, "ili9341_ramwr": 24, "ili9341_dfunctr": 25, "ili9341_rddst": 26, "ili9341_slpin": 27, "ili9341_dispoff": 28, "ili9341_rddid": 29, "ili9341_ptlon": 30, "ili9341_ptlar": 31, "ili9341_rdid1": 32, "ili9341_gmctrn1": 33, "ili9341_invoff": 34, "ili9341_rdmadctl": 35, "ili9341_rdpixfmt": 36, "ili9341_invctr": 37, "ili9341_noron": 38, "ili9341_paset": 39, "ili9341_pwctr3": 40, "ili9341_rdmod": 41, "ili9341_rdselfdiag": 42, "ili9341_pixfmt": 43, "ili9341_vmctr2": 44, "ili9341_pwctr2": 45, "ili9341_vscrsadd": 46, "ili9341_pwctr5": 47, "empty_data": [48, 50, 52], "ref_tag": [49, 51, 53], "microbit_mbed_member_function_callback_cpp": 54, "calibration_incr": 55, "microbit_ledmap_pinrow1": 56, "microbit_ledmap_pincol0": 57, "microbit_ledmap_pincol1": 58, "microbit_panic_divbas": 59, "microbit_ledmap_pinrow3": 60, "microbit_ledmap_pincol3": 61, "microbit_ledmap_pinrow0": 62, "microbit_ledmap_width": 63, "microbit_ledmap_pinrow2": 64, "microbit_panic_rowdelai": 65, "microbit_ledmap_pinrow4": 66, "microbit_ledmap_height": 67, "microbit_ledmap_col": 68, "microbit_panic_msg1stdigit": 69, "microbit_ledmap_pincol2": 70, "microbit_ledmap_row": 71, "microbit_panic_clearscan": 72, "microbit_panic_msglen": 73, "microbit_ledmap_pincol4": 74, "microbit_panic_divmax": 75, "microbit_panic_scan": 76, "min": 77, "word_addr": 78, "array_len": 79, "max_string_length": 80, "st7735_ptlar": 81, "st7735_pwctr6": 82, "enc16": 83, "st7735_dispon": 84, "st7735_nop": 85, "st7735_rdid4": 86, "st7735_dispoff": 87, "st7735_swreset": 88, "assert": 89, "st7735_frmctr2": 90, "st7735_caset": 91, "st7735_frmctr3": 92, "st7735_slpin": 93, "st7735_ramrd": 94, "delai": 95, "madctl_bgr": 96, "madctl_mx": 97, "madctl_mh": 98, "st7735_madctl": 99, "st7735_rdid3": 100, "st7735_rdid1": 101, "st7735_pwctr5": 102, "st7735_pwctr4": 103, "st7735_colmod": 104, "st7735_noron": 105, "madctl_ml": 106, "st7735_slpout": 107, "databufs": 108, "st7735_vmctr1": 109, "st7735_ramwr": 110, "st7735_ptlon": 111, "swap": 112, "st7735_gmctrn1": 113, "madctl_mi": 114, "st7735_pwctr1": 115, "st7735_pwctr3": 116, "st7735_rddst": 117, "madctl_rgb": 118, "st7735_disset5": 119, "st7735_invoff": 120, "st7735_gmctrp1": 121, "madctl_mv": 122, "st7735_invctr": 123, "st7735_invon": 124, "st7735_raset": 125, "st7735_frmctr1": 126, "st7735_rddid": 127, "st7735_pwctr2": 128, "st7735_rdid2": 129, "clamp": 130, "check": 131, "directori": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 484], "librari": [132, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "subdirectori": [132, 133, 134, 140, 141], "codal": [133, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 352, 477, 480, 481, 482, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 612, 613, 614, 616, 617, 628, 642, 643, 645, 648], "core": [133, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "sourc": [134, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "file": [135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 484], "driver": [136, 137, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "model": [136, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "stream": [138, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "type": [139, 210, 211, 212, 213, 214, 215, 216, 217, 218], "microbit": [140, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "v2": [140, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "bluetooth": [142, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "compat": [143, 262, 263, 264, 265], "codalcompat": [144, 355], "cpp": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "content": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 352, 643, 646, 654], "definit": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "includ": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "variabl": [144, 148, 153, 165, 168, 170, 176, 178, 179, 180, 181, 183, 184, 186, 189, 191, 209, 210, 215, 225, 228, 229, 232, 233, 237, 240, 241, 246, 352, 477, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641], "codalcompon": [145, 356], "function": [145, 148, 153, 165, 168, 170, 179, 180, 181, 186, 189, 206, 209, 215, 217, 225, 229, 230, 232, 233, 237, 240, 241, 244, 246, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 477, 483, 659], "codaldevic": [146, 357], "codaldmesg": [147, 358], "codalfib": [148, 359], "namespac": [148, 160, 162, 176, 186, 191, 192, 214, 225, 352, 353, 477, 483], "codalheapalloc": [149, 360], "codallisten": [150, 361], "codalutil": [151, 362], "memberfunctioncallback": [152, 363], "codal_default_target_h": [153, 364], "abstractbutton": [154, 365], "acceleromet": [155, 366, 655], "codalusb": [156, 367], "compass": [157, 368, 658], "displai": [158, 369, 659], "gyroscop": [159, 370], "i2c": [160, 371], "pinperipher": [161, 372], "spi": [162, 373], "sensor": [163, 374], "serial": [164, 375, 662], "timer": [165, 376], "analogsensor": [166, 377], "animateddisplai": [167, 378], "asciikeymap": [168, 267, 379], "button": [169, 380, 657], "fxos8700": [170, 381], "ghostfat": [171, 382], "hid": [172, 383], "hidjoystick": [173, 384], "hidkeyboard": [174, 385], "hidmous": [175, 386], "ili9341": [176, 387], "keyvaluestorag": [177, 388], "ledmatrix": [178, 389], "lis3dh": [179, 390], "lsm303acceleromet": [180, 391], "lsm303magnetomet": [181, 392], "linearanalogsensor": [182, 393], "mag3110": [183, 394], "mma8653": [184, 395], "mpu6050": [185, 396], "messagebu": [186, 397, 597], "multibutton": [187, 398], "nonlinearanalogsensor": [188, 399], "pearsonhash": [189, 400], "pulsein": [190, 401], "st7735": [191, 402], "screenio": [192, 403], "standardspiflash": [193, 404], "touchbutton": [194, 405], "touchsensor": [195, 406], "usbmsc": [196, 407], "datastream": [197, 408], "effectfilt": [198, 409], "fifostream": [199, 410], "leveldetector": [200, 411], "leveldetectorspl": [201, 412], "lowpassfilt": [202, 413], "memorysourc": [203, 414], "mixer": [204, 415], "streamflowtrigg": [205, 416], "streamnorm": [206, 417], "streamrecord": [207, 418], "streamsplitt": [208, 419], "synthes": [209, 420], "bitmapfont": [210, 421], "coordinatesystem": [211, 422], "event": [212, 423, 643], "imag": [213, 424, 651, 659], "managedbuff": [214, 425], "managedstr": [215, 280, 281, 426, 650], "matrix4": [216, 427], "refcount": [217, 428], "refcountedinit": [218, 429], "fscach": [219, 430], "microbitacceleromet": [220, 431], "microbitaudio": [221, 432], "microbitcompass": [222, 433], "microbitcompasscalibr": [223, 434], "microbitcompat": [224, 435], "microbitdevic": [225, 436], "typedef": [225, 352, 477, 480, 481, 482, 483], "microbitdisplai": [226, 437], "microbitfil": [227, 438], "microbitfilesystem": [228, 439], "microbitflash": [229, 440], "microbitlog": [230, 441], "microbitmemorymap": [231, 442], "microbitpowermanag": [232, 443], "microbitradio": [233, 444], "microbitradiodatagram": [234, 445], "microbitradioev": [235, 446], "microbitthermomet": [236, 447], "microbitusbflashmanag": [237, 448], "microsynth": [238, 449], "mixer2": [239, 450], "nrf52flashmanag": [240, 451], "nrf52ledmatrix": [241, 452], "packetbuff": [242, 453, 652], "soundemojisynthes": [243, 454], "soundexpress": [244, 455], "soundoutputpin": [245, 456], "soundsynthesizereffect": [246, 457], "microbitaccelerometerservic": [247, 458], "microbitblechar": [248, 459], "microbitblemanag": [249, 460], "microbitbleservic": [250, 251, 461, 462], "microbitbletyp": [252, 463], "microbitbuttonservic": [253, 464], "microbiteddyston": [254, 465], "microbiteventservic": [255, 466], "microbitiopinservic": [256, 467], "microbitledservic": [257, 468], "microbitmagnetometerservic": [258, 469], "microbitpartialflashingservic": [259, 470], "microbittemperatureservic": [260, 471], "microbituartservic": [261, 472], "mbedmemberfunctioncallback": [262, 473], "microbitbutton": [263, 474], "microbiti2c": [264, 475], "microbitseri": [265, 476], "component_callback": 268, "getfibercontext": 269, "__create_fib": 270, "handle_fob": 271, "create_key_value_t": [272, 273, 274, 275, 276, 277, 278, 306, 308], "accelerometerperiod": [272, 274, 276], "accelerometerperioddata": [272, 274, 276, 599, 603, 605], "accelerometerrang": [273, 275, 277], "accelerometerrangedata": [273, 275, 277, 598, 602, 604], "magnetometerperiod": 278, "magnetometerperioddata": [278, 606], "oper": [280, 663], "lh": 281, "rh": [281, 610], "allocatenotifyev": 282, "async_callback": 283, "getpullmodefronpinmod": 284, "microbit_ledmap_pinoutput": 285, "microbit_ledmap_configur": 286, "microbit_ledmap_rctox": 287, "microbit_ledmap_rowoff": 288, "microbit_ledmap_rctoi": 289, "microbit_random": 290, "ble_run": 291, "microbit_seed_random": [292, 300], "uint32_t": [292, 303, 309], "__attribute__": [293, 351], "weak": [293, 351], "microbit_friendly_nam": 294, "microbit_serial_numb": 295, "microbit_pan": 296, "microbit_ledmap_columnon": 297, "microbit_ledmap_columnoff": 298, "microbit_panic_timeout": 299, "microbit_ledmap_rowon": 301, "microbit_reset": 302, "btle_set_user_evt_handl": [303, 309], "void": [303, 309], "padstr": 304, "writenum": 305, "uipmpropertylength": 306, "uipmpropertylengthdata": [306, 622], "radio_irqhandl": 307, "usbflashpropertylength": 308, "usbflashpropertylengthdata": [308, 624], "display_irq": 310, "eightbithash": 311, "isreadonlyinlin": 312, "giggl": 313, "hello": 314, "slidedata": 315, "saddata": 316, "slide": 317, "soaringdata": 318, "soar": 319, "mysteri": 320, "happydata": 321, "twinkledata": 322, "twinkl": 323, "happi": 324, "yawndata": 325, "springdata": 326, "giggledata": 327, "sad": 328, "mysteriousdata": 329, "hellodata": 330, "yawn": 331, "spring": 332, "calculatefrequencyfromprogress": 333, "write_sample_4": 334, "read_sample_7": 335, "read_sample_2": 336, "read_sample_3": 337, "read_sample_5": 338, "write_sample_7": 339, "write_sample_8": 340, "write_sample_5_6": 341, "read_sample_6": 342, "write_sample_2": 343, "read_sample_8": 344, "read_sample_1": 345, "write_sample_1": 346, "write_sample_3": 347, "read_sample_4": 348, "begin_playback": 349, "timer_callback": 350, "std": 353, "program": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "list": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "api": [477, 483, 484, 642], "full": [477, 483, 484], "struct": [477, 478, 479, 483], "st7735workbuff": 478, "microbit_ledmapstr": [479, 481], "microbit_ledmapfnrctoxi": 480, "microbit_ledmappinnumb": 482, "seq_a": [485, 553], "seq_i": [486, 543, 552, 570], "seq_slash": 487, "seq_k": [488, 518], "unmap": 489, "seq_5": 490, "seq_": [491, 492, 529, 554], "seq_g": [493, 506], "seq_spac": 494, "seq_7": 495, "seq_x": [496, 528], "seq_h": [497, 585], "seq_apostroph": 498, "seq_9": 499, "seq_backslash": 500, "seq_l": [501, 561], "seq_quest": 502, "seq_amp": 503, "seq_tilda": 504, "seq_m": [505, 563], "seq_b": [507, 533], "seq_z": [508, 544], "seq_right_paren": 509, "seq_w": [510, 546], "seq_q": [511, 547], "seq_perc": 512, "seq_angle_right": 513, "seq_j": [514, 556], "seq_plu": 515, "seq_backspac": 516, "seq_ast": 517, "seq_quot": 519, "seq_8": 520, "seq_equ": 521, "seq_v": [522, 569], "seq_brace_left": 523, "seq_semicolon": 524, "seq_d": [525, 559], "seq_newlin": 526, "seq_p": [527, 557], "seq_r": [530, 575], "seq_n": [531, 548], "seq_pound": 532, "seq_c": [534, 562], "seq_pip": 535, "seq_del": 536, "seq_f": [537, 566], "seq_o": [538, 581], "seq_1": 539, "seq_left_paren": 540, "seq_4": 541, "seq_at": 542, "seq_dot": 545, "seq_colon": 549, "seq_angle_left": 550, "seq_minu": 551, "seq_dollar": 555, "seq_brace_right": 558, "seq_u": [560, 584], "seq_comma": 564, "seq_underscor": 565, "seq_curly_left": 567, "seq_t": [568, 578], "seq_tab": 571, "seq_0": 572, "seq_hat": 573, "seq_exclamation_point": 574, "seq_2": 576, "seq_grav": 577, "seq_6": 579, "seq_curly_right": 580, "ascii_keymap": 582, "seq_3": 583, "pendolino3": 586, "random_valu": 587, "waitqueu": 588, "runqueu": 589, "idlefib": 590, "currentfib": 591, "sleepqueu": 592, "fiber_flag": 593, "forkedfib": 594, "fiberlist": 595, "fiberpool": 596, "initcmd": [600, 628], "greyscaletim": 601, "mag3110sampler": 607, "mma8653samplerang": 608, "mma8653sampler": 609, "usernotifyid": 611, "microbit_ledmap_rowpin": 612, "panic_timeout": 613, "panic_fac": 614, "microbit_device_inst": 615, "microbit_ledmap": 616, "microbit_ledmap_columnpin": 617, "friendly_nam": 618, "defaultscratchpag": 619, "flash_op_complet": [620, 625], "uipm_i2c_nop": 621, "microbit_radio_power_level": 623, "instanc": 626, "hashtabl": 627, "_majorscal": 629, "_pentatonicscal": 630, "_minortriad": 631, "_diminish": 632, "_majortriad": 633, "_wholeton": 634, "_minorscal": 635, "_chromat": 636, "sineton": 637, "cyclescal": 638, "p": 639, "old": 640, "valu": [641, 658], "The": [642, 661], "complet": 642, "get": 643, "start": 643, "what": [643, 663], "i": [643, 663], "devic": 643, "abstract": 643, "compon": [643, 649, 661], "c": 643, "micro": 643, "bit": 643, "concurr": 643, "creat": [643, 645, 650, 651], "detect": 643, "todo": 643, "build": 643, "tool": [643, 647], "project": [643, 645, 654], "guid": [643, 646], "hold": 643, "zone": 643, "temp": 643, "glossari": 644, "term": 644, "new": 645, "bootstrap": 645, "set": 645, "up": 645, "visual": 645, "studio": 645, "code": 645, "environ": 645, "debug": [645, 662], "older": 645, "instal": 647, "window": 647, "instruct": 647, "us": [647, 659], "packag": 647, "manag": 647, "addit": 647, "depend": 647, "mac": 647, "linux": 647, "debian": 647, "ubuntu": 647, "other": [647, 659], "apt": 647, "base": 647, "system": 647, "manjaro": 647, "arch": 647, "pacman": 647, "option": 647, "memori": [649, 651, 663], "storag": [649, 663], "string": 650, "manipul": [650, 651, 652], "microbitimag": 651, "compar": 651, "assign": 651, "store": 651, "flash": [651, 663], "disco": 653, "light": 653, "step": 653, "1": 653, "initi": 653, "setup": 653, "2": 653, "turn": 653, "screen": 653, "3": 653, "read": [653, 658], "from": 653, "microphon": 653, "4": 653, "ad": 653, "fade": 653, "effect": 653, "ubit": [655, 656, 658, 659, 661, 662, 663, 664], "real": [655, 658, 664], "time": [655, 658, 664], "updat": [655, 658, 664], "audio": 656, "touch": 657, "input": 657, "current": 658, "calibr": 658, "request": 658, "data": 658, "capabl": 659, "scroll": 659, "text": 659, "print": 659, "show": 659, "run": 659, "background": 659, "chang": 659, "mode": [659, 662], "access": 659, "buffer": 659, "method": 659, "synchron": 659, "asynchron": 659, "edg": 660, "connector": 660, "object": 661, "thermomet": 664}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Class Hierarchy": [[0, "class-hierarchy"], [477, "class-hierarchy"]], "Define HAS_THREAD_USER_DATA": [[1, "define-has-thread-user-data"]], "Define Documentation": [[1, "define-documentation"], [2, "define-documentation"], [3, "define-documentation"], [4, "define-documentation"], [5, "define-documentation"], [6, "define-documentation"], [7, "define-documentation"], [8, "define-documentation"], [9, "define-documentation"], [10, "define-documentation"], [11, "define-documentation"], [12, "define-documentation"], [13, "define-documentation"], [14, "define-documentation"], [15, "define-documentation"], [16, "define-documentation"], [17, "define-documentation"], [18, "define-documentation"], [19, "define-documentation"], [20, "define-documentation"], [21, "define-documentation"], [22, "define-documentation"], [23, "define-documentation"], [24, "define-documentation"], [25, "define-documentation"], [26, "define-documentation"], [27, "define-documentation"], [28, "define-documentation"], [29, "define-documentation"], [30, "define-documentation"], [31, "define-documentation"], [32, "define-documentation"], [33, "define-documentation"], [34, "define-documentation"], [35, "define-documentation"], [36, "define-documentation"], [37, "define-documentation"], [38, "define-documentation"], [39, "define-documentation"], [40, "define-documentation"], [41, "define-documentation"], [42, "define-documentation"], [43, "define-documentation"], [44, "define-documentation"], [45, "define-documentation"], [46, "define-documentation"], [47, "define-documentation"], [48, "define-documentation"], [49, "define-documentation"], [50, "define-documentation"], [51, "define-documentation"], [52, "define-documentation"], [53, "define-documentation"], [54, "define-documentation"], [55, "define-documentation"], [56, "define-documentation"], [57, "define-documentation"], [58, "define-documentation"], [59, "define-documentation"], [60, "define-documentation"], [61, "define-documentation"], [62, "define-documentation"], [63, "define-documentation"], [64, "define-documentation"], [65, "define-documentation"], [66, "define-documentation"], [67, "define-documentation"], [68, "define-documentation"], [69, "define-documentation"], [70, "define-documentation"], [71, "define-documentation"], [72, "define-documentation"], [73, "define-documentation"], [74, "define-documentation"], [75, "define-documentation"], [76, "define-documentation"], [77, "define-documentation"], [78, "define-documentation"], [79, "define-documentation"], [80, "define-documentation"], [81, "define-documentation"], [82, "define-documentation"], [83, "define-documentation"], [84, "define-documentation"], [85, "define-documentation"], [86, "define-documentation"], [87, "define-documentation"], [88, "define-documentation"], [89, "define-documentation"], [90, "define-documentation"], [91, "define-documentation"], [92, "define-documentation"], [93, "define-documentation"], [94, "define-documentation"], [95, "define-documentation"], [96, "define-documentation"], [97, "define-documentation"], [98, "define-documentation"], [99, "define-documentation"], [100, "define-documentation"], [101, "define-documentation"], [102, "define-documentation"], [103, "define-documentation"], [104, "define-documentation"], [105, "define-documentation"], [106, "define-documentation"], [107, "define-documentation"], [108, "define-documentation"], [109, "define-documentation"], [110, "define-documentation"], [111, "define-documentation"], [112, "define-documentation"], [113, "define-documentation"], [114, "define-documentation"], [115, "define-documentation"], [116, "define-documentation"], [117, "define-documentation"], [118, "define-documentation"], [119, "define-documentation"], [120, "define-documentation"], [121, "define-documentation"], [122, "define-documentation"], [123, "define-documentation"], [124, "define-documentation"], [125, "define-documentation"], [126, "define-documentation"], [127, "define-documentation"], [128, "define-documentation"], [129, "define-documentation"], [130, "define-documentation"], [131, "define-documentation"]], "Define INITIAL_STACK_DEPTH": [[2, "define-initial-stack-depth"]], "Define CALIBRATED_SAMPLE": [[3, "define-calibrated-sample"]], "Define ILI9341_SWRESET": [[4, "define-ili9341-swreset"]], "Define ILI9341_CASET": [[5, "define-ili9341-caset"]], "Define ILI9341_FRMCTR1": [[6, "define-ili9341-frmctr1"]], "Define ILI9341_RAMRD": [[7, "define-ili9341-ramrd"]], "Define ILI9341_FRMCTR2": [[8, "define-ili9341-frmctr2"]], "Define ILI9341_RDID2": [[9, "define-ili9341-rdid2"]], "Define ILI9341_FRMCTR3": [[10, "define-ili9341-frmctr3"]], "Define ILI9341_SLPOUT": [[11, "define-ili9341-slpout"]], "Define ILI9341_PWCTR1": [[12, "define-ili9341-pwctr1"]], "Define ILI9341_DISPON": [[13, "define-ili9341-dispon"]], "Define ILI9341_RDID4": [[14, "define-ili9341-rdid4"]], "Define ILI9341_INVON": [[15, "define-ili9341-invon"]], "Define ILI9341_RDID3": [[16, "define-ili9341-rdid3"]], "Define ILI9341_MADCTL": [[17, "define-ili9341-madctl"]], "Define ILI9341_GAMMASET": [[18, "define-ili9341-gammaset"]], "Define ILI9341_VMCTR1": [[19, "define-ili9341-vmctr1"]], "Define ILI9341_PWCTR4": [[20, "define-ili9341-pwctr4"]], "Define ILI9341_RDIMGFMT": [[21, "define-ili9341-rdimgfmt"]], "Define ILI9341_NOP": [[22, "define-ili9341-nop"]], "Define ILI9341_GMCTRP1": [[23, "define-ili9341-gmctrp1"]], "Define ILI9341_RAMWR": [[24, "define-ili9341-ramwr"]], "Define ILI9341_DFUNCTR": [[25, "define-ili9341-dfunctr"]], "Define ILI9341_RDDST": [[26, "define-ili9341-rddst"]], "Define ILI9341_SLPIN": [[27, "define-ili9341-slpin"]], "Define ILI9341_DISPOFF": [[28, "define-ili9341-dispoff"]], "Define ILI9341_RDDID": [[29, "define-ili9341-rddid"]], "Define ILI9341_PTLON": [[30, "define-ili9341-ptlon"]], "Define ILI9341_PTLAR": [[31, "define-ili9341-ptlar"]], "Define ILI9341_RDID1": [[32, "define-ili9341-rdid1"]], "Define ILI9341_GMCTRN1": [[33, "define-ili9341-gmctrn1"]], "Define ILI9341_INVOFF": [[34, "define-ili9341-invoff"]], "Define ILI9341_RDMADCTL": [[35, "define-ili9341-rdmadctl"]], "Define ILI9341_RDPIXFMT": [[36, "define-ili9341-rdpixfmt"]], "Define ILI9341_INVCTR": [[37, "define-ili9341-invctr"]], "Define ILI9341_NORON": [[38, "define-ili9341-noron"]], "Define ILI9341_PASET": [[39, "define-ili9341-paset"]], "Define ILI9341_PWCTR3": [[40, "define-ili9341-pwctr3"]], "Define ILI9341_RDMODE": [[41, "define-ili9341-rdmode"]], "Define ILI9341_RDSELFDIAG": [[42, "define-ili9341-rdselfdiag"]], "Define ILI9341_PIXFMT": [[43, "define-ili9341-pixfmt"]], "Define ILI9341_VMCTR2": [[44, "define-ili9341-vmctr2"]], "Define ILI9341_PWCTR2": [[45, "define-ili9341-pwctr2"]], "Define ILI9341_VSCRSADD": [[46, "define-ili9341-vscrsadd"]], "Define ILI9341_PWCTR5": [[47, "define-ili9341-pwctr5"]], "Define EMPTY_DATA": [[48, "define-empty-data"], [50, "define-empty-data"], [52, "define-empty-data"]], "Define REF_TAG": [[49, "define-ref-tag"], [51, "define-ref-tag"], [53, "define-ref-tag"]], "Define MICROBIT_MBED_MEMBER_FUNCTION_CALLBACK_CPP": [[54, "define-microbit-mbed-member-function-callback-cpp"]], "Define CALIBRATION_INCREMENT": [[55, "define-calibration-increment"]], "Define microbit_LEDMap_PINROW1": [[56, "define-microbit-ledmap-pinrow1"]], "Define microbit_LEDMap_PINCOL0": [[57, "define-microbit-ledmap-pincol0"]], "Define microbit_LEDMap_PINCOL1": [[58, "define-microbit-ledmap-pincol1"]], "Define microbit_panic_DIVBASE": [[59, "define-microbit-panic-divbase"]], "Define microbit_LEDMap_PINROW3": [[60, "define-microbit-ledmap-pinrow3"]], "Define microbit_LEDMap_PINCOL3": [[61, "define-microbit-ledmap-pincol3"]], "Define microbit_LEDMap_PINROW0": [[62, "define-microbit-ledmap-pinrow0"]], "Define microbit_LEDMap_WIDTH": [[63, "define-microbit-ledmap-width"]], "Define microbit_LEDMap_PINROW2": [[64, "define-microbit-ledmap-pinrow2"]], "Define microbit_panic_ROWDELAY": [[65, "define-microbit-panic-rowdelay"]], "Define microbit_LEDMap_PINROW4": [[66, "define-microbit-ledmap-pinrow4"]], "Define microbit_LEDMap_HEIGHT": [[67, "define-microbit-ledmap-height"]], "Define microbit_LEDMap_COLS": [[68, "define-microbit-ledmap-cols"]], "Define microbit_panic_MSG1STDIGIT": [[69, "define-microbit-panic-msg1stdigit"]], "Define microbit_LEDMap_PINCOL2": [[70, "define-microbit-ledmap-pincol2"]], "Define microbit_LEDMap_ROWS": [[71, "define-microbit-ledmap-rows"]], "Define microbit_panic_CLEARSCANS": [[72, "define-microbit-panic-clearscans"]], "Define microbit_panic_MSGLEN": [[73, "define-microbit-panic-msglen"]], "Define microbit_LEDMap_PINCOL4": [[74, "define-microbit-ledmap-pincol4"]], "Define microbit_panic_DIVMAX": [[75, "define-microbit-panic-divmax"]], "Define microbit_panic_SCANS": [[76, "define-microbit-panic-scans"]], "Define MIN": [[77, "define-min"]], "Define WORD_ADDR": [[78, "define-word-addr"]], "Define ARRAY_LEN": [[79, "define-array-len"]], "Define MAX_STRING_LENGTH": [[80, "define-max-string-length"]], "Define ST7735_PTLAR": [[81, "define-st7735-ptlar"]], "Define ST7735_PWCTR6": [[82, "define-st7735-pwctr6"]], "Define ENC16": [[83, "define-enc16"]], "Define ST7735_DISPON": [[84, "define-st7735-dispon"]], "Define ST7735_NOP": [[85, "define-st7735-nop"]], "Define ST7735_RDID4": [[86, "define-st7735-rdid4"]], "Define ST7735_DISPOFF": [[87, "define-st7735-dispoff"]], "Define ST7735_SWRESET": [[88, "define-st7735-swreset"]], "Define assert": [[89, "define-assert"]], "Define ST7735_FRMCTR2": [[90, "define-st7735-frmctr2"]], "Define ST7735_CASET": [[91, "define-st7735-caset"]], "Define ST7735_FRMCTR3": [[92, "define-st7735-frmctr3"]], "Define ST7735_SLPIN": [[93, "define-st7735-slpin"]], "Define ST7735_RAMRD": [[94, "define-st7735-ramrd"]], "Define DELAY": [[95, "define-delay"]], "Define MADCTL_BGR": [[96, "define-madctl-bgr"]], "Define MADCTL_MX": [[97, "define-madctl-mx"]], "Define MADCTL_MH": [[98, "define-madctl-mh"]], "Define ST7735_MADCTL": [[99, "define-st7735-madctl"]], "Define ST7735_RDID3": [[100, "define-st7735-rdid3"]], "Define ST7735_RDID1": [[101, "define-st7735-rdid1"]], "Define ST7735_PWCTR5": [[102, "define-st7735-pwctr5"]], "Define ST7735_PWCTR4": [[103, "define-st7735-pwctr4"]], "Define ST7735_COLMOD": [[104, "define-st7735-colmod"]], "Define ST7735_NORON": [[105, "define-st7735-noron"]], "Define MADCTL_ML": [[106, "define-madctl-ml"]], "Define ST7735_SLPOUT": [[107, "define-st7735-slpout"]], "Define DATABUFSIZE": [[108, "define-databufsize"]], "Define ST7735_VMCTR1": [[109, "define-st7735-vmctr1"]], "Define ST7735_RAMWR": [[110, "define-st7735-ramwr"]], "Define ST7735_PTLON": [[111, "define-st7735-ptlon"]], "Define SWAP": [[112, "define-swap"]], "Define ST7735_GMCTRN1": [[113, "define-st7735-gmctrn1"]], "Define MADCTL_MY": [[114, "define-madctl-my"]], "Define ST7735_PWCTR1": [[115, "define-st7735-pwctr1"]], "Define ST7735_PWCTR3": [[116, "define-st7735-pwctr3"]], "Define ST7735_RDDST": [[117, "define-st7735-rddst"]], "Define MADCTL_RGB": [[118, "define-madctl-rgb"]], "Define ST7735_DISSET5": [[119, "define-st7735-disset5"]], "Define ST7735_INVOFF": [[120, "define-st7735-invoff"]], "Define ST7735_GMCTRP1": [[121, "define-st7735-gmctrp1"]], "Define MADCTL_MV": [[122, "define-madctl-mv"]], "Define ST7735_INVCTR": [[123, "define-st7735-invctr"]], "Define ST7735_INVON": [[124, "define-st7735-invon"]], "Define ST7735_RASET": [[125, "define-st7735-raset"]], "Define ST7735_FRMCTR1": [[126, "define-st7735-frmctr1"]], "Define ST7735_RDDID": [[127, "define-st7735-rddid"]], "Define ST7735_PWCTR2": [[128, "define-st7735-pwctr2"]], "Define ST7735_RDID2": [[129, "define-st7735-rdid2"]], "Define CLAMP": [[130, "define-clamp"]], "Define check": [[131, "define-check"]], "Directory libraries": [[132, "directory-libraries"]], "Subdirectories": [[132, "subdirectories"], [133, "subdirectories"], [134, "subdirectories"], [140, "subdirectories"], [141, "subdirectories"]], "Directory codal-core": [[133, "directory-codal-core"]], "Directory source": [[134, "directory-source"], [141, "directory-source"]], "Directory core": [[135, "directory-core"]], "Files": [[135, "files"], [136, "files"], [137, "files"], [138, "files"], [139, "files"], [141, "files"], [142, "files"], [143, "files"], [484, "files"]], "Directory driver-models": [[136, "directory-driver-models"]], "Directory drivers": [[137, "directory-drivers"]], "Directory streams": [[138, "directory-streams"]], "Directory types": [[139, "directory-types"]], "Directory codal-microbit-v2": [[140, "directory-codal-microbit-v2"]], "Directory bluetooth": [[142, "directory-bluetooth"]], "Directory compat": [[143, "directory-compat"]], "File CodalCompat.cpp": [[144, "file-codalcompat-cpp"]], "Contents": [[144, "contents"], [145, "contents"], [146, "contents"], [147, "contents"], [148, "contents"], [149, "contents"], [150, "contents"], [151, "contents"], [152, "contents"], [153, "contents"], [154, "contents"], [155, "contents"], [156, "contents"], [157, "contents"], [158, "contents"], [159, "contents"], [160, "contents"], [161, "contents"], [162, "contents"], [163, "contents"], [164, "contents"], [165, "contents"], [166, "contents"], [167, "contents"], [168, "contents"], [169, "contents"], [170, "contents"], [171, "contents"], [172, "contents"], [173, "contents"], [174, "contents"], [175, "contents"], [176, "contents"], [177, "contents"], [178, "contents"], [179, "contents"], [180, "contents"], [181, "contents"], [182, "contents"], [183, "contents"], [184, "contents"], [185, "contents"], [186, "contents"], [187, "contents"], [188, "contents"], [189, "contents"], [190, "contents"], [191, "contents"], [192, "contents"], [193, "contents"], [194, "contents"], [195, "contents"], [196, "contents"], [197, "contents"], [198, "contents"], [199, "contents"], [200, "contents"], [201, "contents"], [202, "contents"], [203, "contents"], [204, "contents"], [205, "contents"], [206, "contents"], [207, "contents"], [208, "contents"], [209, "contents"], [210, "contents"], [211, "contents"], [212, "contents"], [213, "contents"], [214, "contents"], [215, "contents"], [216, "contents"], [217, "contents"], [218, "contents"], [219, "contents"], [220, "contents"], [221, "contents"], [222, "contents"], [223, "contents"], [224, "contents"], [225, "contents"], [226, "contents"], [227, "contents"], [228, "contents"], [229, "contents"], [230, "contents"], [231, "contents"], [232, "contents"], [233, "contents"], [234, "contents"], [235, "contents"], [236, "contents"], [237, "contents"], [238, "contents"], [239, "contents"], [240, "contents"], [241, "contents"], [242, "contents"], [243, "contents"], [244, "contents"], [245, "contents"], [246, "contents"], [247, "contents"], [248, "contents"], [249, "contents"], [250, "contents"], [251, "contents"], [252, "contents"], [253, "contents"], [254, "contents"], [255, "contents"], [256, "contents"], [257, "contents"], [258, "contents"], [259, "contents"], [260, "contents"], [261, "contents"], [262, "contents"], [263, "contents"], [264, "contents"], [265, "contents"], [352, "contents"], [643, "contents"]], "Definition (libraries/codal-core/source/core/CodalCompat.cpp)": [[144, "definition-libraries-codal-core-source-core-codalcompat-cpp"]], "Includes": [[144, "includes"], [145, "includes"], [146, "includes"], [147, "includes"], [148, "includes"], [149, "includes"], [150, "includes"], [151, "includes"], [152, "includes"], [153, "includes"], [154, "includes"], [155, "includes"], [156, "includes"], [157, "includes"], [158, "includes"], [159, "includes"], [160, "includes"], [161, "includes"], [162, "includes"], [163, "includes"], [164, "includes"], [165, "includes"], [166, "includes"], [167, "includes"], [168, "includes"], [169, "includes"], [170, "includes"], [171, "includes"], [172, "includes"], [173, "includes"], [174, "includes"], [175, "includes"], [176, "includes"], [177, "includes"], [178, "includes"], [179, "includes"], [180, "includes"], [181, "includes"], [182, "includes"], [183, "includes"], [184, "includes"], [185, "includes"], [186, "includes"], [187, "includes"], [188, "includes"], [189, "includes"], [190, "includes"], [191, "includes"], [192, "includes"], [193, "includes"], [194, "includes"], [195, "includes"], [196, "includes"], [197, "includes"], [198, "includes"], [199, "includes"], [200, "includes"], [201, "includes"], [202, "includes"], [203, "includes"], [204, "includes"], [205, "includes"], [206, "includes"], [207, "includes"], [208, "includes"], [209, "includes"], [210, "includes"], [211, "includes"], [212, "includes"], [213, "includes"], [214, "includes"], [215, "includes"], [216, "includes"], [217, "includes"], [218, "includes"], [219, "includes"], [220, "includes"], [221, "includes"], [222, "includes"], [223, "includes"], [224, "includes"], [225, "includes"], [226, "includes"], [227, "includes"], [228, "includes"], [229, "includes"], [230, "includes"], [231, "includes"], [232, "includes"], [233, "includes"], [234, "includes"], [235, "includes"], [236, "includes"], [237, "includes"], [238, "includes"], [239, "includes"], [240, "includes"], [241, "includes"], [242, "includes"], [243, "includes"], [244, "includes"], [245, "includes"], [246, "includes"], [247, "includes"], [248, "includes"], [249, "includes"], [250, "includes"], [251, "includes"], [252, "includes"], [253, "includes"], [254, "includes"], [255, "includes"], [256, "includes"], [257, "includes"], [258, "includes"], [259, "includes"], [260, "includes"], [261, "includes"], [262, "includes"], [263, "includes"], [264, "includes"], [265, "includes"]], "Variables": [[144, "variables"], [148, "variables"], [153, "variables"], [165, "variables"], [168, "variables"], [170, "variables"], [176, "variables"], [178, "variables"], [179, "variables"], [180, "variables"], [181, "variables"], [183, "variables"], [184, "variables"], [186, "variables"], [189, "variables"], [191, "variables"], [209, "variables"], [210, "variables"], [215, "variables"], [225, "variables"], [228, "variables"], [229, "variables"], [232, "variables"], [233, "variables"], [237, "variables"], [240, "variables"], [241, "variables"], [246, "variables"], [352, "variables"], [477, "variables"], [483, "variables"]], "File CodalComponent.cpp": [[145, "file-codalcomponent-cpp"]], "Definition (libraries/codal-core/source/core/CodalComponent.cpp)": [[145, "definition-libraries-codal-core-source-core-codalcomponent-cpp"]], "Functions": [[145, "functions"], [148, "functions"], [153, "functions"], [165, "functions"], [168, "functions"], [170, "functions"], [179, "functions"], [180, "functions"], [181, "functions"], [186, "functions"], [189, "functions"], [206, "functions"], [209, "functions"], [215, "functions"], [217, "functions"], [225, "functions"], [229, "functions"], [230, "functions"], [232, "functions"], [233, "functions"], [237, "functions"], [240, "functions"], [241, "functions"], [244, "functions"], [246, "functions"], [263, "functions"], [352, "functions"], [477, "functions"], [483, "functions"]], "File CodalDevice.cpp": [[146, "file-codaldevice-cpp"]], "Definition (libraries/codal-core/source/core/CodalDevice.cpp)": [[146, "definition-libraries-codal-core-source-core-codaldevice-cpp"]], "File CodalDmesg.cpp": [[147, "file-codaldmesg-cpp"]], "Definition (libraries/codal-core/source/core/CodalDmesg.cpp)": [[147, "definition-libraries-codal-core-source-core-codaldmesg-cpp"]], "File CodalFiber.cpp": [[148, "file-codalfiber-cpp"]], "Definition (libraries/codal-core/source/core/CodalFiber.cpp)": [[148, "definition-libraries-codal-core-source-core-codalfiber-cpp"]], "Namespaces": [[148, "namespaces"], [160, "namespaces"], [162, "namespaces"], [176, "namespaces"], [186, "namespaces"], [191, "namespaces"], [192, "namespaces"], [214, "namespaces"], [225, "namespaces"], [477, "namespaces"], [483, "namespaces"]], "Defines": [[148, "defines"], [157, "defines"], [176, "defines"], [191, "defines"], [193, "defines"], [213, "defines"], [214, "defines"], [215, "defines"], [223, "defines"], [225, "defines"], [229, "defines"], [230, "defines"], [231, "defines"], [244, "defines"], [262, "defines"], [477, "defines"], [483, "defines"]], "File CodalHeapAllocator.cpp": [[149, "file-codalheapallocator-cpp"]], "Definition (libraries/codal-core/source/core/CodalHeapAllocator.cpp)": [[149, "definition-libraries-codal-core-source-core-codalheapallocator-cpp"]], "File CodalListener.cpp": [[150, "file-codallistener-cpp"]], "Definition (libraries/codal-core/source/core/CodalListener.cpp)": [[150, "definition-libraries-codal-core-source-core-codallistener-cpp"]], "File CodalUtil.cpp": [[151, "file-codalutil-cpp"]], "Definition (libraries/codal-core/source/core/CodalUtil.cpp)": [[151, "definition-libraries-codal-core-source-core-codalutil-cpp"]], "File MemberFunctionCallback.cpp": [[152, "file-memberfunctioncallback-cpp"]], "Definition (libraries/codal-core/source/core/MemberFunctionCallback.cpp)": [[152, "definition-libraries-codal-core-source-core-memberfunctioncallback-cpp"]], "File codal_default_target_hal.cpp": [[153, "file-codal-default-target-hal-cpp"]], "Definition (libraries/codal-core/source/core/codal_default_target_hal.cpp)": [[153, "definition-libraries-codal-core-source-core-codal-default-target-hal-cpp"]], "File AbstractButton.cpp": [[154, "file-abstractbutton-cpp"]], "Definition (libraries/codal-core/source/driver-models/AbstractButton.cpp)": [[154, "definition-libraries-codal-core-source-driver-models-abstractbutton-cpp"]], "File Accelerometer.cpp": [[155, "file-accelerometer-cpp"]], "Definition (libraries/codal-core/source/driver-models/Accelerometer.cpp)": [[155, "definition-libraries-codal-core-source-driver-models-accelerometer-cpp"]], "File CodalUSB.cpp": [[156, "file-codalusb-cpp"]], "Definition (libraries/codal-core/source/driver-models/CodalUSB.cpp)": [[156, "definition-libraries-codal-core-source-driver-models-codalusb-cpp"]], "File Compass.cpp": [[157, "file-compass-cpp"]], "Definition (libraries/codal-core/source/driver-models/Compass.cpp)": [[157, "definition-libraries-codal-core-source-driver-models-compass-cpp"]], "File Display.cpp": [[158, "file-display-cpp"]], "Definition (libraries/codal-core/source/driver-models/Display.cpp)": [[158, "definition-libraries-codal-core-source-driver-models-display-cpp"]], "File Gyroscope.cpp": [[159, "file-gyroscope-cpp"]], "Definition (libraries/codal-core/source/driver-models/Gyroscope.cpp)": [[159, "definition-libraries-codal-core-source-driver-models-gyroscope-cpp"]], "File I2C.cpp": [[160, "file-i2c-cpp"]], "Definition (libraries/codal-core/source/driver-models/I2C.cpp)": [[160, "definition-libraries-codal-core-source-driver-models-i2c-cpp"]], "File PinPeripheral.cpp": [[161, "file-pinperipheral-cpp"]], "Definition (libraries/codal-core/source/driver-models/PinPeripheral.cpp)": [[161, "definition-libraries-codal-core-source-driver-models-pinperipheral-cpp"]], "File SPI.cpp": [[162, "file-spi-cpp"]], "Definition (libraries/codal-core/source/driver-models/SPI.cpp)": [[162, "definition-libraries-codal-core-source-driver-models-spi-cpp"]], "File Sensor.cpp": [[163, "file-sensor-cpp"]], "Definition (libraries/codal-core/source/driver-models/Sensor.cpp)": [[163, "definition-libraries-codal-core-source-driver-models-sensor-cpp"]], "File Serial.cpp": [[164, "file-serial-cpp"]], "Definition (libraries/codal-core/source/driver-models/Serial.cpp)": [[164, "definition-libraries-codal-core-source-driver-models-serial-cpp"]], "File Timer.cpp": [[165, "file-timer-cpp"]], "Definition (libraries/codal-core/source/driver-models/Timer.cpp)": [[165, "definition-libraries-codal-core-source-driver-models-timer-cpp"]], "File AnalogSensor.cpp": [[166, "file-analogsensor-cpp"]], "Definition (libraries/codal-core/source/drivers/AnalogSensor.cpp)": [[166, "definition-libraries-codal-core-source-drivers-analogsensor-cpp"]], "File AnimatedDisplay.cpp": [[167, "file-animateddisplay-cpp"]], "Definition (libraries/codal-core/source/drivers/AnimatedDisplay.cpp)": [[167, "definition-libraries-codal-core-source-drivers-animateddisplay-cpp"]], "File AsciiKeyMap.cpp": [[168, "file-asciikeymap-cpp"]], "Definition (libraries/codal-core/source/drivers/AsciiKeyMap.cpp)": [[168, "definition-libraries-codal-core-source-drivers-asciikeymap-cpp"]], "File Button.cpp": [[169, "file-button-cpp"]], "Definition (libraries/codal-core/source/drivers/Button.cpp)": [[169, "definition-libraries-codal-core-source-drivers-button-cpp"]], "File FXOS8700.cpp": [[170, "file-fxos8700-cpp"]], "Definition (libraries/codal-core/source/drivers/FXOS8700.cpp)": [[170, "definition-libraries-codal-core-source-drivers-fxos8700-cpp"]], "File GhostFAT.cpp": [[171, "file-ghostfat-cpp"]], "Definition (libraries/codal-core/source/drivers/GhostFAT.cpp)": [[171, "definition-libraries-codal-core-source-drivers-ghostfat-cpp"]], "File HID.cpp": [[172, "file-hid-cpp"]], "Definition (libraries/codal-core/source/drivers/HID.cpp)": [[172, "definition-libraries-codal-core-source-drivers-hid-cpp"]], "File HIDJoystick.cpp": [[173, "file-hidjoystick-cpp"]], "Definition (libraries/codal-core/source/drivers/HIDJoystick.cpp)": [[173, "definition-libraries-codal-core-source-drivers-hidjoystick-cpp"]], "File HIDKeyboard.cpp": [[174, "file-hidkeyboard-cpp"]], "Definition (libraries/codal-core/source/drivers/HIDKeyboard.cpp)": [[174, "definition-libraries-codal-core-source-drivers-hidkeyboard-cpp"]], "File HIDMouse.cpp": [[175, "file-hidmouse-cpp"]], "Definition (libraries/codal-core/source/drivers/HIDMouse.cpp)": [[175, "definition-libraries-codal-core-source-drivers-hidmouse-cpp"]], "File ILI9341.cpp": [[176, "file-ili9341-cpp"]], "Definition (libraries/codal-core/source/drivers/ILI9341.cpp)": [[176, "definition-libraries-codal-core-source-drivers-ili9341-cpp"]], "File KeyValueStorage.cpp": [[177, "file-keyvaluestorage-cpp"]], "Definition (libraries/codal-core/source/drivers/KeyValueStorage.cpp)": [[177, "definition-libraries-codal-core-source-drivers-keyvaluestorage-cpp"]], "File LEDMatrix.cpp": [[178, "file-ledmatrix-cpp"]], "Definition (libraries/codal-core/source/drivers/LEDMatrix.cpp)": [[178, "definition-libraries-codal-core-source-drivers-ledmatrix-cpp"]], "File LIS3DH.cpp": [[179, "file-lis3dh-cpp"]], "Definition (libraries/codal-core/source/drivers/LIS3DH.cpp)": [[179, "definition-libraries-codal-core-source-drivers-lis3dh-cpp"]], "File LSM303Accelerometer.cpp": [[180, "file-lsm303accelerometer-cpp"]], "Definition (libraries/codal-core/source/drivers/LSM303Accelerometer.cpp)": [[180, "definition-libraries-codal-core-source-drivers-lsm303accelerometer-cpp"]], "File LSM303Magnetometer.cpp": [[181, "file-lsm303magnetometer-cpp"]], "Definition (libraries/codal-core/source/drivers/LSM303Magnetometer.cpp)": [[181, "definition-libraries-codal-core-source-drivers-lsm303magnetometer-cpp"]], "File LinearAnalogSensor.cpp": [[182, "file-linearanalogsensor-cpp"]], "Definition (libraries/codal-core/source/drivers/LinearAnalogSensor.cpp)": [[182, "definition-libraries-codal-core-source-drivers-linearanalogsensor-cpp"]], "File MAG3110.cpp": [[183, "file-mag3110-cpp"]], "Definition (libraries/codal-core/source/drivers/MAG3110.cpp)": [[183, "definition-libraries-codal-core-source-drivers-mag3110-cpp"]], "File MMA8653.cpp": [[184, "file-mma8653-cpp"]], "Definition (libraries/codal-core/source/drivers/MMA8653.cpp)": [[184, "definition-libraries-codal-core-source-drivers-mma8653-cpp"]], "File MPU6050.cpp": [[185, "file-mpu6050-cpp"]], "Definition (libraries/codal-core/source/drivers/MPU6050.cpp)": [[185, "definition-libraries-codal-core-source-drivers-mpu6050-cpp"]], "File MessageBus.cpp": [[186, "file-messagebus-cpp"]], "Definition (libraries/codal-core/source/drivers/MessageBus.cpp)": [[186, "definition-libraries-codal-core-source-drivers-messagebus-cpp"]], "File MultiButton.cpp": [[187, "file-multibutton-cpp"]], "Definition (libraries/codal-core/source/drivers/MultiButton.cpp)": [[187, "definition-libraries-codal-core-source-drivers-multibutton-cpp"]], "File NonLinearAnalogSensor.cpp": [[188, "file-nonlinearanalogsensor-cpp"]], "Definition (libraries/codal-core/source/drivers/NonLinearAnalogSensor.cpp)": [[188, "definition-libraries-codal-core-source-drivers-nonlinearanalogsensor-cpp"]], "File PearsonHash.cpp": [[189, "file-pearsonhash-cpp"]], "Definition (libraries/codal-core/source/drivers/PearsonHash.cpp)": [[189, "definition-libraries-codal-core-source-drivers-pearsonhash-cpp"]], "File PulseIn.cpp": [[190, "file-pulsein-cpp"]], "Definition (libraries/codal-core/source/drivers/PulseIn.cpp)": [[190, "definition-libraries-codal-core-source-drivers-pulsein-cpp"]], "File ST7735.cpp": [[191, "file-st7735-cpp"]], "Definition (libraries/codal-core/source/drivers/ST7735.cpp)": [[191, "definition-libraries-codal-core-source-drivers-st7735-cpp"]], "Classes": [[191, "classes"], [225, "classes"], [352, "classes"]], "File ScreenIO.cpp": [[192, "file-screenio-cpp"]], "Definition (libraries/codal-core/source/drivers/ScreenIO.cpp)": [[192, "definition-libraries-codal-core-source-drivers-screenio-cpp"]], "File StandardSPIFlash.cpp": [[193, "file-standardspiflash-cpp"]], "Definition (libraries/codal-core/source/drivers/StandardSPIFlash.cpp)": [[193, "definition-libraries-codal-core-source-drivers-standardspiflash-cpp"]], "File TouchButton.cpp": [[194, "file-touchbutton-cpp"]], "Definition (libraries/codal-core/source/drivers/TouchButton.cpp)": [[194, "definition-libraries-codal-core-source-drivers-touchbutton-cpp"]], "File TouchSensor.cpp": [[195, "file-touchsensor-cpp"]], "Definition (libraries/codal-core/source/drivers/TouchSensor.cpp)": [[195, "definition-libraries-codal-core-source-drivers-touchsensor-cpp"]], "File USBMSC.cpp": [[196, "file-usbmsc-cpp"]], "Definition (libraries/codal-core/source/drivers/USBMSC.cpp)": [[196, "definition-libraries-codal-core-source-drivers-usbmsc-cpp"]], "File DataStream.cpp": [[197, "file-datastream-cpp"]], "Definition (libraries/codal-core/source/streams/DataStream.cpp)": [[197, "definition-libraries-codal-core-source-streams-datastream-cpp"]], "File EffectFilter.cpp": [[198, "file-effectfilter-cpp"]], "Definition (libraries/codal-core/source/streams/EffectFilter.cpp)": [[198, "definition-libraries-codal-core-source-streams-effectfilter-cpp"]], "File FIFOStream.cpp": [[199, "file-fifostream-cpp"]], "Definition (libraries/codal-core/source/streams/FIFOStream.cpp)": [[199, "definition-libraries-codal-core-source-streams-fifostream-cpp"]], "File LevelDetector.cpp": [[200, "file-leveldetector-cpp"]], "Definition (libraries/codal-core/source/streams/LevelDetector.cpp)": [[200, "definition-libraries-codal-core-source-streams-leveldetector-cpp"]], "File LevelDetectorSPL.cpp": [[201, "file-leveldetectorspl-cpp"]], "Definition (libraries/codal-core/source/streams/LevelDetectorSPL.cpp)": [[201, "definition-libraries-codal-core-source-streams-leveldetectorspl-cpp"]], "File LowPassFilter.cpp": [[202, "file-lowpassfilter-cpp"]], "Definition (libraries/codal-core/source/streams/LowPassFilter.cpp)": [[202, "definition-libraries-codal-core-source-streams-lowpassfilter-cpp"]], "File MemorySource.cpp": [[203, "file-memorysource-cpp"]], "Definition (libraries/codal-core/source/streams/MemorySource.cpp)": [[203, "definition-libraries-codal-core-source-streams-memorysource-cpp"]], "File Mixer.cpp": [[204, "file-mixer-cpp"]], "Definition (libraries/codal-core/source/streams/Mixer.cpp)": [[204, "definition-libraries-codal-core-source-streams-mixer-cpp"]], "File StreamFlowTrigger.cpp": [[205, "file-streamflowtrigger-cpp"]], "Definition (libraries/codal-core/source/streams/StreamFlowTrigger.cpp)": [[205, "definition-libraries-codal-core-source-streams-streamflowtrigger-cpp"]], "File StreamNormalizer.cpp": [[206, "file-streamnormalizer-cpp"]], "Definition (libraries/codal-core/source/streams/StreamNormalizer.cpp)": [[206, "definition-libraries-codal-core-source-streams-streamnormalizer-cpp"]], "File StreamRecording.cpp": [[207, "file-streamrecording-cpp"]], "Definition (libraries/codal-core/source/streams/StreamRecording.cpp)": [[207, "definition-libraries-codal-core-source-streams-streamrecording-cpp"]], "File StreamSplitter.cpp": [[208, "file-streamsplitter-cpp"]], "Definition (libraries/codal-core/source/streams/StreamSplitter.cpp)": [[208, "definition-libraries-codal-core-source-streams-streamsplitter-cpp"]], "File Synthesizer.cpp": [[209, "file-synthesizer-cpp"]], "Definition (libraries/codal-core/source/streams/Synthesizer.cpp)": [[209, "definition-libraries-codal-core-source-streams-synthesizer-cpp"]], "File BitmapFont.cpp": [[210, "file-bitmapfont-cpp"]], "Definition (libraries/codal-core/source/types/BitmapFont.cpp)": [[210, "definition-libraries-codal-core-source-types-bitmapfont-cpp"]], "File CoordinateSystem.cpp": [[211, "file-coordinatesystem-cpp"]], "Definition (libraries/codal-core/source/types/CoordinateSystem.cpp)": [[211, "definition-libraries-codal-core-source-types-coordinatesystem-cpp"]], "File Event.cpp": [[212, "file-event-cpp"]], "Definition (libraries/codal-core/source/types/Event.cpp)": [[212, "definition-libraries-codal-core-source-types-event-cpp"]], "File Image.cpp": [[213, "file-image-cpp"]], "Definition (libraries/codal-core/source/types/Image.cpp)": [[213, "definition-libraries-codal-core-source-types-image-cpp"]], "File ManagedBuffer.cpp": [[214, "file-managedbuffer-cpp"]], "Definition (libraries/codal-core/source/types/ManagedBuffer.cpp)": [[214, "definition-libraries-codal-core-source-types-managedbuffer-cpp"]], "File ManagedString.cpp": [[215, "file-managedstring-cpp"]], "Definition (libraries/codal-core/source/types/ManagedString.cpp)": [[215, "definition-libraries-codal-core-source-types-managedstring-cpp"]], "File Matrix4.cpp": [[216, "file-matrix4-cpp"]], "Definition (libraries/codal-core/source/types/Matrix4.cpp)": [[216, "definition-libraries-codal-core-source-types-matrix4-cpp"]], "File RefCounted.cpp": [[217, "file-refcounted-cpp"]], "Definition (libraries/codal-core/source/types/RefCounted.cpp)": [[217, "definition-libraries-codal-core-source-types-refcounted-cpp"]], "File RefCountedInit.cpp": [[218, "file-refcountedinit-cpp"]], "Definition (libraries/codal-core/source/types/RefCountedInit.cpp)": [[218, "definition-libraries-codal-core-source-types-refcountedinit-cpp"]], "File FSCache.cpp": [[219, "file-fscache-cpp"]], "Definition (libraries/codal-microbit-v2/source/FSCache.cpp)": [[219, "definition-libraries-codal-microbit-v2-source-fscache-cpp"]], "File MicroBitAccelerometer.cpp": [[220, "file-microbitaccelerometer-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitAccelerometer.cpp)": [[220, "definition-libraries-codal-microbit-v2-source-microbitaccelerometer-cpp"]], "File MicroBitAudio.cpp": [[221, "file-microbitaudio-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitAudio.cpp)": [[221, "definition-libraries-codal-microbit-v2-source-microbitaudio-cpp"]], "File MicroBitCompass.cpp": [[222, "file-microbitcompass-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitCompass.cpp)": [[222, "definition-libraries-codal-microbit-v2-source-microbitcompass-cpp"]], "File MicroBitCompassCalibrator.cpp": [[223, "file-microbitcompasscalibrator-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitCompassCalibrator.cpp)": [[223, "definition-libraries-codal-microbit-v2-source-microbitcompasscalibrator-cpp"]], "File MicroBitCompat.cpp": [[224, "file-microbitcompat-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitCompat.cpp)": [[224, "definition-libraries-codal-microbit-v2-source-microbitcompat-cpp"]], "File MicroBitDevice.cpp": [[225, "file-microbitdevice-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitDevice.cpp)": [[225, "definition-libraries-codal-microbit-v2-source-microbitdevice-cpp"]], "Typedefs": [[225, "typedefs"], [352, "typedefs"], [477, "typedefs"], [483, "typedefs"]], "File MicroBitDisplay.cpp": [[226, "file-microbitdisplay-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitDisplay.cpp)": [[226, "definition-libraries-codal-microbit-v2-source-microbitdisplay-cpp"]], "File MicroBitFile.cpp": [[227, "file-microbitfile-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitFile.cpp)": [[227, "definition-libraries-codal-microbit-v2-source-microbitfile-cpp"]], "File MicroBitFileSystem.cpp": [[228, "file-microbitfilesystem-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitFileSystem.cpp)": [[228, "definition-libraries-codal-microbit-v2-source-microbitfilesystem-cpp"]], "File MicroBitFlash.cpp": [[229, "file-microbitflash-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitFlash.cpp)": [[229, "definition-libraries-codal-microbit-v2-source-microbitflash-cpp"]], "File MicroBitLog.cpp": [[230, "file-microbitlog-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitLog.cpp)": [[230, "definition-libraries-codal-microbit-v2-source-microbitlog-cpp"]], "File MicroBitMemoryMap.cpp": [[231, "file-microbitmemorymap-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitMemoryMap.cpp)": [[231, "definition-libraries-codal-microbit-v2-source-microbitmemorymap-cpp"]], "File MicroBitPowerManager.cpp": [[232, "file-microbitpowermanager-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitPowerManager.cpp)": [[232, "definition-libraries-codal-microbit-v2-source-microbitpowermanager-cpp"]], "File MicroBitRadio.cpp": [[233, "file-microbitradio-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitRadio.cpp)": [[233, "definition-libraries-codal-microbit-v2-source-microbitradio-cpp"]], "File MicroBitRadioDatagram.cpp": [[234, "file-microbitradiodatagram-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitRadioDatagram.cpp)": [[234, "definition-libraries-codal-microbit-v2-source-microbitradiodatagram-cpp"]], "File MicroBitRadioEvent.cpp": [[235, "file-microbitradioevent-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitRadioEvent.cpp)": [[235, "definition-libraries-codal-microbit-v2-source-microbitradioevent-cpp"]], "File MicroBitThermometer.cpp": [[236, "file-microbitthermometer-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitThermometer.cpp)": [[236, "definition-libraries-codal-microbit-v2-source-microbitthermometer-cpp"]], "File MicroBitUSBFlashManager.cpp": [[237, "file-microbitusbflashmanager-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroBitUSBFlashManager.cpp)": [[237, "definition-libraries-codal-microbit-v2-source-microbitusbflashmanager-cpp"]], "File MicroSynth.cpp": [[238, "file-microsynth-cpp"]], "Definition (libraries/codal-microbit-v2/source/MicroSynth.cpp)": [[238, "definition-libraries-codal-microbit-v2-source-microsynth-cpp"]], "File Mixer2.cpp": [[239, "file-mixer2-cpp"]], "Definition (libraries/codal-microbit-v2/source/Mixer2.cpp)": [[239, "definition-libraries-codal-microbit-v2-source-mixer2-cpp"]], "File NRF52FlashManager.cpp": [[240, "file-nrf52flashmanager-cpp"]], "Definition (libraries/codal-microbit-v2/source/NRF52FlashManager.cpp)": [[240, "definition-libraries-codal-microbit-v2-source-nrf52flashmanager-cpp"]], "File NRF52LedMatrix.cpp": [[241, "file-nrf52ledmatrix-cpp"]], "Definition (libraries/codal-microbit-v2/source/NRF52LedMatrix.cpp)": [[241, "definition-libraries-codal-microbit-v2-source-nrf52ledmatrix-cpp"]], "File PacketBuffer.cpp": [[242, "file-packetbuffer-cpp"]], "Definition (libraries/codal-microbit-v2/source/PacketBuffer.cpp)": [[242, "definition-libraries-codal-microbit-v2-source-packetbuffer-cpp"]], "File SoundEmojiSynthesizer.cpp": [[243, "file-soundemojisynthesizer-cpp"]], "Definition (libraries/codal-microbit-v2/source/SoundEmojiSynthesizer.cpp)": [[243, "definition-libraries-codal-microbit-v2-source-soundemojisynthesizer-cpp"]], "File SoundExpressions.cpp": [[244, "file-soundexpressions-cpp"]], "Definition (libraries/codal-microbit-v2/source/SoundExpressions.cpp)": [[244, "definition-libraries-codal-microbit-v2-source-soundexpressions-cpp"]], "File SoundOutputPin.cpp": [[245, "file-soundoutputpin-cpp"]], "Definition (libraries/codal-microbit-v2/source/SoundOutputPin.cpp)": [[245, "definition-libraries-codal-microbit-v2-source-soundoutputpin-cpp"]], "File SoundSynthesizerEffects.cpp": [[246, "file-soundsynthesizereffects-cpp"]], "Definition (libraries/codal-microbit-v2/source/SoundSynthesizerEffects.cpp)": [[246, "definition-libraries-codal-microbit-v2-source-soundsynthesizereffects-cpp"]], "File MicroBitAccelerometerService.cpp": [[247, "file-microbitaccelerometerservice-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitAccelerometerService.cpp)": [[247, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitaccelerometerservice-cpp"]], "File MicroBitBLEChar.cpp": [[248, "file-microbitblechar-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitBLEChar.cpp)": [[248, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitblechar-cpp"]], "File MicroBitBLEManager.cpp": [[249, "file-microbitblemanager-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitBLEManager.cpp)": [[249, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitblemanager-cpp"]], "File MicroBitBLEService.cpp": [[250, "file-microbitbleservice-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitBLEService.cpp)": [[250, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitbleservice-cpp"]], "File MicroBitBLEServices.cpp": [[251, "file-microbitbleservices-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitBLEServices.cpp)": [[251, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitbleservices-cpp"]], "File MicroBitBLETypes.cpp": [[252, "file-microbitbletypes-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitBLETypes.cpp)": [[252, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitbletypes-cpp"]], "File MicroBitButtonService.cpp": [[253, "file-microbitbuttonservice-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitButtonService.cpp)": [[253, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitbuttonservice-cpp"]], "File MicroBitEddystone.cpp": [[254, "file-microbiteddystone-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitEddystone.cpp)": [[254, "definition-libraries-codal-microbit-v2-source-bluetooth-microbiteddystone-cpp"]], "File MicroBitEventService.cpp": [[255, "file-microbiteventservice-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitEventService.cpp)": [[255, "definition-libraries-codal-microbit-v2-source-bluetooth-microbiteventservice-cpp"]], "File MicroBitIOPinService.cpp": [[256, "file-microbitiopinservice-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitIOPinService.cpp)": [[256, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitiopinservice-cpp"]], "File MicroBitLEDService.cpp": [[257, "file-microbitledservice-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitLEDService.cpp)": [[257, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitledservice-cpp"]], "File MicroBitMagnetometerService.cpp": [[258, "file-microbitmagnetometerservice-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitMagnetometerService.cpp)": [[258, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitmagnetometerservice-cpp"]], "File MicroBitPartialFlashingService.cpp": [[259, "file-microbitpartialflashingservice-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitPartialFlashingService.cpp)": [[259, "definition-libraries-codal-microbit-v2-source-bluetooth-microbitpartialflashingservice-cpp"]], "File MicroBitTemperatureService.cpp": [[260, "file-microbittemperatureservice-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitTemperatureService.cpp)": [[260, "definition-libraries-codal-microbit-v2-source-bluetooth-microbittemperatureservice-cpp"]], "File MicroBitUARTService.cpp": [[261, "file-microbituartservice-cpp"]], "Definition (libraries/codal-microbit-v2/source/bluetooth/MicroBitUARTService.cpp)": [[261, "definition-libraries-codal-microbit-v2-source-bluetooth-microbituartservice-cpp"]], "File MbedMemberFunctionCallback.cpp": [[262, "file-mbedmemberfunctioncallback-cpp"]], "Definition (libraries/codal-microbit-v2/source/compat/MbedMemberFunctionCallback.cpp)": [[262, "definition-libraries-codal-microbit-v2-source-compat-mbedmemberfunctioncallback-cpp"]], "File MicroBitButton.cpp": [[263, "file-microbitbutton-cpp"]], "Definition (libraries/codal-microbit-v2/source/compat/MicroBitButton.cpp)": [[263, "definition-libraries-codal-microbit-v2-source-compat-microbitbutton-cpp"]], "File MicroBitI2C.cpp": [[264, "file-microbiti2c-cpp"]], "Definition (libraries/codal-microbit-v2/source/compat/MicroBitI2C.cpp)": [[264, "definition-libraries-codal-microbit-v2-source-compat-microbiti2c-cpp"]], "File MicroBitSerial.cpp": [[265, "file-microbitserial-cpp"]], "Definition (libraries/codal-microbit-v2/source/compat/MicroBitSerial.cpp)": [[265, "definition-libraries-codal-microbit-v2-source-compat-microbitserial-cpp"]], "File Hierarchy": [[266, "file-hierarchy"]], "Function asciiKeyMap": [[267, "function-asciikeymap"]], "Function Documentation": [[267, "function-documentation"], [268, "function-documentation"], [269, "function-documentation"], [270, "function-documentation"], [271, "function-documentation"], [272, "function-documentation"], [273, "function-documentation"], [274, "function-documentation"], [275, "function-documentation"], [276, "function-documentation"], [277, "function-documentation"], [278, "function-documentation"], [279, "function-documentation"], [280, "function-documentation"], [281, "function-documentation"], [282, "function-documentation"], [283, "function-documentation"], [284, "function-documentation"], [285, "function-documentation"], [286, "function-documentation"], [287, "function-documentation"], [288, "function-documentation"], [289, "function-documentation"], [290, "function-documentation"], [291, "function-documentation"], [292, "function-documentation"], [293, "function-documentation"], [294, "function-documentation"], [295, "function-documentation"], [296, "function-documentation"], [297, "function-documentation"], [298, "function-documentation"], [299, "function-documentation"], [300, "function-documentation"], [301, "function-documentation"], [302, "function-documentation"], [303, "function-documentation"], [304, "function-documentation"], [305, "function-documentation"], [306, "function-documentation"], [307, "function-documentation"], [308, "function-documentation"], [309, "function-documentation"], [310, "function-documentation"], [311, "function-documentation"], [312, "function-documentation"], [313, "function-documentation"], [314, "function-documentation"], [315, "function-documentation"], [316, "function-documentation"], [317, "function-documentation"], [318, "function-documentation"], [319, "function-documentation"], [320, "function-documentation"], [321, "function-documentation"], [322, "function-documentation"], [323, "function-documentation"], [324, "function-documentation"], [325, "function-documentation"], [326, "function-documentation"], [327, "function-documentation"], [328, "function-documentation"], [329, "function-documentation"], [330, "function-documentation"], [331, "function-documentation"], [332, "function-documentation"], [333, "function-documentation"], [334, "function-documentation"], [335, "function-documentation"], [336, "function-documentation"], [337, "function-documentation"], [338, "function-documentation"], [339, "function-documentation"], [340, "function-documentation"], [341, "function-documentation"], [342, "function-documentation"], [343, "function-documentation"], [344, "function-documentation"], [345, "function-documentation"], [346, "function-documentation"], [347, "function-documentation"], [348, "function-documentation"], [349, "function-documentation"], [350, "function-documentation"], [351, "function-documentation"]], "Function component_callback": [[268, "function-component-callback"]], "Function getFiberContext": [[269, "function-getfibercontext"]], "Function __create_fiber": [[270, "function-create-fiber"]], "Function handle_fob": [[271, "function-handle-fob"]], "Function CREATE_KEY_VALUE_TABLE(accelerometerPeriod, accelerometerPeriodData)": [[272, "function-create-key-value-table-accelerometerperiod-accelerometerperioddata"], [274, "function-create-key-value-table-accelerometerperiod-accelerometerperioddata"], [276, "function-create-key-value-table-accelerometerperiod-accelerometerperioddata"]], "Function CREATE_KEY_VALUE_TABLE(accelerometerRange, accelerometerRangeData)": [[273, "function-create-key-value-table-accelerometerrange-accelerometerrangedata"], [275, "function-create-key-value-table-accelerometerrange-accelerometerrangedata"], [277, "function-create-key-value-table-accelerometerrange-accelerometerrangedata"]], "Function CREATE_KEY_VALUE_TABLE(magnetometerPeriod, magnetometerPeriodData)": [[278, "function-create-key-value-table-magnetometerperiod-magnetometerperioddata"]], "Function if": [[279, "function-if"]], "Function ManagedString(codal::operator+)": [[280, "function-managedstring-codal-operator"]], "Function ManagedString(lhs, rhs)": [[281, "function-managedstring-lhs-rhs"]], "Function codal::allocateNotifyEvent": [[282, "function-codal-allocatenotifyevent"]], "Function async_callback": [[283, "function-async-callback"]], "Function getPullModeFronPinMode": [[284, "function-getpullmodefronpinmode"]], "Function codal::microbit_LEDMap_pinOutput": [[285, "function-codal-microbit-ledmap-pinoutput"]], "Function codal::microbit_LEDMap_configure": [[286, "function-codal-microbit-ledmap-configure"]], "Function codal::microbit_LEDMap_RCtoX": [[287, "function-codal-microbit-ledmap-rctox"]], "Function codal::microbit_LEDMap_rowOff": [[288, "function-codal-microbit-ledmap-rowoff"]], "Function codal::microbit_LEDMap_RCtoY": [[289, "function-codal-microbit-ledmap-rctoy"]], "Function codal::microbit_random": [[290, "function-codal-microbit-random"]], "Function codal::ble_running": [[291, "function-codal-ble-running"]], "Function codal::microbit_seed_random(uint32_t)": [[292, "function-codal-microbit-seed-random-uint32-t"]], "Function __attribute__((weak))": [[293, "function-attribute-weak"], [351, "function-attribute-weak"]], "Function codal::microbit_friendly_name": [[294, "function-codal-microbit-friendly-name"]], "Function codal::microbit_serial_number": [[295, "function-codal-microbit-serial-number"]], "Function codal::microbit_panic": [[296, "function-codal-microbit-panic"]], "Function codal::microbit_LEDMap_columnOn": [[297, "function-codal-microbit-ledmap-columnon"]], "Function codal::microbit_LEDMap_columnOff": [[298, "function-codal-microbit-ledmap-columnoff"]], "Function codal::microbit_panic_timeout": [[299, "function-codal-microbit-panic-timeout"]], "Function codal::microbit_seed_random()": [[300, "function-codal-microbit-seed-random"]], "Function codal::microbit_LEDMap_rowOn": [[301, "function-codal-microbit-ledmap-rowon"]], "Function codal::microbit_reset": [[302, "function-codal-microbit-reset"]], "Function btle_set_user_evt_handler(void(*)(uint32_t))": [[303, "function-btle-set-user-evt-handler-void-uint32-t"], [309, "function-btle-set-user-evt-handler-void-uint32-t"]], "Function padString": [[304, "function-padstring"]], "Function writeNum": [[305, "function-writenum"]], "Function CREATE_KEY_VALUE_TABLE(uipmPropertyLengths, uipmPropertyLengthData)": [[306, "function-create-key-value-table-uipmpropertylengths-uipmpropertylengthdata"]], "Function RADIO_IRQHandler": [[307, "function-radio-irqhandler"]], "Function CREATE_KEY_VALUE_TABLE(usbFlashPropertyLength, usbFlashPropertyLengthData)": [[308, "function-create-key-value-table-usbflashpropertylength-usbflashpropertylengthdata"]], "Function display_irq": [[310, "function-display-irq"]], "Function eightBitHash": [[311, "function-eightbithash"]], "Function isReadOnlyInline": [[312, "function-isreadonlyinline"]], "Function giggle": [[313, "function-giggle"]], "Function hello": [[314, "function-hello"]], "Function slideData": [[315, "function-slidedata"]], "Function sadData": [[316, "function-saddata"]], "Function slide": [[317, "function-slide"]], "Function soaringData": [[318, "function-soaringdata"]], "Function soaring": [[319, "function-soaring"]], "Function mysterious": [[320, "function-mysterious"]], "Function happyData": [[321, "function-happydata"]], "Function twinkleData": [[322, "function-twinkledata"]], "Function twinkle": [[323, "function-twinkle"]], "Function happy": [[324, "function-happy"]], "Function yawnData": [[325, "function-yawndata"]], "Function springData": [[326, "function-springdata"]], "Function giggleData": [[327, "function-giggledata"]], "Function sad": [[328, "function-sad"]], "Function mysteriousData": [[329, "function-mysteriousdata"]], "Function helloData": [[330, "function-hellodata"]], "Function yawn": [[331, "function-yawn"]], "Function spring": [[332, "function-spring"]], "Function calculateFrequencyFromProgression": [[333, "function-calculatefrequencyfromprogression"]], "Function write_sample_4": [[334, "function-write-sample-4"]], "Function read_sample_7": [[335, "function-read-sample-7"]], "Function read_sample_2": [[336, "function-read-sample-2"]], "Function read_sample_3": [[337, "function-read-sample-3"]], "Function read_sample_5": [[338, "function-read-sample-5"]], "Function write_sample_7": [[339, "function-write-sample-7"]], "Function write_sample_8": [[340, "function-write-sample-8"]], "Function write_sample_5_6": [[341, "function-write-sample-5-6"]], "Function read_sample_6": [[342, "function-read-sample-6"]], "Function write_sample_2": [[343, "function-write-sample-2"]], "Function read_sample_8": [[344, "function-read-sample-8"]], "Function read_sample_1": [[345, "function-read-sample-1"]], "Function write_sample_1": [[346, "function-write-sample-1"]], "Function write_sample_3": [[347, "function-write-sample-3"]], "Function read_sample_4": [[348, "function-read-sample-4"]], "Function begin_playback": [[349, "function-begin-playback"]], "Function timer_callback": [[350, "function-timer-callback"]], "Namespace codal": [[352, "namespace-codal"]], "Namespace std": [[353, "namespace-std"]], "Program Listing for File CodalCompat.cpp": [[355, "program-listing-for-file-codalcompat-cpp"]], "Program Listing for File CodalComponent.cpp": [[356, "program-listing-for-file-codalcomponent-cpp"]], "Program Listing for File CodalDevice.cpp": [[357, "program-listing-for-file-codaldevice-cpp"]], "Program Listing for File CodalDmesg.cpp": [[358, "program-listing-for-file-codaldmesg-cpp"]], "Program Listing for File CodalFiber.cpp": [[359, "program-listing-for-file-codalfiber-cpp"]], "Program Listing for File CodalHeapAllocator.cpp": [[360, "program-listing-for-file-codalheapallocator-cpp"]], "Program Listing for File CodalListener.cpp": [[361, "program-listing-for-file-codallistener-cpp"]], "Program Listing for File CodalUtil.cpp": [[362, "program-listing-for-file-codalutil-cpp"]], "Program Listing for File MemberFunctionCallback.cpp": [[363, "program-listing-for-file-memberfunctioncallback-cpp"]], "Program Listing for File codal_default_target_hal.cpp": [[364, "program-listing-for-file-codal-default-target-hal-cpp"]], "Program Listing for File AbstractButton.cpp": [[365, "program-listing-for-file-abstractbutton-cpp"]], "Program Listing for File Accelerometer.cpp": [[366, "program-listing-for-file-accelerometer-cpp"]], "Program Listing for File CodalUSB.cpp": [[367, "program-listing-for-file-codalusb-cpp"]], "Program Listing for File Compass.cpp": [[368, "program-listing-for-file-compass-cpp"]], "Program Listing for File Display.cpp": [[369, "program-listing-for-file-display-cpp"]], "Program Listing for File Gyroscope.cpp": [[370, "program-listing-for-file-gyroscope-cpp"]], "Program Listing for File I2C.cpp": [[371, "program-listing-for-file-i2c-cpp"]], "Program Listing for File PinPeripheral.cpp": [[372, "program-listing-for-file-pinperipheral-cpp"]], "Program Listing for File SPI.cpp": [[373, "program-listing-for-file-spi-cpp"]], "Program Listing for File Sensor.cpp": [[374, "program-listing-for-file-sensor-cpp"]], "Program Listing for File Serial.cpp": [[375, "program-listing-for-file-serial-cpp"]], "Program Listing for File Timer.cpp": [[376, "program-listing-for-file-timer-cpp"]], "Program Listing for File AnalogSensor.cpp": [[377, "program-listing-for-file-analogsensor-cpp"]], "Program Listing for File AnimatedDisplay.cpp": [[378, "program-listing-for-file-animateddisplay-cpp"]], "Program Listing for File AsciiKeyMap.cpp": [[379, "program-listing-for-file-asciikeymap-cpp"]], "Program Listing for File Button.cpp": [[380, "program-listing-for-file-button-cpp"]], "Program Listing for File FXOS8700.cpp": [[381, "program-listing-for-file-fxos8700-cpp"]], "Program Listing for File GhostFAT.cpp": [[382, "program-listing-for-file-ghostfat-cpp"]], "Program Listing for File HID.cpp": [[383, "program-listing-for-file-hid-cpp"]], "Program Listing for File HIDJoystick.cpp": [[384, "program-listing-for-file-hidjoystick-cpp"]], "Program Listing for File HIDKeyboard.cpp": [[385, "program-listing-for-file-hidkeyboard-cpp"]], "Program Listing for File HIDMouse.cpp": [[386, "program-listing-for-file-hidmouse-cpp"]], "Program Listing for File ILI9341.cpp": [[387, "program-listing-for-file-ili9341-cpp"]], "Program Listing for File KeyValueStorage.cpp": [[388, "program-listing-for-file-keyvaluestorage-cpp"]], "Program Listing for File LEDMatrix.cpp": [[389, "program-listing-for-file-ledmatrix-cpp"]], "Program Listing for File LIS3DH.cpp": [[390, "program-listing-for-file-lis3dh-cpp"]], "Program Listing for File LSM303Accelerometer.cpp": [[391, "program-listing-for-file-lsm303accelerometer-cpp"]], "Program Listing for File LSM303Magnetometer.cpp": [[392, "program-listing-for-file-lsm303magnetometer-cpp"]], "Program Listing for File LinearAnalogSensor.cpp": [[393, "program-listing-for-file-linearanalogsensor-cpp"]], "Program Listing for File MAG3110.cpp": [[394, "program-listing-for-file-mag3110-cpp"]], "Program Listing for File MMA8653.cpp": [[395, "program-listing-for-file-mma8653-cpp"]], "Program Listing for File MPU6050.cpp": [[396, "program-listing-for-file-mpu6050-cpp"]], "Program Listing for File MessageBus.cpp": [[397, "program-listing-for-file-messagebus-cpp"]], "Program Listing for File MultiButton.cpp": [[398, "program-listing-for-file-multibutton-cpp"]], "Program Listing for File NonLinearAnalogSensor.cpp": [[399, "program-listing-for-file-nonlinearanalogsensor-cpp"]], "Program Listing for File PearsonHash.cpp": [[400, "program-listing-for-file-pearsonhash-cpp"]], "Program Listing for File PulseIn.cpp": [[401, "program-listing-for-file-pulsein-cpp"]], "Program Listing for File ST7735.cpp": [[402, "program-listing-for-file-st7735-cpp"]], "Program Listing for File ScreenIO.cpp": [[403, "program-listing-for-file-screenio-cpp"]], "Program Listing for File StandardSPIFlash.cpp": [[404, "program-listing-for-file-standardspiflash-cpp"]], "Program Listing for File TouchButton.cpp": [[405, "program-listing-for-file-touchbutton-cpp"]], "Program Listing for File TouchSensor.cpp": [[406, "program-listing-for-file-touchsensor-cpp"]], "Program Listing for File USBMSC.cpp": [[407, "program-listing-for-file-usbmsc-cpp"]], "Program Listing for File DataStream.cpp": [[408, "program-listing-for-file-datastream-cpp"]], "Program Listing for File EffectFilter.cpp": [[409, "program-listing-for-file-effectfilter-cpp"]], "Program Listing for File FIFOStream.cpp": [[410, "program-listing-for-file-fifostream-cpp"]], "Program Listing for File LevelDetector.cpp": [[411, "program-listing-for-file-leveldetector-cpp"]], "Program Listing for File LevelDetectorSPL.cpp": [[412, "program-listing-for-file-leveldetectorspl-cpp"]], "Program Listing for File LowPassFilter.cpp": [[413, "program-listing-for-file-lowpassfilter-cpp"]], "Program Listing for File MemorySource.cpp": [[414, "program-listing-for-file-memorysource-cpp"]], "Program Listing for File Mixer.cpp": [[415, "program-listing-for-file-mixer-cpp"]], "Program Listing for File StreamFlowTrigger.cpp": [[416, "program-listing-for-file-streamflowtrigger-cpp"]], "Program Listing for File StreamNormalizer.cpp": [[417, "program-listing-for-file-streamnormalizer-cpp"]], "Program Listing for File StreamRecording.cpp": [[418, "program-listing-for-file-streamrecording-cpp"]], "Program Listing for File StreamSplitter.cpp": [[419, "program-listing-for-file-streamsplitter-cpp"]], "Program Listing for File Synthesizer.cpp": [[420, "program-listing-for-file-synthesizer-cpp"]], "Program Listing for File BitmapFont.cpp": [[421, "program-listing-for-file-bitmapfont-cpp"]], "Program Listing for File CoordinateSystem.cpp": [[422, "program-listing-for-file-coordinatesystem-cpp"]], "Program Listing for File Event.cpp": [[423, "program-listing-for-file-event-cpp"]], "Program Listing for File Image.cpp": [[424, "program-listing-for-file-image-cpp"]], "Program Listing for File ManagedBuffer.cpp": [[425, "program-listing-for-file-managedbuffer-cpp"]], "Program Listing for File ManagedString.cpp": [[426, "program-listing-for-file-managedstring-cpp"]], "Program Listing for File Matrix4.cpp": [[427, "program-listing-for-file-matrix4-cpp"]], "Program Listing for File RefCounted.cpp": [[428, "program-listing-for-file-refcounted-cpp"]], "Program Listing for File RefCountedInit.cpp": [[429, "program-listing-for-file-refcountedinit-cpp"]], "Program Listing for File FSCache.cpp": [[430, "program-listing-for-file-fscache-cpp"]], "Program Listing for File MicroBitAccelerometer.cpp": [[431, "program-listing-for-file-microbitaccelerometer-cpp"]], "Program Listing for File MicroBitAudio.cpp": [[432, "program-listing-for-file-microbitaudio-cpp"]], "Program Listing for File MicroBitCompass.cpp": [[433, "program-listing-for-file-microbitcompass-cpp"]], "Program Listing for File MicroBitCompassCalibrator.cpp": [[434, "program-listing-for-file-microbitcompasscalibrator-cpp"]], "Program Listing for File MicroBitCompat.cpp": [[435, "program-listing-for-file-microbitcompat-cpp"]], "Program Listing for File MicroBitDevice.cpp": [[436, "program-listing-for-file-microbitdevice-cpp"]], "Program Listing for File MicroBitDisplay.cpp": [[437, "program-listing-for-file-microbitdisplay-cpp"]], "Program Listing for File MicroBitFile.cpp": [[438, "program-listing-for-file-microbitfile-cpp"]], "Program Listing for File MicroBitFileSystem.cpp": [[439, "program-listing-for-file-microbitfilesystem-cpp"]], "Program Listing for File MicroBitFlash.cpp": [[440, "program-listing-for-file-microbitflash-cpp"]], "Program Listing for File MicroBitLog.cpp": [[441, "program-listing-for-file-microbitlog-cpp"]], "Program Listing for File MicroBitMemoryMap.cpp": [[442, "program-listing-for-file-microbitmemorymap-cpp"]], "Program Listing for File MicroBitPowerManager.cpp": [[443, "program-listing-for-file-microbitpowermanager-cpp"]], "Program Listing for File MicroBitRadio.cpp": [[444, "program-listing-for-file-microbitradio-cpp"]], "Program Listing for File MicroBitRadioDatagram.cpp": [[445, "program-listing-for-file-microbitradiodatagram-cpp"]], "Program Listing for File MicroBitRadioEvent.cpp": [[446, "program-listing-for-file-microbitradioevent-cpp"]], "Program Listing for File MicroBitThermometer.cpp": [[447, "program-listing-for-file-microbitthermometer-cpp"]], "Program Listing for File MicroBitUSBFlashManager.cpp": [[448, "program-listing-for-file-microbitusbflashmanager-cpp"]], "Program Listing for File MicroSynth.cpp": [[449, "program-listing-for-file-microsynth-cpp"]], "Program Listing for File Mixer2.cpp": [[450, "program-listing-for-file-mixer2-cpp"]], "Program Listing for File NRF52FlashManager.cpp": [[451, "program-listing-for-file-nrf52flashmanager-cpp"]], "Program Listing for File NRF52LedMatrix.cpp": [[452, "program-listing-for-file-nrf52ledmatrix-cpp"]], "Program Listing for File PacketBuffer.cpp": [[453, "program-listing-for-file-packetbuffer-cpp"]], "Program Listing for File SoundEmojiSynthesizer.cpp": [[454, "program-listing-for-file-soundemojisynthesizer-cpp"]], "Program Listing for File SoundExpressions.cpp": [[455, "program-listing-for-file-soundexpressions-cpp"]], "Program Listing for File SoundOutputPin.cpp": [[456, "program-listing-for-file-soundoutputpin-cpp"]], "Program Listing for File SoundSynthesizerEffects.cpp": [[457, "program-listing-for-file-soundsynthesizereffects-cpp"]], "Program Listing for File MicroBitAccelerometerService.cpp": [[458, "program-listing-for-file-microbitaccelerometerservice-cpp"]], "Program Listing for File MicroBitBLEChar.cpp": [[459, "program-listing-for-file-microbitblechar-cpp"]], "Program Listing for File MicroBitBLEManager.cpp": [[460, "program-listing-for-file-microbitblemanager-cpp"]], "Program Listing for File MicroBitBLEService.cpp": [[461, "program-listing-for-file-microbitbleservice-cpp"]], "Program Listing for File MicroBitBLEServices.cpp": [[462, "program-listing-for-file-microbitbleservices-cpp"]], "Program Listing for File MicroBitBLETypes.cpp": [[463, "program-listing-for-file-microbitbletypes-cpp"]], "Program Listing for File MicroBitButtonService.cpp": [[464, "program-listing-for-file-microbitbuttonservice-cpp"]], "Program Listing for File MicroBitEddystone.cpp": [[465, "program-listing-for-file-microbiteddystone-cpp"]], "Program Listing for File MicroBitEventService.cpp": [[466, "program-listing-for-file-microbiteventservice-cpp"]], "Program Listing for File MicroBitIOPinService.cpp": [[467, "program-listing-for-file-microbitiopinservice-cpp"]], "Program Listing for File MicroBitLEDService.cpp": [[468, "program-listing-for-file-microbitledservice-cpp"]], "Program Listing for File MicroBitMagnetometerService.cpp": [[469, "program-listing-for-file-microbitmagnetometerservice-cpp"]], "Program Listing for File MicroBitPartialFlashingService.cpp": [[470, "program-listing-for-file-microbitpartialflashingservice-cpp"]], "Program Listing for File MicroBitTemperatureService.cpp": [[471, "program-listing-for-file-microbittemperatureservice-cpp"]], "Program Listing for File MicroBitUARTService.cpp": [[472, "program-listing-for-file-microbituartservice-cpp"]], "Program Listing for File MbedMemberFunctionCallback.cpp": [[473, "program-listing-for-file-mbedmemberfunctioncallback-cpp"]], "Program Listing for File MicroBitButton.cpp": [[474, "program-listing-for-file-microbitbutton-cpp"]], "Program Listing for File MicroBitI2C.cpp": [[475, "program-listing-for-file-microbiti2c-cpp"]], "Program Listing for File MicroBitSerial.cpp": [[476, "program-listing-for-file-microbitserial-cpp"]], "CODAL API": [[477, "codal-api"]], "Full API": [[477, "full-api"], [483, "full-api"], [484, "full-api"]], "Classes and Structs": [[477, "classes-and-structs"], [483, "classes-and-structs"]], "Struct ST7735WorkBuffer": [[478, "struct-st7735workbuffer"]], "Struct Documentation": [[478, "struct-documentation"], [479, "struct-documentation"]], "Struct microbit_LEDMapStr": [[479, "struct-microbit-ledmapstr"]], "Typedef codal::microbit_LEDMapFnRCtoXY": [[480, "typedef-codal-microbit-ledmapfnrctoxy"]], "Typedef Documentation": [[480, "typedef-documentation"], [481, "typedef-documentation"], [482, "typedef-documentation"]], "Typedef codal::microbit_LEDMapStr": [[481, "typedef-codal-microbit-ledmapstr"]], "Typedef codal::microbit_LEDMapPinNumber": [[482, "typedef-codal-microbit-ledmappinnumber"]], "Directories": [[484, "directories"]], "Variable seq_A": [[485, "variable-seq-a"]], "Variable Documentation": [[485, "variable-documentation"], [486, "variable-documentation"], [487, "variable-documentation"], [488, "variable-documentation"], [489, "variable-documentation"], [490, "variable-documentation"], [491, "variable-documentation"], [492, "variable-documentation"], [493, "variable-documentation"], [494, "variable-documentation"], [495, "variable-documentation"], [496, "variable-documentation"], [497, "variable-documentation"], [498, "variable-documentation"], [499, "variable-documentation"], [500, "variable-documentation"], [501, "variable-documentation"], [502, "variable-documentation"], [503, "variable-documentation"], [504, "variable-documentation"], [505, "variable-documentation"], [506, "variable-documentation"], [507, "variable-documentation"], [508, "variable-documentation"], [509, "variable-documentation"], [510, "variable-documentation"], [511, "variable-documentation"], [512, "variable-documentation"], [513, "variable-documentation"], [514, "variable-documentation"], [515, "variable-documentation"], [516, "variable-documentation"], [517, "variable-documentation"], [518, "variable-documentation"], [519, "variable-documentation"], [520, "variable-documentation"], [521, "variable-documentation"], [522, "variable-documentation"], [523, "variable-documentation"], [524, "variable-documentation"], [525, "variable-documentation"], [526, "variable-documentation"], [527, "variable-documentation"], [528, "variable-documentation"], [529, "variable-documentation"], [530, "variable-documentation"], [531, "variable-documentation"], [532, "variable-documentation"], [533, "variable-documentation"], [534, "variable-documentation"], [535, "variable-documentation"], [536, "variable-documentation"], [537, "variable-documentation"], [538, "variable-documentation"], [539, "variable-documentation"], [540, "variable-documentation"], [541, "variable-documentation"], [542, "variable-documentation"], [543, "variable-documentation"], [544, "variable-documentation"], [545, "variable-documentation"], [546, "variable-documentation"], [547, "variable-documentation"], [548, "variable-documentation"], [549, "variable-documentation"], [550, "variable-documentation"], [551, "variable-documentation"], [552, "variable-documentation"], [553, "variable-documentation"], [554, "variable-documentation"], [555, "variable-documentation"], [556, "variable-documentation"], [557, "variable-documentation"], [558, "variable-documentation"], [559, "variable-documentation"], [560, "variable-documentation"], [561, "variable-documentation"], [562, "variable-documentation"], [563, "variable-documentation"], [564, "variable-documentation"], [565, "variable-documentation"], [566, "variable-documentation"], [567, "variable-documentation"], [568, "variable-documentation"], [569, "variable-documentation"], [570, "variable-documentation"], [571, "variable-documentation"], [572, "variable-documentation"], [573, "variable-documentation"], [574, "variable-documentation"], [575, "variable-documentation"], [576, "variable-documentation"], [577, "variable-documentation"], [578, "variable-documentation"], [579, "variable-documentation"], [580, "variable-documentation"], [581, "variable-documentation"], [582, "variable-documentation"], [583, "variable-documentation"], [584, "variable-documentation"], [585, "variable-documentation"], [586, "variable-documentation"], [587, "variable-documentation"], [588, "variable-documentation"], [589, "variable-documentation"], [590, "variable-documentation"], [591, "variable-documentation"], [592, "variable-documentation"], [593, "variable-documentation"], [594, "variable-documentation"], [595, "variable-documentation"], [596, "variable-documentation"], [597, "variable-documentation"], [598, "variable-documentation"], [599, "variable-documentation"], [600, "variable-documentation"], [601, "variable-documentation"], [602, "variable-documentation"], [603, "variable-documentation"], [604, "variable-documentation"], [605, "variable-documentation"], [606, "variable-documentation"], [607, "variable-documentation"], [608, "variable-documentation"], [609, "variable-documentation"], [610, "variable-documentation"], [611, "variable-documentation"], [612, "variable-documentation"], [613, "variable-documentation"], [614, "variable-documentation"], [615, "variable-documentation"], [616, "variable-documentation"], [617, "variable-documentation"], [618, "variable-documentation"], [619, "variable-documentation"], [620, "variable-documentation"], [621, "variable-documentation"], [622, "variable-documentation"], [623, "variable-documentation"], [624, "variable-documentation"], [625, "variable-documentation"], [626, "variable-documentation"], [627, "variable-documentation"], [628, "variable-documentation"], [629, "variable-documentation"], [630, "variable-documentation"], [631, "variable-documentation"], [632, "variable-documentation"], [633, "variable-documentation"], [634, "variable-documentation"], [635, "variable-documentation"], [636, "variable-documentation"], [637, "variable-documentation"], [638, "variable-documentation"], [639, "variable-documentation"], [640, "variable-documentation"], [641, "variable-documentation"]], "Variable seq_y": [[486, "variable-seq-y"]], "Variable seq_slash": [[487, "variable-seq-slash"]], "Variable seq_K": [[488, "variable-seq-k"]], "Variable unmapped": [[489, "variable-unmapped"]], "Variable seq_5": [[490, "variable-seq-5"]], "Variable seq_S": [[491, "variable-seq-s"]], "Variable seq_E": [[492, "variable-seq-e"]], "Variable seq_g": [[493, "variable-seq-g"]], "Variable seq_space": [[494, "variable-seq-space"]], "Variable seq_7": [[495, "variable-seq-7"]], "Variable seq_x": [[496, "variable-seq-x"]], "Variable seq_H": [[497, "variable-seq-h"]], "Variable seq_apostrophe": [[498, "variable-seq-apostrophe"]], "Variable seq_9": [[499, "variable-seq-9"]], "Variable seq_backslash": [[500, "variable-seq-backslash"]], "Variable seq_L": [[501, "variable-seq-l"]], "Variable seq_question": [[502, "variable-seq-question"]], "Variable seq_amp": [[503, "variable-seq-amp"]], "Variable seq_tilda": [[504, "variable-seq-tilda"]], "Variable seq_m": [[505, "variable-seq-m"]], "Variable seq_G": [[506, "variable-seq-g"]], "Variable seq_b": [[507, "variable-seq-b"]], "Variable seq_Z": [[508, "variable-seq-z"]], "Variable seq_right_paren": [[509, "variable-seq-right-paren"]], "Variable seq_w": [[510, "variable-seq-w"]], "Variable seq_q": [[511, "variable-seq-q"]], "Variable seq_percent": [[512, "variable-seq-percent"]], "Variable seq_angle_right": [[513, "variable-seq-angle-right"]], "Variable seq_J": [[514, "variable-seq-j"]], "Variable seq_plus": [[515, "variable-seq-plus"]], "Variable seq_backspace": [[516, "variable-seq-backspace"]], "Variable seq_ast": [[517, "variable-seq-ast"]], "Variable seq_k": [[518, "variable-seq-k"]], "Variable seq_quote": [[519, "variable-seq-quote"]], "Variable seq_8": [[520, "variable-seq-8"]], "Variable seq_equal": [[521, "variable-seq-equal"]], "Variable seq_V": [[522, "variable-seq-v"]], "Variable seq_brace_left": [[523, "variable-seq-brace-left"]], "Variable seq_semicolon": [[524, "variable-seq-semicolon"]], "Variable seq_D": [[525, "variable-seq-d"]], "Variable seq_newline": [[526, "variable-seq-newline"]], "Variable seq_P": [[527, "variable-seq-p"]], "Variable seq_X": [[528, "variable-seq-x"]], "Variable seq_s": [[529, "variable-seq-s"]], "Variable seq_R": [[530, "variable-seq-r"]], "Variable seq_N": [[531, "variable-seq-n"]], "Variable seq_pound": [[532, "variable-seq-pound"]], "Variable seq_B": [[533, "variable-seq-b"]], "Variable seq_c": [[534, "variable-seq-c"]], "Variable seq_pipe": [[535, "variable-seq-pipe"]], "Variable seq_del": [[536, "variable-seq-del"]], "Variable seq_F": [[537, "variable-seq-f"]], "Variable seq_O": [[538, "variable-seq-o"]], "Variable seq_1": [[539, "variable-seq-1"]], "Variable seq_left_paren": [[540, "variable-seq-left-paren"]], "Variable seq_4": [[541, "variable-seq-4"]], "Variable seq_at": [[542, "variable-seq-at"]], "Variable seq_I": [[543, "variable-seq-i"]], "Variable seq_z": [[544, "variable-seq-z"]], "Variable seq_dot": [[545, "variable-seq-dot"]], "Variable seq_W": [[546, "variable-seq-w"]], "Variable seq_Q": [[547, "variable-seq-q"]], "Variable seq_n": [[548, "variable-seq-n"]], "Variable seq_colon": [[549, "variable-seq-colon"]], "Variable seq_angle_left": [[550, "variable-seq-angle-left"]], "Variable seq_minus": [[551, "variable-seq-minus"]], "Variable seq_i": [[552, "variable-seq-i"]], "Variable seq_a": [[553, "variable-seq-a"]], "Variable seq_e": [[554, "variable-seq-e"]], "Variable seq_dollar": [[555, "variable-seq-dollar"]], "Variable seq_j": [[556, "variable-seq-j"]], "Variable seq_p": [[557, "variable-seq-p"]], "Variable seq_brace_right": [[558, "variable-seq-brace-right"]], "Variable seq_d": [[559, "variable-seq-d"]], "Variable seq_U": [[560, "variable-seq-u"]], "Variable seq_l": [[561, "variable-seq-l"]], "Variable seq_C": [[562, "variable-seq-c"]], "Variable seq_M": [[563, "variable-seq-m"]], "Variable seq_comma": [[564, "variable-seq-comma"]], "Variable seq_underscore": [[565, "variable-seq-underscore"]], "Variable seq_f": [[566, "variable-seq-f"]], "Variable seq_curly_left": [[567, "variable-seq-curly-left"]], "Variable seq_t": [[568, "variable-seq-t"]], "Variable seq_v": [[569, "variable-seq-v"]], "Variable seq_Y": [[570, "variable-seq-y"]], "Variable seq_tab": [[571, "variable-seq-tab"]], "Variable seq_0": [[572, "variable-seq-0"]], "Variable seq_hat": [[573, "variable-seq-hat"]], "Variable seq_exclamation_point": [[574, "variable-seq-exclamation-point"]], "Variable seq_r": [[575, "variable-seq-r"]], "Variable seq_2": [[576, "variable-seq-2"]], "Variable seq_grave": [[577, "variable-seq-grave"]], "Variable seq_T": [[578, "variable-seq-t"]], "Variable seq_6": [[579, "variable-seq-6"]], "Variable seq_curly_right": [[580, "variable-seq-curly-right"]], "Variable seq_o": [[581, "variable-seq-o"]], "Variable ascii_keymap": [[582, "variable-ascii-keymap"]], "Variable seq_3": [[583, "variable-seq-3"]], "Variable seq_u": [[584, "variable-seq-u"]], "Variable seq_h": [[585, "variable-seq-h"]], "Variable pendolino3": [[586, "variable-pendolino3"]], "Variable random_value": [[587, "variable-random-value"]], "Variable codal::waitQueue": [[588, "variable-codal-waitqueue"]], "Variable codal::runQueue": [[589, "variable-codal-runqueue"]], "Variable codal::idleFiber": [[590, "variable-codal-idlefiber"]], "Variable codal::currentFiber": [[591, "variable-codal-currentfiber"]], "Variable codal::sleepQueue": [[592, "variable-codal-sleepqueue"]], "Variable codal::fiber_flags": [[593, "variable-codal-fiber-flags"]], "Variable codal::forkedFiber": [[594, "variable-codal-forkedfiber"]], "Variable codal::fiberList": [[595, "variable-codal-fiberlist"]], "Variable codal::fiberPool": [[596, "variable-codal-fiberpool"]], "Variable codal::messageBus": [[597, "variable-codal-messagebus"]], "Variable accelerometerRangeData": [[598, "variable-accelerometerrangedata"], [602, "variable-accelerometerrangedata"], [604, "variable-accelerometerrangedata"]], "Variable accelerometerPeriodData": [[599, "variable-accelerometerperioddata"], [603, "variable-accelerometerperioddata"], [605, "variable-accelerometerperioddata"]], "Variable initcmd": [[600, "variable-initcmd"]], "Variable greyScaleTimings": [[601, "variable-greyscaletimings"]], "Variable magnetometerPeriodData": [[606, "variable-magnetometerperioddata"]], "Variable MAG3110SampleRate": [[607, "variable-mag3110samplerate"]], "Variable MMA8653SampleRange": [[608, "variable-mma8653samplerange"]], "Variable MMA8653SampleRate": [[609, "variable-mma8653samplerate"]], "Variable rhs": [[610, "variable-rhs"]], "Variable userNotifyId": [[611, "variable-usernotifyid"]], "Variable codal::microbit_LEDMap_rowPins": [[612, "variable-codal-microbit-ledmap-rowpins"]], "Variable codal::panic_timeout": [[613, "variable-codal-panic-timeout"]], "Variable codal::panic_face": [[614, "variable-codal-panic-face"]], "Variable microbit_device_instance": [[615, "variable-microbit-device-instance"]], "Variable codal::microbit_LEDMap": [[616, "variable-codal-microbit-ledmap"]], "Variable codal::microbit_LEDMap_columnPins": [[617, "variable-codal-microbit-ledmap-columnpins"]], "Variable friendly_name": [[618, "variable-friendly-name"]], "Variable defaultScratchPage": [[619, "variable-defaultscratchpage"]], "Variable flash_op_complete": [[620, "variable-flash-op-complete"], [625, "variable-flash-op-complete"]], "Variable UIPM_I2C_NOP": [[621, "variable-uipm-i2c-nop"]], "Variable uipmPropertyLengthData": [[622, "variable-uipmpropertylengthdata"]], "Variable MICROBIT_RADIO_POWER_LEVEL": [[623, "variable-microbit-radio-power-level"]], "Variable usbFlashPropertyLengthData": [[624, "variable-usbflashpropertylengthdata"]], "Variable instance": [[626, "variable-instance"]], "Variable hashTable": [[627, "variable-hashtable"]], "Variable codal::initCmds": [[628, "variable-codal-initcmds"]], "Variable _majorScale": [[629, "variable-majorscale"]], "Variable _pentatonicScale": [[630, "variable-pentatonicscale"]], "Variable _minorTriad": [[631, "variable-minortriad"]], "Variable _diminished": [[632, "variable-diminished"]], "Variable _majorTriad": [[633, "variable-majortriad"]], "Variable _wholeTone": [[634, "variable-wholetone"]], "Variable _minorScale": [[635, "variable-minorscale"]], "Variable _chromatic": [[636, "variable-chromatic"]], "Variable sineTone": [[637, "variable-sinetone"]], "Variable cycleScale": [[638, "variable-cyclescale"]], "Variable p": [[639, "variable-p"]], "Variable old": [[640, "variable-old"]], "Variable value": [[641, "variable-value"]], "The Complete CODAL API": [[642, "the-complete-codal-api"]], "Getting Started with CODAL": [[643, "getting-started-with-codal"]], "What is CODAL?": [[643, "what-is-codal"]], "What is a device abstraction?": [[643, "what-is-a-device-abstraction"]], "What is a \u201cComponent\u201d?": [[643, "what-is-a-component"]], "C++ for the micro:bit": [[643, "c-for-the-micro-bit"]], "Concurrency": [[643, "concurrency"]], "Events": [[643, "events"]], "Creating Events": [[643, "creating-events"]], "Detecting Events": [[643, "detecting-events"]], "Todo": [[643, "id5"]], "Build Tools": [[643, "build-tools"]], "Projects and Guides": [[643, "projects-and-guides"]], "Holding Zone (Temp)": [[643, "holding-zone-temp"]], "Glossary of Terms": [[644, "glossary-of-terms"]], "CODAL Projects": [[645, "codal-projects"]], "Creating New Projects (CODAL Bootstrap)": [[645, "creating-new-projects-codal-bootstrap"]], "Setting up a Visual Studio Code Environment": [[645, "setting-up-a-visual-studio-code-environment"]], "Debugging in Visual Studio Code": [[645, "debugging-in-visual-studio-code"]], "Older Projects": [[645, "older-projects"]], "Guides": [[646, "guides"]], "Contents:": [[646, null], [654, null]], "Installation - Tools": [[647, "installation-tools"]], "Windows Instructions": [[647, "windows-instructions"]], "Using Windows Package Manager": [[647, "using-windows-package-manager"]], "Additional Dependencies": [[647, "additional-dependencies"]], "Mac Instructions": [[647, "mac-instructions"]], "Linux Instructions": [[647, "linux-instructions"]], "Debian/Ubuntu (and other APT-based systems)": [[647, "debian-ubuntu-and-other-apt-based-systems"]], "Manjaro/Arch (and other Pacman-based systems)": [[647, "manjaro-arch-and-other-pacman-based-systems"]], "Optional Dependencies": [[647, "optional-dependencies"]], "CODAL Documentation": [[648, "codal-documentation"]], "Memory and Storage": [[649, "memory-and-storage"]], "Memory and Components": [[649, null]], "ManagedString": [[650, "managedstring"]], "Creating Strings": [[650, "creating-strings"]], "Manipulating Strings": [[650, "manipulating-strings"]], "MicroBitImage": [[651, "microbitimage"]], "Creating Images": [[651, "creating-images"]], "Manipulating Images": [[651, "manipulating-images"]], "Comparing and Assigning Images": [[651, "comparing-and-assigning-images"]], "Storing Images in Flash Memory": [[651, "storing-images-in-flash-memory"]], "PacketBuffer": [[652, "packetbuffer"]], "Manipulating PacketBuffers": [[652, "manipulating-packetbuffers"]], "Disco Lights": [[653, "disco-lights"]], "Step 1. Initial Setup": [[653, "step-1-initial-setup"]], "Step 2. Turning on the screen": [[653, "step-2-turning-on-the-screen"]], "Step 3. Reading from the Microphone": [[653, "step-3-reading-from-the-microphone"]], "Step 4. Adding the Fade Effect": [[653, "step-4-adding-the-fade-effect"]], "Projects": [[654, "projects"]], "uBit.accelerometer": [[655, "ubit-accelerometer"]], "Real-Time Updates": [[655, "real-time-updates"], [658, "real-time-updates"]], "uBit.audio": [[656, "ubit-audio"]], "Buttons and Touch Input": [[657, "buttons-and-touch-input"]], "uBit.compass": [[658, "ubit-compass"]], "Read Current Values": [[658, "read-current-values"]], "Calibration": [[658, "calibration"]], "Requesting Data": [[658, "requesting-data"]], "uBit.display": [[659, "ubit-display"]], "Capabilities": [[659, "capabilities"]], "Using the Display": [[659, "using-the-display"]], "Scrolling Text": [[659, "scrolling-text"]], "Printing Text": [[659, "printing-text"]], "Showing Images": [[659, "showing-images"]], "Running in the Background\u2026": [[659, "running-in-the-background"]], "Changing Display Mode": [[659, "changing-display-mode"]], "Accessing the Display Buffer": [[659, "accessing-the-display-buffer"]], "Other Useful Functions": [[659, "other-useful-functions"]], "Useful Methods": [[659, "useful-methods"]], "Synchronous Methods": [[659, "synchronous-methods"]], "Asynchronous Methods": [[659, "asynchronous-methods"]], "Edge Connector": [[660, "edge-connector"]], "The uBit Object": [[661, "the-ubit-object"]], "uBit Components": [[661, null]], "uBit.serial": [[662, "ubit-serial"]], "Serial Modes": [[662, "serial-modes"]], "Serial Debug": [[662, "serial-debug"]], "uBit.storage": [[663, "ubit-storage"]], "What is flash memory?": [[663, "what-is-flash-memory"]], "Operations": [[663, "operations"]], "uBit.thermometer": [[664, "ubit-thermometer"]], "Real time updates": [[664, "real-time-updates"]]}, "indexentries": {"codal::allocatenotifyevent (c++ function)": [[282, "_CPPv4N5codal19allocateNotifyEventEv"]], "codal::microbit_ledmap_pinoutput (c++ function)": [[285, "_CPPv4N5codal25microbit_LEDMap_pinOutputE7uint8_t"]], "codal::microbit_ledmap_configure (c++ function)": [[286, "_CPPv4N5codal25microbit_LEDMap_configureEv"]], "codal::microbit_ledmap_rctox (c++ function)": [[287, "_CPPv4N5codal21microbit_LEDMap_RCtoXEii"]], "codal::microbit_ledmap_rowoff (c++ function)": [[288, "_CPPv4N5codal22microbit_LEDMap_rowOffEi"]], "codal::microbit_ledmap_rctoy (c++ function)": [[289, "_CPPv4N5codal21microbit_LEDMap_RCtoYEii"]], "codal::microbit_random (c++ function)": [[290, "_CPPv4N5codal15microbit_randomEi"]], "codal::ble_running (c++ function)": [[291, "_CPPv4N5codal11ble_runningEv"]], "codal::microbit_seed_random (c++ function)": [[292, "_CPPv4N5codal20microbit_seed_randomE8uint32_t"], [300, "_CPPv4N5codal20microbit_seed_randomEv"]], "codal::microbit_friendly_name (c++ function)": [[294, "_CPPv4N5codal22microbit_friendly_nameEv"]], "codal::microbit_serial_number (c++ function)": [[295, "_CPPv4N5codal22microbit_serial_numberEv"]], "codal::microbit_panic (c++ function)": [[296, "_CPPv4N5codal14microbit_panicEi"]], "codal::microbit_ledmap_columnon (c++ function)": [[297, "_CPPv4N5codal24microbit_LEDMap_columnOnEib"]], "codal::microbit_ledmap_columnoff (c++ function)": [[298, "_CPPv4N5codal25microbit_LEDMap_columnOffEi"]], "codal::microbit_panic_timeout (c++ function)": [[299, "_CPPv4N5codal22microbit_panic_timeoutEi"]], "codal::microbit_ledmap_rowon (c++ function)": [[301, "_CPPv4N5codal21microbit_LEDMap_rowOnEi"]], "codal::microbit_reset (c++ function)": [[302, "_CPPv4N5codal14microbit_resetEv"]], "codal::st7735workbuffer (c++ struct)": [[478, "_CPPv4N5codal16ST7735WorkBufferE"]], "codal::st7735workbuffer::databuf (c++ member)": [[478, "_CPPv4N5codal16ST7735WorkBuffer7dataBufE"]], "codal::st7735workbuffer::exppalette (c++ member)": [[478, "_CPPv4N5codal16ST7735WorkBuffer10expPaletteE"]], "codal::st7735workbuffer::height (c++ member)": [[478, "_CPPv4N5codal16ST7735WorkBuffer6heightE"]], "codal::st7735workbuffer::inprogress (c++ member)": [[478, "_CPPv4N5codal16ST7735WorkBuffer10inProgressE"]], "codal::st7735workbuffer::palettetable (c++ member)": [[478, "_CPPv4N5codal16ST7735WorkBuffer12paletteTableE"]], "codal::st7735workbuffer::srcleft (c++ member)": [[478, "_CPPv4N5codal16ST7735WorkBuffer7srcLeftE"]], "codal::st7735workbuffer::srcptr (c++ member)": [[478, "_CPPv4N5codal16ST7735WorkBuffer6srcPtrE"]], "codal::st7735workbuffer::width (c++ member)": [[478, "_CPPv4N5codal16ST7735WorkBuffer5widthE"]], "codal::st7735workbuffer::x (c++ member)": [[478, "_CPPv4N5codal16ST7735WorkBuffer1xE"]], "codal::microbit_ledmapstr (c++ struct)": [[479, "_CPPv4N5codal18microbit_LEDMapStrE"]], "codal::microbit_ledmapstr::columnpins (c++ member)": [[479, "_CPPv4N5codal18microbit_LEDMapStr10columnPinsE"]], "codal::microbit_ledmapstr::columns (c++ member)": [[479, "_CPPv4N5codal18microbit_LEDMapStr7columnsE"]], "codal::microbit_ledmapstr::height (c++ member)": [[479, "_CPPv4N5codal18microbit_LEDMapStr6heightE"]], "codal::microbit_ledmapstr::maprctox (c++ member)": [[479, "_CPPv4N5codal18microbit_LEDMapStr8mapRCtoXE"]], "codal::microbit_ledmapstr::maprctoy (c++ member)": [[479, "_CPPv4N5codal18microbit_LEDMapStr8mapRCtoYE"]], "codal::microbit_ledmapstr::rowpins (c++ member)": [[479, "_CPPv4N5codal18microbit_LEDMapStr7rowPinsE"]], "codal::microbit_ledmapstr::rows (c++ member)": [[479, "_CPPv4N5codal18microbit_LEDMapStr4rowsE"]], "codal::microbit_ledmapstr::width (c++ member)": [[479, "_CPPv4N5codal18microbit_LEDMapStr5widthE"]], "codal::microbit_ledmapfnrctoxy (c++ type)": [[480, "_CPPv4N5codal23microbit_LEDMapFnRCtoXYE"]], "codal::microbit_ledmapstr (c++ type)": [[481, "_CPPv4N5codal18microbit_LEDMapStrE"]], "codal::microbit_ledmappinnumber (c++ type)": [[482, "_CPPv4N5codal24microbit_LEDMapPinNumberE"]], "codal::waitqueue (c++ member)": [[588, "_CPPv4N5codal9waitQueueE"]], "codal::runqueue (c++ member)": [[589, "_CPPv4N5codal8runQueueE"]], "codal::idlefiber (c++ member)": [[590, "_CPPv4N5codal9idleFiberE"]], "codal::currentfiber (c++ member)": [[591, "_CPPv4N5codal12currentFiberE"]], "codal::sleepqueue (c++ member)": [[592, "_CPPv4N5codal10sleepQueueE"]], "codal::fiber_flags (c++ member)": [[593, "_CPPv4N5codal11fiber_flagsE"]], "codal::forkedfiber (c++ member)": [[594, "_CPPv4N5codal11forkedFiberE"]], "codal::fiberlist (c++ member)": [[595, "_CPPv4N5codal9fiberListE"]], "codal::fiberpool (c++ member)": [[596, "_CPPv4N5codal9fiberPoolE"]], "codal::messagebus (c++ member)": [[597, "_CPPv4N5codal10messageBusE"]], "codal::microbit_ledmap_rowpins (c++ member)": [[612, "_CPPv4N5codal23microbit_LEDMap_rowPinsE"]], "codal::panic_timeout (c++ member)": [[613, "_CPPv4N5codal13panic_timeoutE"]], "codal::panic_face (c++ member)": [[614, "_CPPv4N5codal10panic_faceE"]], "codal::microbit_ledmap (c++ member)": [[616, "_CPPv4N5codal15microbit_LEDMapE"]], "codal::microbit_ledmap_columnpins (c++ member)": [[617, "_CPPv4N5codal26microbit_LEDMap_columnPinsE"]], "codal::initcmds (c++ member)": [[628, "_CPPv4N5codal8initCmdsE"]]}})